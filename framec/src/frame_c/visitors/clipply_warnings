warning: unneeded unit expression
   --> src/frame_c/symbol_table.rs:214:17
    |
214 |                 ()
    |                 ^^ help: remove the final `()`
    |
    = note: `#[warn(clippy::unused_unit)]` on by default
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit

warning: unneeded unit expression
   --> src/frame_c/symbol_table.rs:220:17
    |
220 |                 ()
    |                 ^^ help: remove the final `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit

warning: unneeded unit expression
   --> src/frame_c/symbol_table.rs:226:17
    |
226 |                 ()
    |                 ^^ help: remove the final `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit

warning: unneeded unit expression
   --> src/frame_c/symbol_table.rs:232:17
    |
232 |                 ()
    |                 ^^ help: remove the final `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit

warning: unneeded unit expression
   --> src/frame_c/symbol_table.rs:238:17
    |
238 |                 ()
    |                 ^^ help: remove the final `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit

warning: unneeded unit expression
   --> src/frame_c/symbol_table.rs:244:17
    |
244 |                 ()
    |                 ^^ help: remove the final `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit

warning: unneeded unit expression
   --> src/frame_c/symbol_table.rs:250:17
    |
250 |                 ()
    |                 ^^ help: remove the final `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit

warning: unneeded unit expression
   --> src/frame_c/symbol_table.rs:256:17
    |
256 |                 ()
    |                 ^^ help: remove the final `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit

warning: redundant field names in struct initialization
   --> src/frame_c/symbol_table.rs:254:96
    |
254 | ...ParamsScopeSymbolT { event_handler_params_scope_symbol_rcref:event_handler_params_scope_symbol_rcref }));
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `event_handler_params_scope_symbol_rcref`
    |
    = note: `#[warn(clippy::redundant_field_names)]` on by default
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names

warning: unneeded unit expression
   --> src/frame_c/symbol_table.rs:262:17
    |
262 |                 ()
    |                 ^^ help: remove the final `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit

warning: unneeded unit expression
   --> src/frame_c/symbol_table.rs:268:17
    |
268 |                 ()
    |                 ^^ help: remove the final `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit

warning: unneeded unit expression
   --> src/frame_c/symbol_table.rs:274:17
    |
274 |                 ()
    |                 ^^ help: remove the final `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit

warning: unneeded unit expression
   --> src/frame_c/symbol_table.rs:285:17
    |
285 |                 ()
    |                 ^^ help: remove the final `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit

warning: unneeded unit expression
   --> src/frame_c/symbol_table.rs:291:17
    |
291 |                 ()
    |                 ^^ help: remove the final `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit

warning: unneeded unit expression
   --> src/frame_c/symbol_table.rs:297:17
    |
297 |                 ()
    |                 ^^ help: remove the final `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit

warning: unneeded unit expression
   --> src/frame_c/symbol_table.rs:303:17
    |
303 |                 ()
    |                 ^^ help: remove the final `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit

warning: unneeded unit expression
   --> src/frame_c/symbol_table.rs:309:17
    |
309 |                 ()
    |                 ^^ help: remove the final `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit

warning: unneeded unit expression
   --> src/frame_c/symbol_table.rs:315:17
    |
315 |                 ()
    |                 ^^ help: remove the final `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit

warning: unneeded unit expression
   --> src/frame_c/symbol_table.rs:321:17
    |
321 |                 ()
    |                 ^^ help: remove the final `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit

warning: unneeded unit expression
   --> src/frame_c/symbol_table.rs:329:17
    |
329 |                 ()
    |                 ^^ help: remove the final `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit

warning: unneeded unit expression
   --> src/frame_c/symbol_table.rs:335:17
    |
335 |                 ()
    |                 ^^ help: remove the final `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit

warning: 5 bindings with single-character names in scope
   --> src/frame_c/symbol_table.rs:500:13
    |
500 |         let a = &self.system_symbol_opt.as_ref().unwrap();
    |             ^
...
503 |                 let b = actions_block_scope_symbol.borrow();
    |                     ^
504 |                 let x = &b.symtab_rcref.borrow();
    |                     ^
505 |                 match x.lookup(name, &IdentifierDeclScope::ActionsBlock) {
506 |                     Some(c) => {
    |                          ^
507 |                         let d = c.borrow();
    |                             ^
    |
    = note: `#[warn(clippy::many_single_char_names)]` on by default
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#many_single_char_names

warning: 5 bindings with single-character names in scope
   --> src/frame_c/symbol_table.rs:500:13
    |
500 |         let a = &self.system_symbol_opt.as_ref().unwrap();
    |             ^
...
503 |                 let b = actions_block_scope_symbol.borrow();
    |                     ^
504 |                 let x = &b.symtab_rcref.borrow();
    |                     ^
505 |                 match x.lookup(name, &IdentifierDeclScope::ActionsBlock) {
506 |                     Some(c) => {
    |                          ^
507 |                         let d = c.borrow();
    |                             ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#many_single_char_names

warning: 6 bindings with single-character names in scope
   --> src/frame_c/symbol_table.rs:751:13
    |
751 |         let b = symtab_rcref.borrow();
    |             ^
752 |         let c = &b.symbols;
    |             ^
753 |         let d = c.get(scope_name);
    |             ^
754 |         match d {
755 |             Some(e) => {
    |                  ^
756 |                 let f = e.borrow();
    |                     ^
757 |                 let g = f.get_symbol_table();
    |                     ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#many_single_char_names

warning: redundant field names in struct initialization
    --> src/frame_c/symbol_table.rs:1370:13
     |
1370 |             name: name,
     |             ^^^^^^^^^^ help: replace it with: `name`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names

warning: all variants have the same postfix: `Tok`
  --> src/frame_c/scanner.rs:7:1
   |
7  | / enum MatchType {
8  | |     BoolTok,
9  | |     StringTok,
10 | |     NumberTok,
11 | | //    None,
12 | | }
   | |_^
   |
   = note: `#[warn(clippy::enum_variant_names)]` on by default
   = help: remove the postfixes and use full paths to the variants instead of glob imports
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#enum_variant_names

warning: this `else { if .. }` block can be collapsed
   --> src/frame_c/visitors/javascript_visitor.rs:364:24
    |
364 |                   } else {
    |  ________________________^
365 | |                     if self.generate_exit_args {
366 | |                         self.add_code(&format!("let _transition_ = function(newState,exitArgs) {{"));
367 | |                     } else {
368 | |                         self.add_code(&format!("let _transition_ = function(newState) {{"));
369 | |                     }
370 | |                 }
    | |_________________^
    |
    = note: `#[warn(clippy::collapsible_if)]` on by default
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
364 |                 } else if self.generate_exit_args {
365 |                     self.add_code(&format!("let _transition_ = function(newState,exitArgs) {{"));
366 |                 } else {
367 |                     self.add_code(&format!("let _transition_ = function(newState) {{"));
368 |                 }
    |

warning: this `else { if .. }` block can be collapsed
   --> src/frame_c/visitors/javascript_visitor.rs:718:16
    |
718 |           } else {
    |  ________________^
719 | |             if self.generate_exit_args {
720 | |                 self.add_code(&format!("_transition_({},{});",self.format_target_state_name(target_state_name),exit_args));
721 | |             } else {
722 | |                 self.add_code(&format!("_transition_({});",self.format_target_state_name(target_state_name)));
723 | |             }
724 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
718 |         } else if self.generate_exit_args {
719 |             self.add_code(&format!("_transition_({},{});",self.format_target_state_name(target_state_name),exit_args));
720 |         } else {
721 |             self.add_code(&format!("_transition_({});",self.format_target_state_name(target_state_name)));
722 |         }
    |

warning: this `else { if .. }` block can be collapsed
   --> src/frame_c/visitors/javascript_visitor.rs:810:16
    |
810 |           } else {
    |  ________________^
811 | |             if self.generate_state_context {
812 | |                 self.add_code(&format!("_transition_(stateContext.state,stateContext);"));
813 | |             } else {
814 | |                 self.add_code(&format!("_transition_(state);"));
815 | |             }
816 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
810 |         } else if self.generate_state_context {
811 |             self.add_code(&format!("_transition_(stateContext.state,stateContext);"));
812 |         } else {
813 |             self.add_code(&format!("_transition_(state);"));
814 |         }
    |

warning: this `else { if .. }` block can be collapsed
   --> src/frame_c/visitors/cpp_visitor.rs:356:24
    |
356 |                   } else {
    |  ________________________^
357 | |                     if self.generate_exit_args {
358 | |                         self.add_code(&format!("private void _transition_(FrameState newState,Dictionary<string,object> exitArgs) {{"));
359 | |                     } else {
360 | |                         self.add_code(&format!("private void _transition_(FrameState newState) {{"));
361 | |                     }
362 | |                 }
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
356 |                 } else if self.generate_exit_args {
357 |                     self.add_code(&format!("private void _transition_(FrameState newState,Dictionary<string,object> exitArgs) {{"));
358 |                 } else {
359 |                     self.add_code(&format!("private void _transition_(FrameState newState) {{"));
360 |                 }
    |

warning: this `else { if .. }` block can be collapsed
   --> src/frame_c/visitors/cpp_visitor.rs:712:16
    |
712 |           } else {
    |  ________________^
713 | |             if self.generate_exit_args {
714 | |                 self.add_code(&format!("_transition_({},exitArgs);",self.format_target_state_name(&target_state_name)));
715 | |             } else {
716 | |                 self.add_code(&format!("_transition_({});",self.format_target_state_name(&target_state_name)));
717 | |             }
718 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
712 |         } else if self.generate_exit_args {
713 |             self.add_code(&format!("_transition_({},exitArgs);",self.format_target_state_name(&target_state_name)));
714 |         } else {
715 |             self.add_code(&format!("_transition_({});",self.format_target_state_name(&target_state_name)));
716 |         }
    |

warning: this `else { if .. }` block can be collapsed
   --> src/frame_c/visitors/cpp_visitor.rs:811:16
    |
811 |           } else {
    |  ________________^
812 | |             if self.generate_state_context {
813 | |                 self.add_code(&format!("_transition_(pStateContext->state,pStateContext);"));
814 | |             } else {
815 | |                 self.add_code(&format!("_transition_(pState);"));
816 | |             }
817 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
811 |         } else if self.generate_state_context {
812 |             self.add_code(&format!("_transition_(pStateContext->state,pStateContext);"));
813 |         } else {
814 |             self.add_code(&format!("_transition_(pState);"));
815 |         }
    |

warning: this `else { if .. }` block can be collapsed
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:767:16
    |
767 |           } else {
    |  ________________^
768 | |             if self.generate_exit_args {
769 | |                 self.add_code(&format!("_transition_({},exitArgs);",self.format_target_state_name(target_state_name)));
770 | |             } else {
771 | |                 self.add_code(&format!("_transition_({});",self.format_target_state_name(target_state_name)));
772 | |             }
773 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
767 |         } else if self.generate_exit_args {
768 |             self.add_code(&format!("_transition_({},exitArgs);",self.format_target_state_name(target_state_name)));
769 |         } else {
770 |             self.add_code(&format!("_transition_({});",self.format_target_state_name(target_state_name)));
771 |         }
    |

warning: this `else { if .. }` block can be collapsed
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:864:16
    |
864 |           } else {
    |  ________________^
865 | |             if self.generate_state_context {
866 | |                 self.add_code(&format!("_transition_(stateContext.state,stateContext);"));
867 | |             } else {
868 | |                 self.add_code(&format!("_transition_(state);"));
869 | |             }
870 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
864 |         } else if self.generate_state_context {
865 |             self.add_code(&format!("_transition_(stateContext.state,stateContext);"));
866 |         } else {
867 |             self.add_code(&format!("_transition_(state);"));
868 |         }
    |

warning: this `else { if .. }` block can be collapsed
   --> src/frame_c/visitors/cs_visitor.rs:379:24
    |
379 |                   } else {
    |  ________________________^
380 | |                     if self.generate_exit_args {
381 | |                         self.add_code(&format!("private void _transition_(FrameState newState,Dictionary<String,object> exitArgs) {{"));
382 | |                     } else {
383 | |                         self.add_code(&format!("private void _transition_(FrameState newState) {{"));
384 | |                     }
385 | |                 }
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
379 |                 } else if self.generate_exit_args {
380 |                     self.add_code(&format!("private void _transition_(FrameState newState,Dictionary<String,object> exitArgs) {{"));
381 |                 } else {
382 |                     self.add_code(&format!("private void _transition_(FrameState newState) {{"));
383 |                 }
    |

warning: this `else { if .. }` block can be collapsed
   --> src/frame_c/visitors/cs_visitor.rs:745:16
    |
745 |           } else {
    |  ________________^
746 | |             if self.generate_exit_args {
747 | |                 self.add_code(&format!("_transition_({},{});",self.format_target_state_name(target_state_name),exit_args));
748 | |             } else {
749 | |                 self.add_code(&format!("_transition_({});",self.format_target_state_name(target_state_name)));
750 | |             }
751 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
745 |         } else if self.generate_exit_args {
746 |             self.add_code(&format!("_transition_({},{});",self.format_target_state_name(target_state_name),exit_args));
747 |         } else {
748 |             self.add_code(&format!("_transition_({});",self.format_target_state_name(target_state_name)));
749 |         }
    |

warning: this `else { if .. }` block can be collapsed
   --> src/frame_c/visitors/cs_visitor.rs:837:16
    |
837 |           } else {
    |  ________________^
838 | |             if self.generate_state_context {
839 | |                 self.add_code(&format!("_transition_(stateContext.state,stateContext);"));
840 | |             } else {
841 | |                 self.add_code(&format!("_transition_(state);"));
842 | |             }
843 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
837 |         } else if self.generate_state_context {
838 |             self.add_code(&format!("_transition_(stateContext.state,stateContext);"));
839 |         } else {
840 |             self.add_code(&format!("_transition_(state);"));
841 |         }
    |

warning: this `else { if .. }` block can be collapsed
   --> src/frame_c/visitors/python_visitor.rs:304:24
    |
304 |                   } else {
    |  ________________________^
305 | |                     if self.generate_exit_args {
306 | |                         self.add_code(&format!("def _transition_(self, newState, exitArgs):"));
307 | |                     } else {
308 | |                         self.add_code(&format!("def _transition_(self, newState):"));
309 | |                     }
310 | |                 }
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
304 |                 } else if self.generate_exit_args {
305 |                     self.add_code(&format!("def _transition_(self, newState, exitArgs):"));
306 |                 } else {
307 |                     self.add_code(&format!("def _transition_(self, newState):"));
308 |                 }
    |

warning: this `else { if .. }` block can be collapsed
   --> src/frame_c/visitors/python_visitor.rs:665:16
    |
665 |           } else {
    |  ________________^
666 | |             if self.generate_exit_args {
667 | |                 self.add_code(&format!("self._transition_(self.{},{})",self.format_target_state_name(target_state_name),exit_args));
668 | |             } else {
669 | |                 self.add_code(&format!("self._transition_(self.{})",self.format_target_state_name(target_state_name)));
670 | |             }
671 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
665 |         } else if self.generate_exit_args {
666 |             self.add_code(&format!("self._transition_(self.{},{})",self.format_target_state_name(target_state_name),exit_args));
667 |         } else {
668 |             self.add_code(&format!("self._transition_(self.{})",self.format_target_state_name(target_state_name)));
669 |         }
    |

warning: this `else { if .. }` block can be collapsed
   --> src/frame_c/visitors/python_visitor.rs:757:16
    |
757 |           } else {
    |  ________________^
758 | |             if self.generate_state_context {
759 | |                 self.add_code(&format!("self._transition_(stateContext.state,stateContext)"));
760 | |             } else {
761 | |                 self.add_code(&format!("self._transition_(state)"));
762 | |             }
763 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
757 |         } else if self.generate_state_context {
758 |             self.add_code(&format!("self._transition_(stateContext.state,stateContext)"));
759 |         } else {
760 |             self.add_code(&format!("self._transition_(state)"));
761 |         }
    |

warning: this `else { if .. }` block can be collapsed
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:292:24
    |
292 |                   } else {
    |  ________________________^
293 | |                     if self.generate_exit_args {
294 | |                         self.add_code(&format!("func _transition_(newState, exitArgs):"));
295 | |                     } else {
296 | |                         self.add_code(&format!("func _transition_(newState):"));
297 | |                     }
298 | |                 }
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
292 |                 } else if self.generate_exit_args {
293 |                     self.add_code(&format!("func _transition_(newState, exitArgs):"));
294 |                 } else {
295 |                     self.add_code(&format!("func _transition_(newState):"));
296 |                 }
    |

warning: this `else { if .. }` block can be collapsed
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:654:16
    |
654 |   ...   } else {
    |  ______________^
655 | | ...       if self.generate_exit_args {
656 | | ...           self.add_code(&format!("self._transition_(funcref(self,\"{}\"),{})",self.format_target_state_name(target_state_name),exit_a...
657 | | ...       } else {
658 | | ...           self.add_code(&format!("self._transition_(funcref(self,\"{}\"))",self.format_target_state_name(target_state_name)));
659 | | ...       }
660 | | ...   }
    | |_______^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
654 |         } else if self.generate_exit_args {
655 |             self.add_code(&format!("self._transition_(funcref(self,\"{}\"),{})",self.format_target_state_name(target_state_name),exit_args));
656 |         } else {
657 |             self.add_code(&format!("self._transition_(funcref(self,\"{}\"))",self.format_target_state_name(target_state_name)));
658 |         }
    |

warning: this `else { if .. }` block can be collapsed
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:746:16
    |
746 |           } else {
    |  ________________^
747 | |             if self.generate_state_context {
748 | |                 self.add_code(&format!("self._transition_(stateContext.state,stateContext)"));
749 | |             } else {
750 | |                 self.add_code(&format!("self._transition_(state)"));
751 | |             }
752 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
746 |         } else if self.generate_state_context {
747 |             self.add_code(&format!("self._transition_(stateContext.state,stateContext)"));
748 |         } else {
749 |             self.add_code(&format!("self._transition_(state)"));
750 |         }
    |

warning: this `else { if .. }` block can be collapsed
   --> src/frame_c/visitors/java_8_visitor.rs:377:24
    |
377 |                   } else {
    |  ________________________^
378 | |                     if self.generate_exit_args {
379 | |                         self.add_code(&format!("private void _transition_(FrameState newState,HashMap<String,Object> exitArgs) {{"));
380 | |                     } else {
381 | |                         self.add_code(&format!("private void _transition_(FrameState newState) {{"));
382 | |                     }
383 | |                 }
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
377 |                 } else if self.generate_exit_args {
378 |                     self.add_code(&format!("private void _transition_(FrameState newState,HashMap<String,Object> exitArgs) {{"));
379 |                 } else {
380 |                     self.add_code(&format!("private void _transition_(FrameState newState) {{"));
381 |                 }
    |

warning: this `else { if .. }` block can be collapsed
   --> src/frame_c/visitors/java_8_visitor.rs:742:16
    |
742 |           } else {
    |  ________________^
743 | |             if self.generate_exit_args {
744 | |                 self.add_code(&format!("_transition_({},{});",self.format_target_state_reference(target_state_name),exit_args));
745 | |             } else {
746 | |                 self.add_code(&format!("_transition_({});",self.format_target_state_reference(target_state_name)));
747 | |             }
748 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
742 |         } else if self.generate_exit_args {
743 |             self.add_code(&format!("_transition_({},{});",self.format_target_state_reference(target_state_name),exit_args));
744 |         } else {
745 |             self.add_code(&format!("_transition_({});",self.format_target_state_reference(target_state_name)));
746 |         }
    |

warning: this `else { if .. }` block can be collapsed
   --> src/frame_c/visitors/java_8_visitor.rs:840:16
    |
840 |           } else {
    |  ________________^
841 | |             if self.generate_state_context {
842 | |                 self.add_code(&format!("_transition_(stateContext.state,stateContext);"));
843 | |             } else {
844 | |                 self.add_code(&format!("_transition_(state);"));
845 | |             }
846 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
840 |         } else if self.generate_state_context {
841 |             self.add_code(&format!("_transition_(stateContext.state,stateContext);"));
842 |         } else {
843 |             self.add_code(&format!("_transition_(state);"));
844 |         }
    |

warning: this `else { if .. }` block can be collapsed
   --> src/frame_c/visitors/rust_visitor.rs:638:24
    |
638 |                   } else {
    |  ________________________^
639 | |                     if self.generate_exit_args {
640 | |                         self.add_code(&format!("fn {}(&mut self, new_state:{},{}:Box<{}>) {{"
641 | |                                                ,self.config.transition_method_name
...   |
649 | |                     }
650 | |                 }
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
638 |                 } else if self.generate_exit_args {
639 |                     self.add_code(&format!("fn {}(&mut self, new_state:{},{}:Box<{}>) {{"
640 |                                            ,self.config.transition_method_name
641 |                                            ,self.config.frame_state_type_name
642 |                                             ,self.config.exit_args_member_name
643 |                                            ,self.config.frame_event_parameters_type_name));
  ...

warning: this `else { if .. }` block can be collapsed
    --> src/frame_c/visitors/rust_visitor.rs:1122:16
     |
1122 |           } else {
     |  ________________^
1123 | |             if self.generate_exit_args {
1124 | |                 self.add_code(&format!("self.{}({}::{},{});"
1125 | |                                        ,self.config.transition_method_name
...    |
1134 | |             }
1135 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1122 |         } else if self.generate_exit_args {
1123 |             self.add_code(&format!("self.{}({}::{},{});"
1124 |                                    ,self.config.transition_method_name
1125 |                                    ,self.system_name
1126 |                                    ,self.format_state_name(target_state_name)
1127 |                                    ,exit_args));
   ...

warning: this `else { if .. }` block can be collapsed
    --> src/frame_c/visitors/rust_visitor.rs:1240:16
     |
1240 |           } else {
     |  ________________^
1241 | |             if self.generate_state_context {
1242 | |                 self.add_code(&format!("self.{}(state,{});"
1243 | |                                        ,self.config.transition_method_name
...    |
1247 | |             }
1248 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1240 |         } else if self.generate_state_context {
1241 |             self.add_code(&format!("self.{}(state,{});"
1242 |                                    ,self.config.transition_method_name
1243 |                                    ,self.config.state_context_var_name));
1244 |         } else {
1245 |             self.add_code(&format!("self.{}(state);",self.config.transition_method_name));
   ...

warning: this `else { if .. }` block can be collapsed
    --> src/frame_c/visitors/rust_visitor.rs:1676:16
     |
1676 |           } else {
     |  ________________^
1677 | |             if self.generate_state_stack {
1678 | |                 self.newline();
1679 | |                 self.add_code(&format!("{}:Vec<Rc<RefCell<{}>>>,",self.config.state_stack_var_name,self.config.frame_state_type_name));
1680 | |             }
1681 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
1676 |         } else if self.generate_state_stack {
1677 |             self.newline();
1678 |             self.add_code(&format!("{}:Vec<Rc<RefCell<{}>>>,",self.config.state_stack_var_name,self.config.frame_state_type_name));
1679 |         }
     |

warning: this `if` statement can be collapsed
    --> src/frame_c/parser.rs:2958:9
     |
2958 | /         if !self.is_building_symbol_table {
2959 | |             if *explicit_scope != IdentifierDeclScope::None && *explicit_scope != scope {
2960 | |                 let msg = &format!("Identifier {} - invalid scope identifier.",identifier_node.name.lexeme);
2961 | |                 self.error_at_current(msg);
2962 | |                 return Err(ParseError::new(msg));
2963 | |             }
2964 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
     |
2958 |         if !self.is_building_symbol_table && *explicit_scope != IdentifierDeclScope::None && *explicit_scope != scope {
2959 |             let msg = &format!("Identifier {} - invalid scope identifier.",identifier_node.name.lexeme);
2960 |             self.error_at_current(msg);
2961 |             return Err(ParseError::new(msg));
2962 |         }
     |

warning: field is never read: `generate_exit_args`
  --> src/frame_c/visitors/plantuml_visitor.rs:23:5
   |
23 |     generate_exit_args:bool,
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: you should consider adding a `Default` implementation for `frame_c::compiler::Exe`
  --> src/frame_c/compiler.rs:36:5
   |
36 | /     pub fn new() -> Exe {
37 | |         Exe {
38 | |         }
39 | |     }
   | |_____^
   |
   = note: `#[warn(clippy::new_without_default)]` on by default
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default
help: try this
   |
31 | impl Default for frame_c::compiler::Exe {
32 |     fn default() -> Self {
33 |         Self::new()
34 |     }
35 | }
   |

warning: redundant clone
  --> src/frame_c/compiler.rs:87:78
   |
87 |             let run_error = RunError::new(frame_exitcode::PARSE_ERR, &*errors.clone());
   |                                                                              ^^^^^^^^ help: remove this
   |
   = note: `#[warn(clippy::redundant_clone)]` on by default
note: this value is dropped without further use
  --> src/frame_c/compiler.rs:87:72
   |
87 |             let run_error = RunError::new(frame_exitcode::PARSE_ERR, &*errors.clone());
   |                                                                        ^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone

warning: redundant clone
   --> src/frame_c/compiler.rs:104:82
    |
104 |                 let run_error = RunError::new(frame_exitcode::PARSE_ERR, &*errors.clone());
    |                                                                                  ^^^^^^^^ help: remove this
    |
note: this value is dropped without further use
   --> src/frame_c/compiler.rs:104:76
    |
104 |                 let run_error = RunError::new(frame_exitcode::PARSE_ERR, &*errors.clone());
    |                                                                            ^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone

warning: redundant clone
   --> src/frame_c/compiler.rs:116:78
    |
116 |             let run_error = RunError::new(frame_exitcode::PARSE_ERR, &*errors.clone());
    |                                                                              ^^^^^^^^ help: remove this
    |
note: this value is dropped without further use
   --> src/frame_c/compiler.rs:116:72
    |
116 |             let run_error = RunError::new(frame_exitcode::PARSE_ERR, &*errors.clone());
    |                                                                        ^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone

warning: this function has too many arguments (8/7)
   --> src/frame_c/ast.rs:111:5
    |
111 | /     pub fn new(name:String,
112 | |                header:String,
113 | |                attributes_opt:Option<HashMap<String,AttributeNode>>,
114 | |                interface_block_node_opt:Option<InterfaceBlockNode>,
...   |
117 | |                domain_block_node_opt:Option<DomainBlockNode>,
118 | |                line:usize) -> SystemNode {
    | |________________________________________^
    |
    = note: `#[warn(clippy::too_many_arguments)]` on by default
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments

warning: this function has too many arguments (9/7)
   --> src/frame_c/ast.rs:406:5
    |
406 | /     pub fn new(name:String,
407 | |                params:Option<Vec<ParameterNode>>,
408 | |                vars:Option<Vec<Rc<RefCell<VariableDeclNode>>>>,
409 | |                calls:Option<Vec<CallChainLiteralExprNode>>,
...   |
413 | |                dispatch_opt:Option<DispatchNode>,
414 | |                line:usize,) -> StateNode {
    | |________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments

warning: large size difference between variants
   --> src/frame_c/ast.rs:813:5
    |
813 | /     TestStmt {
814 | |         test_stmt_node:TestStatementNode,
815 | |     },
    | |_____^ this variant is 392 bytes
    |
    = note: `#[warn(clippy::large_enum_variant)]` on by default
note: and the second-largest variant is 160 bytes:
   --> src/frame_c/ast.rs:804:5
    |
804 | /     ExpressionStmt {
805 | |         expr_stmt_t:ExprStmtType,
806 | |     },
    | |_____^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant
help: consider boxing the large fields to reduce the total size of the enum
    |
814 |         test_stmt_node:Box<TestStatementNode>,
    |                        ^^^^^^^^^^^^^^^^^^^^^^

warning: large size difference between variants
   --> src/frame_c/ast.rs:827:5
    |
827 |     StmtT {stmt_t:StatementType},
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this variant is 400 bytes
    |
note: and the second-largest variant is 8 bytes:
   --> src/frame_c/ast.rs:826:5
    |
826 |     VarDeclT { var_decl_t_rc_ref:Rc<RefCell<VariableDeclNode>>},
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant
help: consider boxing the large fields to reduce the total size of the enum
    |
827 |     StmtT {stmt_t:Box<StatementType>},
    |                   ^^^^^^^^^^^^^^^^^^

warning: redundant clone
   --> src/frame_c/symbol_table.rs:357:49
    |
357 |                         Some(a) => return Some(a.clone()),
    |                                                 ^^^^^^^^ help: remove this
    |
note: this value is dropped without further use
   --> src/frame_c/symbol_table.rs:357:48
    |
357 |                         Some(a) => return Some(a.clone()),
    |                                                ^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone

warning: unneeded `return` statement
   --> src/frame_c/symbol_table.rs:378:17
    |
378 | /                 return match d {
379 | |                     Some(e) => Some(Rc::clone(&e)),
380 | |                     None => None,
381 | |                 }
    | |_________________^
    |
    = note: `#[warn(clippy::needless_return)]` on by default
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
378 |                 match d {
379 |                     Some(e) => Some(Rc::clone(&e)),
380 |                     None => None,
381 |                 }
    |

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
   --> src/frame_c/symbol_table.rs:368:13
    |
368 | /             match a {
369 | |                 Some(aa) => return Some(Rc::clone(aa)),
370 | |                 None => {},
371 | |             }
    | |_____________^ help: try this: `if let Some(aa) = a { return Some(Rc::clone(aa)) }`
    |
    = note: `#[warn(clippy::single_match)]` on by default
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match

warning: unneeded `return` statement
   --> src/frame_c/symbol_table.rs:390:25
    |
390 |             Some(aa) => return Some(aa.clone()),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `Some(aa.clone())`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: useless use of `format!`
   --> src/frame_c/symbol_table.rs:435:27
    |
435 |         Exe::debug_print(&format!("<------------------->"));
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"<------------------->".to_string()`
    |
    = note: `#[warn(clippy::useless_format)]` on by default
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/symbol_table.rs:437:27
    |
437 |         Exe::debug_print(&format!("<------------------->"));
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"<------------------->".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: unneeded `return` statement
   --> src/frame_c/symbol_table.rs:454:21
    |
454 |             None => return,
    |                     ^^^^^^ help: replace `return` with an empty block: `{}`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: useless use of `format!`
   --> src/frame_c/symbol_table.rs:444:27
    |
444 |         Exe::debug_print(&format!("---------------------"));
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"---------------------".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: you seem to want to iterate on a map's keys
   --> src/frame_c/symbol_table.rs:446:30
    |
446 |         for (key, _value) in &symbol_table.symbols {
    |                              ^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(clippy::for_kv_map)]` on by default
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#for_kv_map
help: use the corresponding method
    |
446 |         for key in symbol_table.symbols.keys() {
    |             ^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: useless use of `format!`
   --> src/frame_c/symbol_table.rs:447:31
    |
447 |             Exe::debug_print(&format!("{}", key));
    |                               ^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `key.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: unneeded `return` statement
   --> src/frame_c/symbol_table.rs:483:25
    |
483 | /                         return match &*d {
484 | |                             SymbolType::InterfaceMethodSymbolT { interface_method_symbol_rcref } => {
485 | |                                 Some(Rc::clone(&interface_method_symbol_rcref))
486 | |                             },
487 | |                             _ => None,
488 | |                         }
    | |_________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
483 |                         match &*d {
484 |                             SymbolType::InterfaceMethodSymbolT { interface_method_symbol_rcref } => {
485 |                                 Some(Rc::clone(&interface_method_symbol_rcref))
486 |                             },
487 |                             _ => None,
488 |                         }
    |

warning: unneeded `return` statement
   --> src/frame_c/symbol_table.rs:493:21
    |
493 |             None => return None,
    |                     ^^^^^^^^^^^ help: remove `return`: `None`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
   --> src/frame_c/symbol_table.rs:508:25
    |
508 | /                         return match &*d {
509 | |                             SymbolType::ActionDeclSymbolT { action_decl_symbol_rcref: action_symbol_rcref } => {
510 | |                                 Some(Rc::clone(&action_symbol_rcref))
511 | |                             },
512 | |                             _ => None,
513 | |                         }
    | |_________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
508 |                         match &*d {
509 |                             SymbolType::ActionDeclSymbolT { action_decl_symbol_rcref: action_symbol_rcref } => {
510 |                                 Some(Rc::clone(&action_symbol_rcref))
511 |                             },
512 |                             _ => None,
513 |                         }
    |

warning: unneeded `return` statement
   --> src/frame_c/symbol_table.rs:518:21
    |
518 |             None => return None,
    |                     ^^^^^^^^^^^ help: remove `return`: `None`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
   --> src/frame_c/symbol_table.rs:758:17
    |
758 |                 return Rc::clone(&g)
    |                 ^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `Rc::clone(&g)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
   --> src/frame_c/symbol_table.rs:791:37
    |
791 | ...                   return Some(Rc::clone(state_symbol_ref))
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `Some(Rc::clone(state_symbol_ref))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
   --> src/frame_c/symbol_table.rs:796:26
    |
796 |                     _ => return None,
    |                          ^^^^^^^^^^^ help: remove `return`: `None`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
   --> src/frame_c/symbol_table.rs:799:21
    |
799 |             None => return None,
    |                     ^^^^^^^^^^^ help: remove `return`: `None`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: writing `&String` instead of `&str` involves a new object where a slice will do.
   --> src/frame_c/symbol_table.rs:856:61
    |
856 |     pub fn get_msg_from_interface_name(&self,interface_name:&String) -> String {
    |                                                             ^^^^^^^ help: change this to: `&str`
    |
    = note: `#[warn(clippy::ptr_arg)]` on by default
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: redundant clone
   --> src/frame_c/symbol_table.rs:961:81
    |
961 |             symtab_rcref:Rc::new(RefCell::new(SymbolTable::new(String::from(name.clone()), None, IdentifierDeclScope::None, true))),
    |                                                                                 ^^^^^^^^ help: remove this
    |
note: this value is dropped without further use
   --> src/frame_c/symbol_table.rs:961:77
    |
961 |             symtab_rcref:Rc::new(RefCell::new(SymbolTable::new(String::from(name.clone()), None, IdentifierDeclScope::None, true))),
    |                                                                             ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone

warning: useless conversion to the same type: `std::string::String`
   --> src/frame_c/symbol_table.rs:961:64
    |
961 |             symtab_rcref:Rc::new(RefCell::new(SymbolTable::new(String::from(name.clone()), None, IdentifierDeclScope::None, true))),
    |                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `String::from()`: `name.clone()`
    |
    = note: `#[warn(clippy::useless_conversion)]` on by default
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion

warning: unneeded `return` statement
   --> src/frame_c/symbol_table.rs:992:13
    |
992 |             return Rc::clone(&e);
    |             ^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `Rc::clone(&e)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/frame_c/symbol_table.rs:1047:13
     |
1047 |             return Rc::clone(&symbol_table_for_symbol);
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `Rc::clone(&symbol_table_for_symbol)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: writing `&String` instead of `&str` involves a new object where a slice will do.
    --> src/frame_c/symbol_table.rs:1113:48
     |
1113 |     pub fn new(symbol_config:&SymbolConfig,msg:&String,interface_name_opt:Option<String>,params_opt:Option<Vec<ParameterSymbol>>,ret_type...
     |                                                ^^^^^^^ help: change this to: `&str`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: writing `&String` instead of `&str` involves a new object where a slice will do.
    --> src/frame_c/symbol_table.rs:1131:87
     |
1131 |     pub fn get_event_msg(symbol_config:&SymbolConfig, state_name:&Option<String>, msg:&String) -> (String,bool,bool) {
     |                                                                                       ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg
help: change this to
     |
1131 |     pub fn get_event_msg(symbol_config:&SymbolConfig, state_name:&Option<String>, msg:&str) -> (String,bool,bool) {
     |                                                                                       ^^^^
help: change `msg.clone()` to
     |
1146 |             msg_name = msg.to_string();
     |                        ^^^^^^^^^^^^^^^

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/symbol_table.rs:1138:13
     |
1138 |             msg_name.push_str(":");
     |             ^^^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `msg_name.push(':')`
     |
     = note: `#[warn(clippy::single_char_push_str)]` on by default
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/symbol_table.rs:1143:13
     |
1143 |             msg_name.push_str(":");
     |             ^^^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `msg_name.push(':')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: unneeded `return` statement
    --> src/frame_c/symbol_table.rs:1203:13
     |
1203 |             return Rc::clone(&e);
     |             ^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `Rc::clone(&e)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: writing `&String` instead of `&str` involves a new object where a slice will do.
    --> src/frame_c/symbol_table.rs:1225:27
     |
1225 |     pub fn new(state_name:&String,parent_symtab:Rc<RefCell<SymbolTable>>) -> StateSymbol {
     |                           ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg
help: change this to
     |
1225 |     pub fn new(state_name:&str,parent_symtab:Rc<RefCell<SymbolTable>>) -> StateSymbol {
     |                           ^^^^
help: change `state_name.clone()` to
     |
1227 |         let st_rcref = SymbolTable::new(state_name.to_string(), Some(Rc::clone(&parent_symtab)), IdentifierDeclScope::None, false);
     |                                         ^^^^^^^^^^^^^^^^^^^^^^
help: change `state_name.clone()` to
     |
1229 |             name:state_name.to_string(),
     |                  ^^^^^^^^^^^^^^^^^^^^^^

warning: unneeded `return` statement
    --> src/frame_c/symbol_table.rs:1272:9
     |
1272 |         return state_param_symbol
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `state_param_symbol`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/frame_c/symbol_table.rs:1354:13
     |
1354 |             return Rc::clone(&e);
     |             ^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `Rc::clone(&e)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/frame_c/symbol_table.rs:1384:25
     |
1384 |                         return &param_type.get_type_str() == &other_param_type.get_type_str();
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `&param_type.get_type_str() == &other_param_type.get_type_str()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/frame_c/symbol_table.rs:1386:29
     |
1386 |                     None => return false,
     |                             ^^^^^^^^^^^^ help: remove `return`: `false`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/frame_c/symbol_table.rs:1392:25
     |
1392 |                         return false;
     |                         ^^^^^^^^^^^^^ help: remove `return`: `false`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/frame_c/symbol_table.rs:1394:29
     |
1394 |                     None => return true,
     |                             ^^^^^^^^^^^ help: remove `return`: `true`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: needlessly taken reference of both operands
    --> src/frame_c/symbol_table.rs:1384:32
     |
1384 |                         return &param_type.get_type_str() == &other_param_type.get_type_str();
     |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: `#[warn(clippy::op_ref)]` on by default
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref
help: use the values directly
     |
1384 |                         return param_type.get_type_str() == other_param_type.get_type_str();
     |                                ^^^^^^^^^^^^^^^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: redundant clone
    --> src/frame_c/symbol_table.rs:1426:68
     |
1426 |             symtab_rcref:Rc::new(RefCell::new(SymbolTable::new(name.clone(), None, IdentifierDeclScope::StateParam, false))),
     |                                                                    ^^^^^^^^ help: remove this
     |
note: this value is dropped without further use
    --> src/frame_c/symbol_table.rs:1426:64
     |
1426 |             symtab_rcref:Rc::new(RefCell::new(SymbolTable::new(name.clone(), None, IdentifierDeclScope::StateParam, false))),
     |                                                                ^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone

warning: unneeded `return` statement
    --> src/frame_c/symbol_table.rs:1458:13
     |
1458 |             return Rc::clone(&e);
     |             ^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `Rc::clone(&e)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/frame_c/symbol_table.rs:1515:13
     |
1515 |             return Rc::clone(&e);
     |             ^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `Rc::clone(&e)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: writing `&String` instead of `&str` involves a new object where a slice will do.
    --> src/frame_c/symbol_table.rs:1533:21
     |
1533 |     pub fn new(name:&String,event_symbol_rcref:Rc<RefCell<EventSymbol>>) -> EventHandlerScopeSymbol {
     |                     ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg
help: change this to
     |
1533 |     pub fn new(name:&str,event_symbol_rcref:Rc<RefCell<EventSymbol>>) -> EventHandlerScopeSymbol {
     |                     ^^^^
help: change `name.clone()` to
     |
1535 |             name:name.to_string(),
     |                  ^^^^^^^^^^^^^^^^
help: change `name.clone()` to
     |
1537 |             symtab_rcref:Rc::new(RefCell::new(SymbolTable::new(name.to_string(), None, IdentifierDeclScope::None, false))),
     |                                                                ^^^^^^^^^^^^^^^^

warning: unneeded `return` statement
    --> src/frame_c/symbol_table.rs:1565:13
     |
1565 |             return Rc::clone(&e);
     |             ^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `Rc::clone(&e)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: redundant clone
    --> src/frame_c/symbol_table.rs:1592:68
     |
1592 |             symtab_rcref:Rc::new(RefCell::new(SymbolTable::new(name.clone(), None, IdentifierDeclScope::EventHandlerParam, false))),
     |                                                                    ^^^^^^^^ help: remove this
     |
note: this value is dropped without further use
    --> src/frame_c/symbol_table.rs:1592:64
     |
1592 |             symtab_rcref:Rc::new(RefCell::new(SymbolTable::new(name.clone(), None, IdentifierDeclScope::EventHandlerParam, false))),
     |                                                                ^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone

warning: unneeded `return` statement
    --> src/frame_c/symbol_table.rs:1618:9
     |
1618 |         return event_handler_param_symbol;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `event_handler_param_symbol`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/frame_c/symbol_table.rs:1641:13
     |
1641 |             return Rc::clone(&e);
     |             ^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `Rc::clone(&e)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/frame_c/symbol_table.rs:1699:13
     |
1699 |             return Rc::clone(&e);
     |             ^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `Rc::clone(&e)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: redundant clone
    --> src/frame_c/symbol_table.rs:1722:68
     |
1722 |             symtab_rcref:Rc::new(RefCell::new(SymbolTable::new(name.clone(), None, IdentifierDeclScope::ActionsBlock, false))),
     |                                                                    ^^^^^^^^ help: remove this
     |
note: this value is dropped without further use
    --> src/frame_c/symbol_table.rs:1722:64
     |
1722 |             symtab_rcref:Rc::new(RefCell::new(SymbolTable::new(name.clone(), None, IdentifierDeclScope::ActionsBlock, false))),
     |                                                                ^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone

warning: unneeded `return` statement
    --> src/frame_c/symbol_table.rs:1750:13
     |
1750 |             return Rc::clone(&e);
     |             ^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `Rc::clone(&e)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: redundant clone
    --> src/frame_c/symbol_table.rs:1774:68
     |
1774 |             symtab_rcref:Rc::new(RefCell::new(SymbolTable::new(name.clone(), None, IdentifierDeclScope::DomainBlock, false))),
     |                                                                    ^^^^^^^^ help: remove this
     |
note: this value is dropped without further use
    --> src/frame_c/symbol_table.rs:1774:64
     |
1774 |             symtab_rcref:Rc::new(RefCell::new(SymbolTable::new(name.clone(), None, IdentifierDeclScope::DomainBlock, false))),
     |                                                                ^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone

warning: unneeded `return` statement
    --> src/frame_c/symbol_table.rs:1807:13
     |
1807 |             return Rc::clone(&e);
     |             ^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `Rc::clone(&e)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
   --> src/frame_c/scanner.rs:107:9
    |
107 |         return (self.has_errors,self.errors.clone(),self.tokens);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(self.has_errors,self.errors.clone(),self.tokens)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
   --> src/frame_c/scanner.rs:117:9
    |
117 |         return false;
    |         ^^^^^^^^^^^^^ help: remove `return`: `false`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
   --> src/frame_c/scanner.rs:268:20
    |
268 |             ' ' => return,
    |                    ^^^^^^ help: replace `return` with an empty block: `{}`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
   --> src/frame_c/scanner.rs:269:21
    |
269 |             '\r' => return,
    |                     ^^^^^^ help: replace `return` with an empty block: `{}`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
   --> src/frame_c/scanner.rs:270:21
    |
270 |             '\t' => return,
    |                     ^^^^^^ help: replace `return` with an empty block: `{}`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
   --> src/frame_c/scanner.rs:273:17
    |
273 |                 return;
    |                 ^^^^^^^ help: remove `return`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: using `clone` on a `Copy` type
   --> src/frame_c/scanner.rs:447:28
    |
447 |             let tok_type = (*keyword).clone();
    |                            ^^^^^^^^^^^^^^^^^^ help: try dereferencing it: `*(*keyword)`
    |
    = note: `#[warn(clippy::clone_on_copy)]` on by default
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

warning: this function has too many arguments (8/7)
  --> src/frame_c/visitors/javascript_visitor.rs:40:16
   |
40 | /                pub fn new(  arcanium:Arcanum
41 | |                           , generate_exit_args:bool
42 | |                           , generate_state_context:bool
43 | |                           , generate_state_stack:bool
...  |
46 | |                           , compiler_version:&str
47 | |                           , comments:Vec<Token>) -> JavaScriptVisitor {
   | |_____________________________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments

warning: length comparison to zero
  --> src/frame_c/visitors/javascript_visitor.rs:87:12
   |
87 |         if self.errors.len() > 0 {
   |            ^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!self.errors.is_empty()`
   |
   = note: `#[warn(clippy::len_zero)]` on by default
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: unneeded `return` statement
   --> src/frame_c/visitors/javascript_visitor.rs:135:9
    |
135 |         return var_type;
    |         ^^^^^^^^^^^^^^^^ help: remove `return`: `var_type`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/javascript_visitor.rs:155:21
    |
155 |                     code.push_str("(");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push('(')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/javascript_visitor.rs:160:21
    |
160 |                     code.push_str(")");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push(')')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/javascript_visitor.rs:171:21
    |
171 |                     code.push_str("(");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push('(')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/javascript_visitor.rs:176:21
    |
176 |                     code.push_str(")");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push(')')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/javascript_visitor.rs:187:21
    |
187 |                     code.push_str("(");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push('(')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/javascript_visitor.rs:192:21
    |
192 |                     code.push_str(")");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push(')')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:197:32
    |
197 |                 code.push_str(&format!("{}",variable_node.id_node.name.lexeme));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `variable_node.id_node.name.lexeme.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:201:32
    |
201 |                 code.push_str(&format!("{}",variable_node.id_node.name.lexeme));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `variable_node.id_node.name.lexeme.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: writing `&String` instead of `&str` involves a new object where a slice will do.
   --> src/frame_c/visitors/javascript_visitor.rs:222:49
    |
222 |     fn format_action_name(&mut self,action_name:&String) -> String {
    |                                                 ^^^^^^^ help: change this to: `&str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:235:30
    |
235 |         self.code.push_str(&*format!("{}",s));
    |                              ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `s.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: unneeded `return` statement
   --> src/frame_c/visitors/javascript_visitor.rs:253:9
    |
253 |         return (0..self.dent).map(|_| "    ").collect::<String>()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(0..self.dent).map(|_| "    ").collect::<String>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.
   --> src/frame_c/visitors/javascript_visitor.rs:270:52
    |
270 |     fn visit_decl_stmts(&mut self, decl_stmt_types:&Vec<DeclOrStmtType>) {
    |                                                    ^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[DeclOrStmtType]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: redundant pattern matching, consider using `is_some()`
   --> src/frame_c/visitors/javascript_visitor.rs:324:16
    |
324 |         if let Some(_) = system_node.get_first_state() {
    |         -------^^^^^^^-------------------------------- help: try this: `if system_node.get_first_state().is_some()`
    |
    = note: `#[warn(clippy::redundant_pattern_matching)]` on by default
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:329:32
    |
329 |                 self.add_code(&format!("let _stateContext_ = StateContext(_state_);"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"let _stateContext_ = StateContext(_state_);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:360:40
    |
360 |                         self.add_code(&format!("let _transition_ = function(newState,exitArgs, stateContext) {{"));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"let _transition_ = function(newState,exitArgs, stateContext) {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:362:40
    |
362 |                         self.add_code(&format!("let _transition_ = function(newState, stateContext) {{"));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"let _transition_ = function(newState, stateContext) {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:366:40
    |
366 |                         self.add_code(&format!("let _transition_ = function(newState,exitArgs) {{"));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"let _transition_ = function(newState,exitArgs) {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:368:40
    |
368 |                         self.add_code(&format!("let _transition_ = function(newState) {{"));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"let _transition_ = function(newState) {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:374:36
    |
374 |                     self.add_code(&format!("let exitEvent = FrameEvent(\"<\",exitArgs);"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"let exitEvent = FrameEvent(\"<\",exitArgs);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:376:36
    |
376 |                     self.add_code(&format!("let exitEvent = FrameEvent(\"<\",null);"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"let exitEvent = FrameEvent(\"<\",null);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:379:32
    |
379 |                 self.add_code(&format!("_state_(exitEvent);"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_state_(exitEvent);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:381:32
    |
381 |                 self.add_code(&format!("_state_ = newState;"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_state_ = newState;".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:384:36
    |
384 |                     self.add_code(&format!("_stateContext_ = stateContext;"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_stateContext_ = stateContext;".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:386:36
    |
386 |                     self.add_code(&format!("let enterEvent = FrameEvent(\">\",_stateContext_.getEnterArgs());"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"let enterEvent = FrameEvent(\">\",_stateContext_.getEnterArgs());".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:389:36
    |
389 |                     self.add_code(&format!("let enterEvent = FrameEvent(\">\",null);"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"let enterEvent = FrameEvent(\">\",null);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:392:32
    |
392 |                 self.add_code(&format!("_state_(enterEvent);"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_state_(enterEvent);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:395:32
    |
395 |                 self.add_code(&format!("}}"));
    |                                ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:400:32
    |
400 |                 self.add_code(&format!("let _stateStack_ = [];"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"let _stateStack_ = [];".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:403:32
    |
403 |                 self.add_code(&format!("let  _stateStack_push_ = function (stateData) {{"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"let  _stateStack_push_ = function (stateData) {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:406:32
    |
406 |                 self.add_code(&format!("_stateStack_.push(stateData);"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_stateStack_.push(stateData);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:409:32
    |
409 |                 self.add_code(&format!("}}"));
    |                                ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:412:32
    |
412 |                 self.add_code(&format!("let _stateStack_pop_ = function() {{"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"let _stateStack_pop_ = function() {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:415:32
    |
415 |                 self.add_code(&format!("return _stateStack_.pop();"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"return _stateStack_.pop();".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:418:32
    |
418 |                 self.add_code(&format!("}}"));
    |                                ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:423:32
    |
423 |                 self.add_code(&format!("let _changeState_ = function(newState) {{"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"let _changeState_ = function(newState) {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:426:32
    |
426 |                 self.add_code(&format!("_state_ = newState;"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_state_ = newState;".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:429:32
    |
429 |                 self.add_code(&format!("}}"));
    |                                ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:435:42
    |
435 |                     self.code.push_str(&*format!("{}",line));
    |                                          ^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `line.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:440:42
    |
440 |                     self.code.push_str(&*format!("{}",line));
    |                                          ^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `line.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:451:34
    |
451 |             self.code.push_str(&*format!("{}",line));
    |                                  ^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `line.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:472:38
    |
472 |                 self.code.push_str(&*format!("*/"));
    |                                      ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"*/".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:516:30
    |
516 |         let state_ref_code = format!("{}",self.format_target_state_name(target_state_name));
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `self.format_target_state_name(target_state_name).to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: length comparison to zero
   --> src/frame_c/visitors/javascript_visitor.rs:536:16
    |
536 |             if exit_args.exprs_t.len() > 0 {
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!exit_args.exprs_t.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/javascript_visitor.rs:546:17
    |
546 |                 msg.push_str(":");
    |                 ^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `msg.push(':')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/javascript_visitor.rs:599:13
    |
599 |             msg.push_str(":");
    |             ^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `msg.push(':')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
   --> src/frame_c/visitors/javascript_visitor.rs:679:9
    |
679 | /         match target_state_rcref_opt {
680 | |             Some(q) => {
681 | | //                target_state_vars = "stateVars".to_string();
682 | |                 if let Some(state_symbol_rcref) = self.arcanium.get_state(&q.borrow().name) {
...   |
705 | |             },
706 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
    |
679 |         if let Some(q) = target_state_rcref_opt {
680 |         //                target_state_vars = "stateVars".to_string();
681 |                         if let Some(state_symbol_rcref) = self.arcanium.get_state(&q.borrow().name) {
682 |                             let state_symbol = state_symbol_rcref.borrow();
683 |                             let state_node = &state_symbol.state_node.as_ref().unwrap().borrow();
684 |                             // generate local state variables
  ...

warning: length comparison to zero
   --> src/frame_c/visitors/javascript_visitor.rs:752:16
    |
752 |             if exit_args.exprs_t.len() > 0 {
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!exit_args.exprs_t.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/javascript_visitor.rs:761:17
    |
761 |                 msg.push_str(":");
    |                 ^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `msg.push(':')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:799:28
    |
799 |             self.add_code(&format!("let stateContext = _stateStack_pop();"));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"let stateContext = _stateStack_pop();".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:801:28
    |
801 |             self.add_code(&format!("let state = _stateStack_pop_();"));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"let state = _stateStack_pop_();".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:806:32
    |
806 |                 self.add_code(&format!("_transition_(stateContext.state,exitArgs,stateContext);"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_transition_(stateContext.state,exitArgs,stateContext);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:808:32
    |
808 |                 self.add_code(&format!("_transition_(state,exitArgs);"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_transition_(state,exitArgs);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:812:32
    |
812 |                 self.add_code(&format!("_transition_(stateContext.state,stateContext);"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_transition_(stateContext.state,stateContext);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:814:32
    |
814 |                 self.add_code(&format!("_transition_(state);"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_transition_(state);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:837:24
    |
837 |         self.add_code(&format!("let that = {{}};"));
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"let that = {};".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
   --> src/frame_c/visitors/javascript_visitor.rs:845:9
    |
845 | /         match (&system_node).get_first_state() {
846 | |             Some(x) => {
847 | |                 self.first_state_name = x.borrow().name.clone();
848 | |                 self.has_states = true;
849 | |             },
850 | |             None => {},
851 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
    |
845 |         if let Some(x) = (&system_node).get_first_state() {
846 |             self.first_state_name = x.borrow().name.clone();
847 |             self.has_states = true;
848 |         }
    |

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:884:33
    |
884 |         self.subclass_code.push(format!("\treturn that;"));
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"\treturn that;".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/javascript_visitor.rs:885:33
    |
885 |         self.subclass_code.push(format!("}};"));
    |                                 ^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"};".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1015:24
     |
1015 |         self.add_code(&format!("_state_(e);"));
     |                        ^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_state_(e);".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1020:32
     |
1020 |                 self.add_code(&format!("return e._return;"));
     |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"return e._return;".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1026:24
     |
1026 |         self.add_code(&format!("}}"));
     |                        ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: length comparison to zero
    --> src/frame_c/visitors/javascript_visitor.rs:1143:12
     |
1143 |         if state_node.evt_handlers_rcref.len() > 0 {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!state_node.evt_handlers_rcref.is_empty()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1179:32
     |
1179 |                 self.add_code(&format!("if (true) {{"));
     |                                ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"if (true) {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1182:32
     |
1182 |                 self.add_code(&format!("else {{"));
     |                                ^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"else {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1190:28
     |
1190 |             self.add_code(&format!("let stateContext = null;"));
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"let stateContext = null;".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
    --> src/frame_c/visitors/javascript_visitor.rs:1193:9
     |
1193 | /         match &evt_handler_node.msg_t {
1194 | |             MessageType::CustomMessage {..} => {
1195 | |                 // Note: this is a bit convoluted as we cant use self.add_code() inside the
1196 | |                 // if statements as it is a double borrow (sigh).
...    |
1206 | |             _ => {}
1207 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1193 |         if let MessageType::CustomMessage {..} = &evt_handler_node.msg_t {
1194 |             // Note: this is a bit convoluted as we cant use self.add_code() inside the
1195 |             // if statements as it is a double borrow (sigh).
1196 | 
1197 |             let params_code: Vec<String> = Vec::new();
1198 | 
   ...

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1232:24
     |
1232 |         self.add_code(&format!("}}"));
     |                        ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1248:40
     |
1248 |                         self.add_code(&format!("e._return = "));
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1271:24
     |
1271 |         self.add_code(&format!(";"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `";".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1284:32
     |
1284 |                 self.add_code(&format!("."));
     |                                ^^^^^^^^^^^^ help: consider using `.to_string()`: `".".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1288:24
     |
1288 |         self.add_code(&format!("{}", method_call.identifier.name.lexeme));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `method_call.identifier.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1306:34
     |
1306 |                 output.push_str(&format!("."));
     |                                  ^^^^^^^^^^^^ help: consider using `.to_string()`: `".".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1310:26
     |
1310 |         output.push_str(&format!("{}", method_call.identifier.name.lexeme));
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `method_call.identifier.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1324:24
     |
1324 |         self.add_code(&format!("("));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1328:28
     |
1328 |             self.add_code(&format!("{}",separator));
     |                            ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1333:24
     |
1333 |         self.add_code(&format!(")"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1343:26
     |
1343 |         output.push_str(&format!("("));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1347:30
     |
1347 |             output.push_str(&format!("{}",separator));
     |                              ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1352:26
     |
1352 |         output.push_str(&format!(")"));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1362:24
     |
1362 |         self.add_code(&format!("{}", action_name));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `action_name.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1375:26
     |
1375 |         output.push_str(&format!("{}",action_name));
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `action_name.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1386:24
     |
1386 |         self.add_code(&format!(";"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `";".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1409:24
     |
1409 |         self.add_code(&format!("{}", state_ref.name));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `state_ref.name.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1485:32
     |
1485 |                 self.add_code(&format!(")"));
     |                                ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1487:28
     |
1487 |             self.add_code(&format!(") {{"));
     |                            ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `") {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1493:28
     |
1493 |             self.add_code(&format!("}}"));
     |                            ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1512:24
     |
1512 |         self.add_code(&format!(";"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `";".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1524:28
     |
1524 |             self.add_code(&format!("{}",separator));
     |                            ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1556:30
     |
1556 |             output.push_str(&format!("{}",separator));
     |                              ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1593:48
     |
1593 | ...                   self.add_code(&format!("e._return = "));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1617:24
     |
1617 |         self.add_code(&format!(" else {{"));
     |                        ^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" else {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1630:48
     |
1630 | ...                   self.add_code(&format!("e._return = ",));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1649:24
     |
1649 |         self.add_code(&format!("}}"));
     |                        ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1689:36
     |
1689 |                     self.add_code(&format!(" || ("));
     |                                    ^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" || (".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1704:28
     |
1704 |             self.add_code(&format!(") {{"));
     |                            ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `") {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1710:28
     |
1710 |             self.add_code(&format!("}}"));
     |                            ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1739:48
     |
1739 | ...                   self.add_code(&format!("e._return = "));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1764:24
     |
1764 |         self.add_code(&format!(" else {{"));
     |                        ^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" else {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1777:48
     |
1777 | ...                   self.add_code(&format!("e._return = ",));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1797:24
     |
1797 |         self.add_code(&format!("}}"));
     |                        ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1838:36
     |
1838 |                     self.add_code(&format!(" || ("));
     |                                    ^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" || (".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1854:28
     |
1854 |             self.add_code(&format!(") {{"));
     |                            ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `") {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1860:28
     |
1860 |             self.add_code(&format!("}}"));
     |                            ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1890:48
     |
1890 | ...                   self.add_code(&format!("e._return = "));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1915:24
     |
1915 |         self.add_code(&format!(" else {{"));
     |                        ^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" else {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1928:48
     |
1928 | ...                   self.add_code(&format!("e._return = "));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1948:24
     |
1948 |         self.add_code(&format!("}}"));
     |                        ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1956:24
     |
1956 |         self.add_code(&format!("{}", match_pattern_node.match_pattern_number));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `match_pattern_node.match_pattern_number.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1966:24
     |
1966 |         self.add_code(&format!("("));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1969:28
     |
1969 |             self.add_code(&format!("{}",separator));
     |                            ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1973:24
     |
1973 |         self.add_code(&format!(")"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1985:26
     |
1985 |         output.push_str(&format!("("));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1988:30
     |
1988 |             output.push_str(&format!("{}",separator));
     |                              ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:1992:26
     |
1992 |         output.push_str(&format!(")"));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:2003:35
     |
2003 |                 => self.add_code(&format!("{}", literal_expression_node.value)),
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `literal_expression_node.value.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:2005:35
     |
2005 |                 => self.add_code(&format!("{}", literal_expression_node.value)),
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `literal_expression_node.value.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:2029:34
     |
2029 |                 output.push_str(&format!("{}", literal_expression_node.value))
     |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `literal_expression_node.value.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:2056:24
     |
2056 |         self.add_code(&format!("{}",identifier_node.name.lexeme));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `identifier_node.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:2065:26
     |
2065 |         output.push_str(&format!("{}",identifier_node.name.lexeme));
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `identifier_node.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:2100:36
     |
2100 |                     self.add_code(&format!("_stateStack_push_(_stateContext_);"));
     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_stateStack_push_(_stateContext_);".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:2102:36
     |
2102 |                     self.add_code(&format!("_stateStack_push_(_state_);"));
     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_stateStack_push_(_state_);".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:2107:36
     |
2107 |                     self.add_code(&format!("let stateContext = _stateStack_pop_()"));
     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"let stateContext = _stateStack_pop_()".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:2109:36
     |
2109 |                     self.add_code(&format!("FrameState state = _stateStack_pop_()"));
     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"FrameState state = _stateStack_pop_()".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:2131:85
     |
2131 |             FrameEventPart::Event { is_reference: _is_reference } => self.add_code(&format!("e")),
     |                                                                                     ^^^^^^^^^^^^ help: consider using `.to_string()`: `"e".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:2132:87
     |
2132 |             FrameEventPart::Message { is_reference: _is_reference } => self.add_code(&format!("e._message")),
     |                                                                                       ^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._message".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:2134:86
     |
2134 |             FrameEventPart::Return { is_reference: _is_reference } => self.add_code(&format!("e._return")),
     |                                                                                      ^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/javascript_visitor.rs:2146:70
     |
2146 |             FrameEventPart::Event { is_reference: _is_reference } => output.push_str("e"),
     |                                                                      ^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `output.push('e')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:2170:32
     |
2170 |                 self.add_code(&format!("{}",separator));
     |                                ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:2171:41
     |
2171 |                 subclass_code.push_str(&format!("{}",separator));
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:2173:32
     |
2173 |                 self.add_code(&format!("{}",param.param_name));
     |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `param.param_name.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:2174:41
     |
2174 |                 subclass_code.push_str(&format!("{}",param.param_name));
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `param.param_name.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:2177:33
     |
2177 |         subclass_code.push_str(&format!(") {{}}"));
     |                                 ^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `") {}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/javascript_visitor.rs:2180:24
     |
2180 |         self.add_code(&format!(") {{ throw new Error('Action not implemented.'); }}"));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `") { throw new Error(\'Action not implemented.\'); }".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/javascript_visitor.rs:2279:9
     |
2279 |         output.push_str(";");
     |         ^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `output.push(';')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/javascript_visitor.rs:2401:38
     |
2401 |             OperatorType::Negated => output.push_str("-"),
     |                                      ^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `output.push('-')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/javascript_visitor.rs:2408:34
     |
2408 |             OperatorType::Not => output.push_str("!"),
     |                                  ^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `output.push('!')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: this function has too many arguments (9/7)
  --> src/frame_c/visitors/cpp_visitor.rs:38:5
   |
38 | /     pub fn new(  arcanium:Arcanum
39 | |                , _config_yaml:&Yaml
40 | |                , generate_exit_args:bool
41 | |                , generate_state_context:bool
...  |
45 | |                , compiler_version:&str
46 | |                , comments:Vec<Token>) -> CppVisitor {
   | |___________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments

warning: length comparison to zero
  --> src/frame_c/visitors/cpp_visitor.rs:83:12
   |
83 |         if self.errors.len() > 0 {
   |            ^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!self.errors.is_empty()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: unneeded `return` statement
   --> src/frame_c/visitors/cpp_visitor.rs:131:9
    |
131 |         return var_type;
    |         ^^^^^^^^^^^^^^^^ help: remove `return`: `var_type`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/cpp_visitor.rs:151:21
    |
151 |                     code.push_str("(");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push('(')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/cpp_visitor.rs:157:21
    |
157 |                     code.push_str(")");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push(')')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/cpp_visitor.rs:168:21
    |
168 |                     code.push_str("(");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push('(')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/cpp_visitor.rs:174:21
    |
174 |                     code.push_str(")");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push(')')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/cpp_visitor.rs:185:21
    |
185 |                     code.push_str("(");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push('(')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/cpp_visitor.rs:191:21
    |
191 |                     code.push_str(")");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push(')')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:195:32
    |
195 |                 code.push_str(&format!("{}",variable_node.id_node.name.lexeme));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `variable_node.id_node.name.lexeme.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:199:32
    |
199 |                 code.push_str(&format!("{}",variable_node.id_node.name.lexeme));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `variable_node.id_node.name.lexeme.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.
   --> src/frame_c/visitors/cpp_visitor.rs:209:47
    |
209 |     fn format_parameter_list(&mut self,params:&Vec<ParameterNode>) {
    |                                               ^^^^^^^^^^^^^^^^^^^ help: change this to: `&[ParameterNode]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:212:28
    |
212 |             self.add_code(&format!("{}", separator));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: writing `&String` instead of `&str` involves a new object where a slice will do.
   --> src/frame_c/visitors/cpp_visitor.rs:224:49
    |
224 |     fn format_action_name(&mut self,action_name:&String) -> String {
    |                                                 ^^^^^^^ help: change this to: `&str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:237:30
    |
237 |         self.code.push_str(&*format!("{}",s));
    |                              ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `s.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: unneeded `return` statement
   --> src/frame_c/visitors/cpp_visitor.rs:255:9
    |
255 |         return (0..self.dent).map(|_| "    ").collect::<String>()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(0..self.dent).map(|_| "    ").collect::<String>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.
   --> src/frame_c/visitors/cpp_visitor.rs:272:52
    |
272 |     fn visit_decl_stmts(&mut self, decl_stmt_types:&Vec<DeclOrStmtType>) {
    |                                                    ^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[DeclOrStmtType]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:327:24
    |
327 |         self.add_code(&format!("public:"));
    |                        ^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"public:".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:334:28
    |
334 |             self.add_code(&format!("private:"));
    |                            ^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"private:".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:339:28
    |
339 |             self.add_code(&format!("typedef map<string,void*> FrameMap;"));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"typedef map<string,void*> FrameMap;".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:344:28
    |
344 |             self.add_code(&format!("FrameState _state_;"));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"FrameState _state_;".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:346:28
    |
346 |             self.add_code(&format!("StateContext* _pStateContext_;"));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"StateContext* _pStateContext_;".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:352:40
    |
352 | ...ode(&format!("private void _transition_(FrameState newState,Dictionary<string,object> exitArgs, StateContext stateContext) {{"));
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"private void _transition_(FrameState newState,Dictionary<string,object> exitArgs, StateContext stateContext) {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:354:40
    |
354 |                         self.add_code(&format!("private void _transition_(FrameState newState, StateContext stateContext) {{"));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"private void _transition_(FrameState newState, StateContext stateContext) {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:358:40
    |
358 |                         self.add_code(&format!("private void _transition_(FrameState newState,Dictionary<string,object> exitArgs) {{"));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"private void _transition_(FrameState newState,Dictionary<string,object> exitArgs) {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:360:40
    |
360 |                         self.add_code(&format!("private void _transition_(FrameState newState) {{"));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"private void _transition_(FrameState newState) {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:366:36
    |
366 |                     self.add_code(&format!("FrameEvent exitEvent(\"<\",exitArgs);"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"FrameEvent exitEvent(\"<\",exitArgs);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:368:36
    |
368 |                     self.add_code(&format!("FrameEvent exitEvent(\"<\",nullptr);"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"FrameEvent exitEvent(\"<\",nullptr);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:371:32
    |
371 |                 self.add_code(&format!("_state_ = newState;"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_state_ = newState;".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:373:32
    |
373 |                 self.add_code(&format!("if (_pStateContext_ && !_pStateContext_->isOnStateStack()) delete _pStateContext_;"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"if (_pStateContext_ && !_pStateContext_->isOnStateStack()) delete _pStateContext_;".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:376:36
    |
376 |                     self.add_code(&format!("_pStateContext_ = pContext;"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_pStateContext_ = pContext;".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:378:36
    |
378 |                     self.add_code(&format!("FrameEvent enterEvent(\">\", pContext->enterArgs);"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"FrameEvent enterEvent(\">\", pContext->enterArgs);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:380:36
    |
380 |                     self.add_code(&format!("FrameEvent enterEvent(\">\",nullptr);"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"FrameEvent enterEvent(\">\",nullptr);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:384:32
    |
384 |                 self.add_code(&format!("(this->*_state_)(enterEvent);"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"(this->*_state_)(enterEvent);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:387:32
    |
387 |                 self.add_code(&format!("}}"));
    |                                ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:392:32
    |
392 |                 self.add_code(&format!("std::vector<StateContext*> _stateStack_;"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"std::vector<StateContext*> _stateStack_;".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:395:32
    |
395 |                 self.add_code(&format!("void _stateStack_push(StateContext* pStateContext) {{"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"void _stateStack_push(StateContext* pStateContext) {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:398:32
    |
398 |                 self.add_code(&format!("pStateContext->setOnStateStack(true);"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"pStateContext->setOnStateStack(true);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:400:32
    |
400 |                 self.add_code(&format!("_stateStack_.push_back(pStateContext);"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_stateStack_.push_back(pStateContext);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:403:32
    |
403 |                 self.add_code(&format!("}}"));
    |                                ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:406:32
    |
406 |                 self.add_code(&format!("StateContext* _stateStack_pop() {{"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"StateContext* _stateStack_pop() {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:409:32
    |
409 |                 self.add_code(&format!("pStateContext =  _stateStack_.back();"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"pStateContext =  _stateStack_.back();".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:411:32
    |
411 |                 self.add_code(&format!("_stateStack_.pop_back();"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_stateStack_.pop_back();".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:413:32
    |
413 |                 self.add_code(&format!("pStateContext->setOnStateStack(false);"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"pStateContext->setOnStateStack(false);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:415:32
    |
415 |                 self.add_code(&format!("return pStateContext;"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"return pStateContext;".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:418:32
    |
418 |                 self.add_code(&format!("}}"));
    |                                ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:424:32
    |
424 |                 self.add_code(&format!("private void _changeState_(FrameState newState) {{"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"private void _changeState_(FrameState newState) {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:427:32
    |
427 |                 self.add_code(&format!("_state_ = newState;"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_state_ = newState;".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:430:32
    |
430 |                 self.add_code(&format!("}}"));
    |                                ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:451:38
    |
451 |                 self.code.push_str(&*format!("*/"));
    |                                      ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"*/".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: length comparison to zero
   --> src/frame_c/visitors/cpp_visitor.rs:529:16
    |
529 |             if exit_args.exprs_t.len() > 0 {
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!exit_args.exprs_t.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/cpp_visitor.rs:539:17
    |
539 |                 msg.push_str(":");
    |                 ^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `msg.push(':')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/cpp_visitor.rs:592:13
    |
592 |             msg.push_str(":");
    |             ^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `msg.push(':')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
   --> src/frame_c/visitors/cpp_visitor.rs:672:9
    |
672 | /         match target_state_rcref_opt {
673 | |             Some(q) => {
674 | | //                target_state_vars = "stateVars".to_string();
675 | |                 if let Some(state_symbol_rcref) = self.arcanium.get_state(&q.borrow().name) {
...   |
699 | |             },
700 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
    |
672 |         if let Some(q) = target_state_rcref_opt {
673 |         //                target_state_vars = "stateVars".to_string();
674 |                         if let Some(state_symbol_rcref) = self.arcanium.get_state(&q.borrow().name) {
675 |                             let state_symbol = state_symbol_rcref.borrow();
676 |                             let state_node = &state_symbol.state_node.as_ref().unwrap().borrow();
677 |                             // generate local state variables
  ...

warning: length comparison to zero
   --> src/frame_c/visitors/cpp_visitor.rs:751:16
    |
751 |             if exit_args.exprs_t.len() > 0 {
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!exit_args.exprs_t.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/cpp_visitor.rs:760:17
    |
760 |                 msg.push_str(":");
    |                 ^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `msg.push(':')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:799:28
    |
799 |             self.add_code(&format!("StateContext* pStateContext = _stateStack_pop_();"));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"StateContext* pStateContext = _stateStack_pop_();".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:801:28
    |
801 |             self.add_code(&format!("FrameState* pState = _stateStack_pop_();"));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"FrameState* pState = _stateStack_pop_();".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:807:32
    |
807 |                 self.add_code(&format!("_transition_(pStateContext->state,exitArgs,pStateContext);"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_transition_(pStateContext->state,exitArgs,pStateContext);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:809:32
    |
809 |                 self.add_code(&format!("_transition_(pState,exitArgs);"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_transition_(pState,exitArgs);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:813:32
    |
813 |                 self.add_code(&format!("_transition_(pStateContext->state,pStateContext);"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_transition_(pStateContext->state,pStateContext);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:815:32
    |
815 |                 self.add_code(&format!("_transition_(pState);"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_transition_(pState);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:838:24
    |
838 |         self.add_code(&format!("class StateContext;"));
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"class StateContext;".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:841:24
    |
841 |         self.add_code(&format!("public:"));
    |                        ^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"public:".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
   --> src/frame_c/visitors/cpp_visitor.rs:847:9
    |
847 | /         match (&system_node).get_first_state() {
848 | |             Some(x) => {
849 | |                 self.first_state_name = x.borrow().name.clone();
850 | |                 self.has_states = true;
851 | |             },
852 | |             None => {},
853 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
    |
847 |         if let Some(x) = (&system_node).get_first_state() {
848 |             self.first_state_name = x.borrow().name.clone();
849 |             self.has_states = true;
850 |         }
    |

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:863:32
    |
863 |                 self.add_code(&format!("_pStateContext_ = new StateContext(_state_);"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_pStateContext_ = new StateContext(_state_);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:891:28
    |
891 |             self.add_code(&format!("}}"));
    |                            ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:949:24
    |
949 |         self.add_code(&format!("{}", interface_method_call_expr_node.identifier.name.lexeme));
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `interface_method_call_expr_node.identifier.name.lexeme.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cpp_visitor.rs:960:26
    |
960 |         output.push_str(&format!("{}", interface_method_call_expr_node.identifier.name.lexeme));
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `interface_method_call_expr_node.identifier.name.lexeme.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: using `clone` on a `Copy` type
    --> src/frame_c/visitors/cpp_visitor.rs:1007:17
     |
1007 |             =>  self.format_parameter_list(params).clone(),
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.format_parameter_list(params)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

warning: passing a unit value to a function
    --> src/frame_c/visitors/cpp_visitor.rs:1007:17
     |
1007 |             =>  self.format_parameter_list(params).clone(),
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: `#[warn(clippy::unit_arg)]` on by default
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unit_arg
help: move the expression in front of the call and replace it with the unit literal `()`
     |
1007 |             =>  {
1008 |                 self.format_parameter_list(params);
1009 |                 ().clone()
1010 |             },
     |

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1037:24
     |
1037 |         self.add_code(&format!("(this->*_state_)(e);"));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"(this->*_state_)(e);".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1048:24
     |
1048 |         self.add_code(&format!("}}"));
     |                        ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: length comparison to zero
    --> src/frame_c/visitors/cpp_visitor.rs:1155:12
     |
1155 |         if state_node.evt_handlers_rcref.len() > 0 {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!state_node.evt_handlers_rcref.is_empty()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1192:32
     |
1192 |                 self.add_code(&format!("if (true) {{"));
     |                                ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"if (true) {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1195:32
     |
1195 |                 self.add_code(&format!("else {{"));
     |                                ^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"else {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1203:28
     |
1203 |             self.add_code(&format!("auto pStateContext = null;"));
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"auto pStateContext = null;".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
    --> src/frame_c/visitors/cpp_visitor.rs:1206:9
     |
1206 | /         match &evt_handler_node.msg_t {
1207 | |             MessageType::CustomMessage {..} => {
1208 | |                 // Note: this is a bit convoluted as we cant use self.add_code() inside the
1209 | |                 // if statements as it is a double borrow (sigh).
...    |
1220 | |
1221 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1206 |         if let MessageType::CustomMessage {..} = &evt_handler_node.msg_t {
1207 |             // Note: this is a bit convoluted as we cant use self.add_code() inside the
1208 |             // if statements as it is a double borrow (sigh).
1209 | 
1210 |             let params_code: Vec<String> = Vec::new();
1211 | 
   ...

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1248:24
     |
1248 |         self.add_code(&format!("}}"));
     |                        ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1290:24
     |
1290 |         self.add_code(&format!(";"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `";".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1303:32
     |
1303 |                 self.add_code(&format!("."));
     |                                ^^^^^^^^^^^^ help: consider using `.to_string()`: `".".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1307:24
     |
1307 |         self.add_code(&format!("{}", method_call.identifier.name.lexeme));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `method_call.identifier.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1325:34
     |
1325 |                 output.push_str(&format!("."));
     |                                  ^^^^^^^^^^^^ help: consider using `.to_string()`: `".".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1329:26
     |
1329 |         output.push_str(&format!("{}", method_call.identifier.name.lexeme));
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `method_call.identifier.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1343:24
     |
1343 |         self.add_code(&format!("("));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1347:28
     |
1347 |             self.add_code(&format!("{}",separator));
     |                            ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1352:24
     |
1352 |         self.add_code(&format!(")"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1362:26
     |
1362 |         output.push_str(&format!("("));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1366:30
     |
1366 |             output.push_str(&format!("{}",separator));
     |                              ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1371:26
     |
1371 |         output.push_str(&format!(")"));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1381:24
     |
1381 |         self.add_code(&format!("{}", action_name));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `action_name.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1392:26
     |
1392 |         output.push_str(&format!("{}",action_name));
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `action_name.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1403:24
     |
1403 |         self.add_code(&format!(";"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `";".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1426:24
     |
1426 |         self.add_code(&format!("{}", state_ref.name));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `state_ref.name.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1502:32
     |
1502 |                 self.add_code(&format!(")"));
     |                                ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1504:28
     |
1504 |             self.add_code(&format!(") {{"));
     |                            ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `") {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1510:28
     |
1510 |             self.add_code(&format!("}}"));
     |                            ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1529:24
     |
1529 |         self.add_code(&format!(";"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `";".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1541:28
     |
1541 |             self.add_code(&format!("{}",separator));
     |                            ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1573:30
     |
1573 |             output.push_str(&format!("{}",separator));
     |                              ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1634:24
     |
1634 |         self.add_code(&format!(" else {{"));
     |                        ^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" else {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1666:24
     |
1666 |         self.add_code(&format!("}}"));
     |                        ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1705:36
     |
1705 |                     self.add_code(&format!(" || ("));
     |                                    ^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" || (".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1720:28
     |
1720 |             self.add_code(&format!(" {{"));
     |                            ^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1726:28
     |
1726 |             self.add_code(&format!("}}"));
     |                            ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1777:24
     |
1777 |         self.add_code(&format!(" else {{"));
     |                        ^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" else {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1810:24
     |
1810 |         self.add_code(&format!("}}"));
     |                        ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1851:36
     |
1851 |                     self.add_code(&format!(" || ("));
     |                                    ^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" || (".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1867:28
     |
1867 |             self.add_code(&format!(") {{"));
     |                            ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `") {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1873:28
     |
1873 |             self.add_code(&format!("}}"));
     |                            ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1928:24
     |
1928 |         self.add_code(&format!(" else {{"));
     |                        ^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" else {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1961:24
     |
1961 |         self.add_code(&format!("}}"));
     |                        ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1969:24
     |
1969 |         self.add_code(&format!("{}", match_pattern_node.match_pattern_number));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `match_pattern_node.match_pattern_number.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1979:24
     |
1979 |         self.add_code(&format!("("));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1982:28
     |
1982 |             self.add_code(&format!("{}",separator));
     |                            ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1986:24
     |
1986 |         self.add_code(&format!(")"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:1998:26
     |
1998 |         output.push_str(&format!("{{"));
     |                          ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"{".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:2001:30
     |
2001 |             output.push_str(&format!("{}",separator));
     |                              ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:2005:26
     |
2005 |         output.push_str(&format!("}}"));
     |                          ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:2016:35
     |
2016 |                 => self.add_code(&format!("{}", literal_expression_node.value)),
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `literal_expression_node.value.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:2018:35
     |
2018 |                 => self.add_code(&format!("{}", literal_expression_node.value)),
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `literal_expression_node.value.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:2042:34
     |
2042 |                 output.push_str(&format!("{}", literal_expression_node.value))
     |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `literal_expression_node.value.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:2069:24
     |
2069 |         self.add_code(&format!("{}",identifier_node.name.lexeme));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `identifier_node.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:2078:26
     |
2078 |         output.push_str(&format!("{}",identifier_node.name.lexeme));
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `identifier_node.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:2114:36
     |
2114 |                     self.add_code(&format!("_stateStack_push_(_state_context_);"));
     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_stateStack_push_(_state_context_);".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:2116:36
     |
2116 |                     self.add_code(&format!("_stateStack_push_(_state_);"));
     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_stateStack_push_(_state_);".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:2121:36
     |
2121 |                     self.add_code(&format!("_pStateStack_ = _stateStack_pop_()"));
     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_pStateStack_ = _stateStack_pop_()".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:2123:36
     |
2123 |                     self.add_code(&format!("let state = _stateStack_pop_()"));
     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"let state = _stateStack_pop_()".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:2147:85
     |
2147 |             FrameEventPart::Event { is_reference: _is_reference } => self.add_code(&format!("e")),
     |                                                                                     ^^^^^^^^^^^^ help: consider using `.to_string()`: `"e".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:2148:87
     |
2148 |             FrameEventPart::Message { is_reference: _is_reference } => self.add_code(&format!("e._message")),
     |                                                                                       ^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._message".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:2150:86
     |
2150 |             FrameEventPart::Return { is_reference: _is_reference } => self.add_code(&format!("e._return")),
     |                                                                                      ^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/cpp_visitor.rs:2162:70
     |
2162 |             FrameEventPart::Event { is_reference: _is_reference } => output.push_str("e"),
     |                                                                      ^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `output.push('e')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: using `clone` on a `Copy` type
    --> src/frame_c/visitors/cpp_visitor.rs:2186:21
     |
2186 |                 =>  self.format_parameter_list(params).clone(),
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.format_parameter_list(params)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

warning: passing a unit value to a function
    --> src/frame_c/visitors/cpp_visitor.rs:2186:21
     |
2186 |                 =>  self.format_parameter_list(params).clone(),
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unit_arg
help: move the expression in front of the call and replace it with the unit literal `()`
     |
2186 |                 =>  {
2187 |                     self.format_parameter_list(params);
2188 |                     ().clone()
2189 |                 },
     |

warning: useless use of `format!`
    --> src/frame_c/visitors/cpp_visitor.rs:2190:24
     |
2190 |         self.add_code(&format!(") {{}}"));
     |                        ^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `") {}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/cpp_visitor.rs:2283:9
     |
2283 |         output.push_str(";");
     |         ^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `output.push(';')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/cpp_visitor.rs:2403:38
     |
2403 |             OperatorType::Negated => output.push_str("-"),
     |                                      ^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `output.push('-')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/cpp_visitor.rs:2410:34
     |
2410 |             OperatorType::Not => output.push_str("!"),
     |                                  ^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `output.push('!')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: this function has too many arguments (8/7)
  --> src/frame_c/visitors/cs_visitor_for_bob.rs:41:5
   |
41 | /     pub fn new(   arcanium:Arcanum
42 | |                 , generate_exit_args:bool
43 | |                 , generate_state_context:bool
44 | |                 , _generate_state_stack:bool
...  |
47 | |                 , compiler_version:&str
48 | |                 , comments:Vec<Token>) -> CsVisitorForBob {
   | |_________________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments

warning: length comparison to zero
  --> src/frame_c/visitors/cs_visitor_for_bob.rs:88:12
   |
88 |         if self.errors.len() > 0 {
   |            ^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!self.errors.is_empty()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: unneeded `return` statement
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:139:9
    |
139 |         return var_type;
    |         ^^^^^^^^^^^^^^^^ help: remove `return`: `var_type`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: statement can be reduced
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:134:17
    |
134 |                 &self.errors.push("Unknown scope.".to_string());
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `self.errors.push("Unknown scope.".to_string());`
    |
    = note: `#[warn(clippy::unnecessary_operation)]` on by default
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:159:21
    |
159 |                     code.push_str("(");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push('(')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:165:21
    |
165 |                     code.push_str(")");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push(')')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:176:21
    |
176 |                     code.push_str("(");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push('(')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:182:21
    |
182 |                     code.push_str(")");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push(')')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:193:21
    |
193 |                     code.push_str("(");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push('(')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:199:21
    |
199 |                     code.push_str(")");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push(')')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:204:32
    |
204 |                 code.push_str(&format!("{}",variable_node.id_node.name.lexeme));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `variable_node.id_node.name.lexeme.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:208:32
    |
208 |                 code.push_str(&format!("{}",variable_node.id_node.name.lexeme));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `variable_node.id_node.name.lexeme.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:218:47
    |
218 |     fn format_parameter_list(&mut self,params:&Vec<ParameterNode>) {
    |                                               ^^^^^^^^^^^^^^^^^^^ help: change this to: `&[ParameterNode]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:221:28
    |
221 |             self.add_code(&format!("{}", separator));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:233:57
    |
233 |     fn format_parameter_list_to_string(&mut self,params:&Vec<ParameterNode>,output:&mut String) {
    |                                                         ^^^^^^^^^^^^^^^^^^^ help: change this to: `&[ParameterNode]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:236:30
    |
236 |             output.push_str(&format!("{}", separator));
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: writing `&String` instead of `&str` involves a new object where a slice will do.
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:248:49
    |
248 |     fn format_action_name(&mut self,action_name:&String) -> String {
    |                                                 ^^^^^^^ help: change this to: `&str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:261:30
    |
261 |         self.code.push_str(&*format!("{}",s));
    |                              ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `s.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: unneeded `return` statement
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:279:9
    |
279 |         return (0..self.dent).map(|_| "    ").collect::<String>()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(0..self.dent).map(|_| "    ").collect::<String>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:316:52
    |
316 |     fn visit_decl_stmts(&mut self, decl_stmt_types:&Vec<DeclOrStmtType>) {
    |                                                    ^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[DeclOrStmtType]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:495:34
    |
495 |             self.code.push_str(&*format!("{}",line));
    |                                  ^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `line.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:516:38
    |
516 |                 self.code.push_str(&*format!("*/"));
    |                                      ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"*/".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:562:30
    |
562 |         let state_ref_code = format!("{}",self.format_target_state_name(target_state_name));
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `self.format_target_state_name(target_state_name).to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: length comparison to zero
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:582:16
    |
582 |             if exit_args.exprs_t.len() > 0 {
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!exit_args.exprs_t.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:592:17
    |
592 |                 msg.push_str(":");
    |                 ^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `msg.push(':')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:623:50
    |
623 |                         None => self.errors.push(format!("Fatal error: misaligned parameters to arguments.")),
    |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Fatal error: misaligned parameters to arguments.".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:647:13
    |
647 |             msg.push_str(":");
    |             ^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `msg.push(':')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:654:46
    |
654 | ...                   self.errors.push(format!("Fatal error: misaligned parameters to arguments."));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Fatal error: misaligned parameters to arguments.".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:720:34
    |
720 |                 self.errors.push(format!("TODO"));
    |                                  ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:728:9
    |
728 | /         match target_state_rcref_opt {
729 | |             Some(q) => {
730 | | //                target_state_vars = "stateVars".to_string();
731 | |                 if let Some(state_symbol_rcref) = self.arcanium.get_state(&q.borrow().name) {
...   |
754 | |             },
755 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
    |
728 |         if let Some(q) = target_state_rcref_opt {
729 |         //                target_state_vars = "stateVars".to_string();
730 |                         if let Some(state_symbol_rcref) = self.arcanium.get_state(&q.borrow().name) {
731 |                             let state_symbol = state_symbol_rcref.borrow();
732 |                             let state_node = &state_symbol.state_node.as_ref().unwrap().borrow();
733 |                             // generate local state variables
  ...

warning: length comparison to zero
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:802:16
    |
802 |             if exit_args.exprs_t.len() > 0 {
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!exit_args.exprs_t.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:811:17
    |
811 |                 msg.push_str(":");
    |                 ^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `msg.push(':')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:818:50
    |
818 | ...                   self.errors.push(format!("Fatal error: misaligned parameters to arguments."));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Fatal error: misaligned parameters to arguments.".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:844:46
    |
844 | ...                   self.errors.push(format!("Fatal error: misaligned parameters to arguments.")),
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Fatal error: misaligned parameters to arguments.".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:847:38
    |
847 |                     self.errors.push(format!("TODO"));
    |                                      ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:853:28
    |
853 |             self.add_code(&format!("StateContext stateContext = _stateStack_pop_();"));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"StateContext stateContext = _stateStack_pop_();".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:855:28
    |
855 |             self.add_code(&format!("FrameState state = _stateStack_pop_();"));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"FrameState state = _stateStack_pop_();".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:860:32
    |
860 |                 self.add_code(&format!("_transition_(stateContext.state,exitArgs,stateContext);"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_transition_(stateContext.state,exitArgs,stateContext);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:862:32
    |
862 |                 self.add_code(&format!("_transition_(state,exitArgs);"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_transition_(state,exitArgs);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:866:32
    |
866 |                 self.add_code(&format!("_transition_(stateContext.state,stateContext);"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_transition_(stateContext.state,stateContext);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:868:32
    |
868 |                 self.add_code(&format!("_transition_(state);"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_transition_(state);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:891:24
    |
891 |         self.add_code(&format!("public FrameController self;"));
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"public FrameController self;".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:897:9
    |
897 | /         match (&system_node).get_first_state() {
898 | |             Some(x) => {
899 | |                 self.first_state_name = x.borrow().name.clone();
900 | |                 self.has_states = true;
901 | |             },
902 | |             None => {},
903 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
    |
897 |         if let Some(x) = (&system_node).get_first_state() {
898 |             self.first_state_name = x.borrow().name.clone();
899 |             self.has_states = true;
900 |         }
    |

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:911:28
    |
911 |             self.add_code(&format!("self = this;"));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"self = this;".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:942:28
    |
942 |             self.add_code(&format!("}}"));
    |                            ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor_for_bob.rs:981:33
    |
981 |         self.subclass_code.push(format!("}}"));
    |                                 ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1035:24
     |
1035 |         self.add_code(&format!("{}",interface_method_call_expr_node.identifier.name.lexeme));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `interface_method_call_expr_node.identifier.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1046:26
     |
1046 |         output.push_str(&format!("{}",interface_method_call_expr_node.identifier.name.lexeme));
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `interface_method_call_expr_node.identifier.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: using `clone` on a `Copy` type
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1093:17
     |
1093 |             =>  self.format_parameter_list(params).clone(),
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.format_parameter_list(params)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

warning: passing a unit value to a function
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1093:17
     |
1093 |             =>  self.format_parameter_list(params).clone(),
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unit_arg
help: move the expression in front of the call and replace it with the unit literal `()`
     |
1093 |             =>  {
1094 |                 self.format_parameter_list(params);
1095 |                 ().clone()
1096 |             },
     |

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1121:24
     |
1121 |         self.add_code(&format!("_state_(e);"));
     |                        ^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_state_(e);".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1132:24
     |
1132 |         self.add_code(&format!("}}"));
     |                        ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: length comparison to zero
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1249:12
     |
1249 |         if state_node.evt_handlers_rcref.len() > 0 {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!state_node.evt_handlers_rcref.is_empty()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1286:32
     |
1286 |                 self.add_code(&format!("if (true) {{"));
     |                                ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"if (true) {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1289:32
     |
1289 |                 self.add_code(&format!("else {{"));
     |                                ^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"else {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1297:28
     |
1297 |             self.add_code(&format!("StateContext stateContext = null;"));
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"StateContext stateContext = null;".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1300:9
     |
1300 | /         match &evt_handler_node.msg_t {
1301 | |             MessageType::CustomMessage {..} => {
1302 | |                 // Note: this is a bit convoluted as we cant use self.add_code() inside the
1303 | |                 // if statements as it is a double borrow (sigh).
...    |
1313 | |             _ => {}
1314 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1300 |         if let MessageType::CustomMessage {..} = &evt_handler_node.msg_t {
1301 |             // Note: this is a bit convoluted as we cant use self.add_code() inside the
1302 |             // if statements as it is a double borrow (sigh).
1303 | 
1304 |             let params_code: Vec<String> = Vec::new();
1305 | 
   ...

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1340:24
     |
1340 |         self.add_code(&format!("}}"));
     |                        ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1357:40
     |
1357 |                         self.add_code(&format!("e.Return = "));
     |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e.Return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1380:24
     |
1380 |         self.add_code(&format!(";"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `";".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1393:32
     |
1393 |                 self.add_code(&format!("."));
     |                                ^^^^^^^^^^^^ help: consider using `.to_string()`: `".".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1397:24
     |
1397 |         self.add_code(&format!("{}", method_call.identifier.name.lexeme));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `method_call.identifier.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1415:34
     |
1415 |                 output.push_str(&format!("."));
     |                                  ^^^^^^^^^^^^ help: consider using `.to_string()`: `".".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1419:26
     |
1419 |         output.push_str(&format!("{}", method_call.identifier.name.lexeme));
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `method_call.identifier.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1433:24
     |
1433 |         self.add_code(&format!("("));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1437:28
     |
1437 |             self.add_code(&format!("{}",separator));
     |                            ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1442:24
     |
1442 |         self.add_code(&format!(")"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1452:26
     |
1452 |         output.push_str(&format!("("));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1456:30
     |
1456 |             output.push_str(&format!("{}",separator));
     |                              ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1461:26
     |
1461 |         output.push_str(&format!(")"));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1471:24
     |
1471 |         self.add_code(&format!("{}", action_name));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `action_name.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1483:26
     |
1483 |         output.push_str(&format!("{}",action_name));
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `action_name.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1495:24
     |
1495 |         self.add_code(&format!(";"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `";".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1518:24
     |
1518 |         self.add_code(&format!("{}", state_ref.name));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `state_ref.name.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1531:37
     |
1531 |                 => self.errors.push(format!("Fatal error - change state stack pop not implemented."),)
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Fatal error - change state stack pop not implemented.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1594:32
     |
1594 |                 self.add_code(&format!(")"));
     |                                ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1596:28
     |
1596 |             self.add_code(&format!(") {{"));
     |                            ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `") {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1602:28
     |
1602 |             self.add_code(&format!("}}"));
     |                            ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1621:24
     |
1621 |         self.add_code(&format!(";"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `";".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1633:28
     |
1633 |             self.add_code(&format!("{}",separator));
     |                            ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1665:30
     |
1665 |             output.push_str(&format!("{}",separator));
     |                              ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1702:48
     |
1702 | ...                   self.add_code(&format!("e.Return = "));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e.Return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1726:24
     |
1726 |         self.add_code(&format!(" else {{"));
     |                        ^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" else {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1739:48
     |
1739 | ...                   self.add_code(&format!("e.Return = ",));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e.Return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1758:24
     |
1758 |         self.add_code(&format!("}}"));
     |                        ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1786:42
     |
1786 |                         self.errors.push(format!("Error - expression list is not testable."));
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Error - expression list is not testable.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1793:39
     |
1793 |                 _ => self.errors.push(format!("TODO")),
     |                                       ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1807:36
     |
1807 |                     self.add_code(&format!(" || ("));
     |                                    ^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" || (".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1817:47
     |
1817 |                         _ => self.errors.push(format!("TODO")),
     |                                               ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1822:28
     |
1822 |             self.add_code(&format!(" {{"));
     |                            ^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1828:28
     |
1828 |             self.add_code(&format!("}}"));
     |                            ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1854:48
     |
1854 | ...                   self.add_code(&format!("e.Return = "));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e.Return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1879:24
     |
1879 |         self.add_code(&format!(" else {{"));
     |                        ^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" else {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1892:48
     |
1892 | ...                   self.add_code(&format!("e.Return = ",));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e.Return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1912:24
     |
1912 |         self.add_code(&format!("}}"));
     |                        ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1922:26
     |
1922 |         self.errors.push(format!("Not implemented."));
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Not implemented.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1948:42
     |
1948 |                         self.errors.push(format!("Error - expression list is not testable."));
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Error - expression list is not testable.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1953:39
     |
1953 |                 _ => self.errors.push(format!("TODO.")),
     |                                       ^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1962:36
     |
1962 |                     self.add_code(&format!(" || ("));
     |                                    ^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" || (".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1978:28
     |
1978 |             self.add_code(&format!(") {{"));
     |                            ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `") {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:1984:28
     |
1984 |             self.add_code(&format!("}}"));
     |                            ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:2014:48
     |
2014 | ...                   self.add_code(&format!("e.Return = "));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e.Return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:2039:24
     |
2039 |         self.add_code(&format!(" else {{"));
     |                        ^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" else {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:2052:48
     |
2052 | ...                   self.add_code(&format!("e.Return = "));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e.Return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:2072:24
     |
2072 |         self.add_code(&format!("}}"));
     |                        ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:2080:24
     |
2080 |         self.add_code(&format!("{}", match_pattern_node.match_pattern_number));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `match_pattern_node.match_pattern_number.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:2090:24
     |
2090 |         self.add_code(&format!("("));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:2093:28
     |
2093 |             self.add_code(&format!("{}",separator));
     |                            ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:2097:24
     |
2097 |         self.add_code(&format!(")"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:2109:26
     |
2109 |         output.push_str(&format!("("));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:2112:30
     |
2112 |             output.push_str(&format!("{}",separator));
     |                              ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:2116:26
     |
2116 |         output.push_str(&format!(")"));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:2127:35
     |
2127 |                 => self.add_code(&format!("{}", literal_expression_node.value)),
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `literal_expression_node.value.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:2129:35
     |
2129 |                 => self.add_code(&format!("{}", literal_expression_node.value)),
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `literal_expression_node.value.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:2153:34
     |
2153 |                 output.push_str(&format!("{}", literal_expression_node.value))
     |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `literal_expression_node.value.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:2180:24
     |
2180 |         self.add_code(&format!("{}",identifier_node.name.lexeme));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `identifier_node.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:2189:26
     |
2189 |         output.push_str(&format!("{}",identifier_node.name.lexeme));
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `identifier_node.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:2224:36
     |
2224 |                     self.add_code(&format!("_stateStack_push_(_state_context_);"));
     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_stateStack_push_(_state_context_);".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:2226:36
     |
2226 |                     self.add_code(&format!("_stateStack_push_(_state_);"));
     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_stateStack_push_(_state_);".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:2231:35
     |
2231 |                    self.add_code(&format!("let stateContext = _stateStack_pop_()"));
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"let stateContext = _stateStack_pop_()".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:2233:35
     |
2233 |                    self.add_code(&format!("let state = _stateStack_pop_()"));
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"let state = _stateStack_pop_()".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:2255:85
     |
2255 |             FrameEventPart::Event { is_reference: _is_reference } => self.add_code(&format!("e")),
     |                                                                                     ^^^^^^^^^^^^ help: consider using `.to_string()`: `"e".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:2256:87
     |
2256 |             FrameEventPart::Message { is_reference: _is_reference } => self.add_code(&format!("e._message")),
     |                                                                                       ^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._message".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:2258:86
     |
2258 |             FrameEventPart::Return { is_reference: _is_reference } => self.add_code(&format!("e._return")),
     |                                                                                      ^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:2271:70
     |
2271 |             FrameEventPart::Event { is_reference: _is_reference } => output.push_str("e"),
     |                                                                      ^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `output.push('e')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:2306:24
     |
2306 |         self.add_code(&format!(") {{ throw new NotImplementedException(); }}"));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `") { throw new NotImplementedException(); }".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:2307:31
     |
2307 |         action_code.push_str(&format!(") {{ throw new NotImplementedException(); }}"));
     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `") { throw new NotImplementedException(); }".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:2403:9
     |
2403 |         output.push_str(";");
     |         ^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `output.push(';')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:2523:38
     |
2523 |             OperatorType::Negated => output.push_str("-"),
     |                                      ^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `output.push('-')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/cs_visitor_for_bob.rs:2530:34
     |
2530 |             OperatorType::Not => output.push_str("!"),
     |                                  ^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `output.push('!')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: this function has too many arguments (9/7)
  --> src/frame_c/visitors/plantuml_visitor.rs:38:5
   |
38 | /     pub fn new(   arcanium:Arcanum
39 | |                   , system_hierarchy:SystemHierarchy
40 | |                   , generate_exit_args:bool
41 | |                   , _generate_state_context:bool
...  |
45 | |                   , compiler_version:&str
46 | |                   , _comments:Vec<Token>) -> PlantUmlVisitor {
   | |____________________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments

warning: writing `&String` instead of `&str` involves a new object where a slice will do.
   --> src/frame_c/visitors/plantuml_visitor.rs:129:41
    |
129 |     fn generate_states(&self, node_name:&String, is_system_node:bool, indent:usize, output:&mut String) {
    |                                         ^^^^^^^ help: change this to: `&str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.
   --> src/frame_c/visitors/plantuml_visitor.rs:217:47
    |
217 |     fn format_parameter_list(&mut self,params:&Vec<ParameterNode>) {
    |                                               ^^^^^^^^^^^^^^^^^^^ help: change this to: `&[ParameterNode]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: useless use of `format!`
   --> src/frame_c/visitors/plantuml_visitor.rs:220:28
    |
220 |             self.add_code(&format!("{}", separator));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: writing `&String` instead of `&str` involves a new object where a slice will do.
   --> src/frame_c/visitors/plantuml_visitor.rs:232:49
    |
232 |     fn format_action_name(&mut self,action_name:&String) -> String {
    |                                                 ^^^^^^^ help: change this to: `&str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: useless use of `format!`
   --> src/frame_c/visitors/plantuml_visitor.rs:245:30
    |
245 |         self.code.push_str(&*format!("{}",s));
    |                              ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `s.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: unneeded `return` statement
   --> src/frame_c/visitors/plantuml_visitor.rs:263:9
    |
263 |         return (0..self.dent).map(|_| "    ").collect::<String>()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(0..self.dent).map(|_| "    ").collect::<String>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
   --> src/frame_c/visitors/plantuml_visitor.rs:269:9
    |
269 |         return (0..dent).map(|_| "    ").collect::<String>()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(0..dent).map(|_| "    ").collect::<String>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.
   --> src/frame_c/visitors/plantuml_visitor.rs:286:52
    |
286 |     fn visit_decl_stmts(&mut self, decl_stmt_types:&Vec<DeclOrStmtType>) {
    |                                                    ^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[DeclOrStmtType]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: this match could be replaced by its body itself
   --> src/frame_c/visitors/plantuml_visitor.rs:297:29
    |
297 | / ...                   match expr_stmt_t {
298 | | ...                       // ExprStmtType::ActionCallStmtT { action_call_stmt_node }
299 | | ...                       // => action_call_stmt_node.accept(self),                        // // TODO
300 | | ...                       // ExprStmtType::CallStmtT { call_stmt_node }
...   |
308 | | ...                       _ => {}
309 | | ...                   }
    | |_______________________^ help: consider using the match body instead: `{}`
    |
    = note: `#[warn(clippy::match_single_binding)]` on by default
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_single_binding

warning: redundant clone
   --> src/frame_c/visitors/plantuml_visitor.rs:479:41
    |
479 |                 format!(" : {}", cleaned.clone())
    |                                         ^^^^^^^^ help: remove this
    |
note: this value is dropped without further use
   --> src/frame_c/visitors/plantuml_visitor.rs:479:34
    |
479 |                 format!(" : {}", cleaned.clone())
    |                                  ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone

warning: redundant clone
   --> src/frame_c/visitors/plantuml_visitor.rs:720:41
    |
720 |                 format!(" : {}", cleaned.clone())
    |                                         ^^^^^^^^ help: remove this
    |
note: this value is dropped without further use
   --> src/frame_c/visitors/plantuml_visitor.rs:720:34
    |
720 |                 format!(" : {}", cleaned.clone())
    |                                  ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone

warning: useless use of `format!`
   --> src/frame_c/visitors/plantuml_visitor.rs:508:31
    |
508 |         let _state_ref_code = format!("{}",self.format_target_state_name(target_state_name));
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `self.format_target_state_name(target_state_name).to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/plantuml_visitor.rs:738:9
    |
738 |         format!("{}",state_name)
    |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `state_name.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: redundant clone
   --> src/frame_c/visitors/plantuml_visitor.rs:813:41
    |
813 |                 format!(" : {}", cleaned.clone())
    |                                         ^^^^^^^^ help: remove this
    |
note: this value is dropped without further use
   --> src/frame_c/visitors/plantuml_visitor.rs:813:34
    |
813 |                 format!(" : {}", cleaned.clone())
    |                                  ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone

warning: length comparison to zero
   --> src/frame_c/visitors/plantuml_visitor.rs:760:16
    |
760 |             if exit_args.exprs_t.len() > 0 {
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!exit_args.exprs_t.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: useless use of `format!`
   --> src/frame_c/visitors/plantuml_visitor.rs:835:24
    |
835 |         self.add_code(&format!("@startuml\n"));
    |                        ^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"@startuml\n".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
   --> src/frame_c/visitors/plantuml_visitor.rs:844:9
    |
844 | /         match (&system_node).get_first_state() {
845 | |             Some(x) => {
846 | |                 self.first_state_name = x.borrow().name.clone();
847 | |                 self.transitions.push_str(&format!("[*] --> {}\n",self.first_state_name));
...   |
850 | |             None => {},
851 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
    |
844 |         if let Some(x) = (&system_node).get_first_state() {
845 |                        self.first_state_name = x.borrow().name.clone();
846 |                        self.transitions.push_str(&format!("[*] --> {}\n",self.first_state_name));
847 |         //               self.has_states = true;
848 |                    }
    |

warning: using `clone` on a `Copy` type
    --> src/frame_c/visitors/plantuml_visitor.rs:1003:17
     |
1003 |             =>  self.format_parameter_list(params).clone(),
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.format_parameter_list(params)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

warning: passing a unit value to a function
    --> src/frame_c/visitors/plantuml_visitor.rs:1003:17
     |
1003 |             =>  self.format_parameter_list(params).clone(),
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unit_arg
help: move the expression in front of the call and replace it with the unit literal `()`
     |
1003 |             =>  {
1004 |                 self.format_parameter_list(params);
1005 |                 ().clone()
1006 |             },
     |

warning: useless use of `format!`
    --> src/frame_c/visitors/plantuml_visitor.rs:1031:24
     |
1031 |         self.add_code(&format!("_state_(e);"));
     |                        ^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_state_(e);".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/plantuml_visitor.rs:1042:24
     |
1042 |         self.add_code(&format!("}}"));
     |                        ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: length comparison to zero
    --> src/frame_c/visitors/plantuml_visitor.rs:1149:12
     |
1149 |         if state_node.evt_handlers_rcref.len() > 0 {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!state_node.evt_handlers_rcref.is_empty()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: redundant clone
    --> src/frame_c/visitors/plantuml_visitor.rs:1178:81
     |
1178 |             self.event_handler_msg = format!("&#124;{}&#124;",message_node.name).to_string();
     |                                                                                 ^^^^^^^^^^^^ help: remove this
     |
note: this value is dropped without further use
    --> src/frame_c/visitors/plantuml_visitor.rs:1178:38
     |
1178 |             self.event_handler_msg = format!("&#124;{}&#124;",message_node.name).to_string();
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone

warning: useless use of `format!`
    --> src/frame_c/visitors/plantuml_visitor.rs:1248:24
     |
1248 |         self.add_code(&format!(";"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `";".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/plantuml_visitor.rs:1261:32
     |
1261 |                 self.add_code(&format!("."));
     |                                ^^^^^^^^^^^^ help: consider using `.to_string()`: `".".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/plantuml_visitor.rs:1269:24
     |
1269 |         self.add_code(&format!(")"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/plantuml_visitor.rs:1283:34
     |
1283 |                 output.push_str(&format!("."));
     |                                  ^^^^^^^^^^^^ help: consider using `.to_string()`: `".".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/plantuml_visitor.rs:1291:26
     |
1291 |         output.push_str(&format!(")"));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/plantuml_visitor.rs:1319:26
     |
1319 |         output.push_str(&format!(")"));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/plantuml_visitor.rs:1329:24
     |
1329 |         self.add_code(&format!("("));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/plantuml_visitor.rs:1333:28
     |
1333 |             self.add_code(&format!("{}",separator));
     |                            ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/plantuml_visitor.rs:1338:24
     |
1338 |         self.add_code(&format!(")"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/plantuml_visitor.rs:1348:26
     |
1348 |         output.push_str(&format!("("));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/plantuml_visitor.rs:1352:30
     |
1352 |             output.push_str(&format!("{}",separator));
     |                              ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/plantuml_visitor.rs:1357:26
     |
1357 |         output.push_str(&format!(")"));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/plantuml_visitor.rs:1367:24
     |
1367 |         self.add_code(&format!(";"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `";".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/plantuml_visitor.rs:1390:24
     |
1390 |         self.add_code(&format!("{}", state_ref.name));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `state_ref.name.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/plantuml_visitor.rs:1491:24
     |
1491 |         self.add_code(&format!(";"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `";".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/plantuml_visitor.rs:1910:24
     |
1910 |         self.add_code(&format!("{}", match_pattern_node.match_pattern_number));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `match_pattern_node.match_pattern_number.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/plantuml_visitor.rs:1938:30
     |
1938 |             output.push_str(&format!("{}",separator));
     |                              ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/plantuml_visitor.rs:1952:31
     |
1952 |             => self.add_code(&format!("{}", literal_expression_node.value)),
     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `literal_expression_node.value.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/plantuml_visitor.rs:1954:31
     |
1954 |             => self.add_code(&format!("{}", literal_expression_node.value)),
     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `literal_expression_node.value.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/plantuml_visitor.rs:1978:34
     |
1978 |                 output.push_str(&format!("{}", literal_expression_node.value))
     |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `literal_expression_node.value.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/plantuml_visitor.rs:2071:85
     |
2071 |             FrameEventPart::Event { is_reference: _is_reference } => self.add_code(&format!("e")),
     |                                                                                     ^^^^^^^^^^^^ help: consider using `.to_string()`: `"e".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/plantuml_visitor.rs:2072:86
     |
2072 |             FrameEventPart::Message { is_reference: _is_reference }=> self.add_code(&format!("e._message")),
     |                                                                                      ^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._message".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/plantuml_visitor.rs:2074:86
     |
2074 |             FrameEventPart::Return { is_reference: _is_reference } => self.add_code(&format!("e._return")),
     |                                                                                      ^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/plantuml_visitor.rs:2087:70
     |
2087 |             FrameEventPart::Event { is_reference: _is_reference } => output.push_str("e"),
     |                                                                      ^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `output.push('e')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: using `clone` on a `Copy` type
    --> src/frame_c/visitors/plantuml_visitor.rs:2111:17
     |
2111 |             =>  self.format_parameter_list(params).clone(),
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.format_parameter_list(params)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

warning: passing a unit value to a function
    --> src/frame_c/visitors/plantuml_visitor.rs:2111:17
     |
2111 |             =>  self.format_parameter_list(params).clone(),
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unit_arg
help: move the expression in front of the call and replace it with the unit literal `()`
     |
2111 |             =>  {
2112 |                 self.format_parameter_list(params);
2113 |                 ().clone()
2114 |             },
     |

warning: useless use of `format!`
    --> src/frame_c/visitors/plantuml_visitor.rs:2115:24
     |
2115 |         self.add_code(&format!(") {{}}"));
     |                        ^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `") {}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/plantuml_visitor.rs:2208:9
     |
2208 |         output.push_str(";");
     |         ^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `output.push(';')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: this function has too many arguments (8/7)
  --> src/frame_c/visitors/cs_visitor.rs:41:5
   |
41 | /     pub fn new(   arcanium:Arcanum
42 | |                   , generate_exit_args:bool
43 | |                   , generate_state_context:bool
44 | |                   , generate_state_stack:bool
...  |
47 | |                   , compiler_version:&str
48 | |                   , comments:Vec<Token>) -> CsVisitor {
   | |_____________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments

warning: length comparison to zero
  --> src/frame_c/visitors/cs_visitor.rs:82:12
   |
82 |         if self.errors.len() > 0 {
   |            ^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!self.errors.is_empty()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: unneeded `return` statement
   --> src/frame_c/visitors/cs_visitor.rs:133:9
    |
133 |         return var_type;
    |         ^^^^^^^^^^^^^^^^ help: remove `return`: `var_type`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/cs_visitor.rs:153:21
    |
153 |                     code.push_str("(");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push('(')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/cs_visitor.rs:159:21
    |
159 |                     code.push_str(")");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push(')')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/cs_visitor.rs:170:21
    |
170 |                     code.push_str("(");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push('(')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/cs_visitor.rs:176:21
    |
176 |                     code.push_str(")");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push(')')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/cs_visitor.rs:187:21
    |
187 |                     code.push_str("(");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push('(')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/cs_visitor.rs:193:21
    |
193 |                     code.push_str(")");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push(')')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:198:32
    |
198 |                 code.push_str(&format!("{}",variable_node.id_node.name.lexeme));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `variable_node.id_node.name.lexeme.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:202:32
    |
202 |                 code.push_str(&format!("{}",variable_node.id_node.name.lexeme));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `variable_node.id_node.name.lexeme.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.
   --> src/frame_c/visitors/cs_visitor.rs:212:47
    |
212 |     fn format_parameter_list(&mut self,params:&Vec<ParameterNode>) {
    |                                               ^^^^^^^^^^^^^^^^^^^ help: change this to: `&[ParameterNode]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:215:28
    |
215 |             self.add_code(&format!("{}", separator));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.
   --> src/frame_c/visitors/cs_visitor.rs:227:56
    |
227 |     fn format_actions_parameter_list(&mut self, params:&Vec<ParameterNode>,subclass_actions:&mut String) {
    |                                                        ^^^^^^^^^^^^^^^^^^^ help: change this to: `&[ParameterNode]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:230:28
    |
230 |             self.add_code(&format!("{}", separator));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:231:40
    |
231 |             subclass_actions.push_str(&format!("{}", separator));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: writing `&String` instead of `&str` involves a new object where a slice will do.
   --> src/frame_c/visitors/cs_visitor.rs:259:49
    |
259 |     fn format_action_name(&mut self,action_name:&String) -> String {
    |                                                 ^^^^^^^ help: change this to: `&str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:272:30
    |
272 |         self.code.push_str(&*format!("{}",s));
    |                              ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `s.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: unneeded `return` statement
   --> src/frame_c/visitors/cs_visitor.rs:290:9
    |
290 |         return (0..self.dent).map(|_| "    ").collect::<String>()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(0..self.dent).map(|_| "    ").collect::<String>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.
   --> src/frame_c/visitors/cs_visitor.rs:307:52
    |
307 |     fn visit_decl_stmts(&mut self, decl_stmt_types:&Vec<DeclOrStmtType>) {
    |                                                    ^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[DeclOrStmtType]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: redundant pattern matching, consider using `is_some()`
   --> src/frame_c/visitors/cs_visitor.rs:361:16
    |
361 |         if let Some(_) = system_node.get_first_state() {
    |         -------^^^^^^^-------------------------------- help: try this: `if system_node.get_first_state().is_some()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:363:28
    |
363 |             self.add_code(&format!("private delegate void FrameState(FrameEvent e);"));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"private delegate void FrameState(FrameEvent e);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:365:28
    |
365 |             self.add_code(&format!("private FrameState _state_;"));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"private FrameState _state_;".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:368:32
    |
368 |                 self.add_code(&format!("private StateContext _stateContext_;"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"private StateContext _stateContext_;".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:375:40
    |
375 | ...ode(&format!("private void _transition_(FrameState newState,Dictionary<String,object> exitArgs, StateContext stateContext) {{"));
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"private void _transition_(FrameState newState,Dictionary<String,object> exitArgs, StateContext stateContext) {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:377:40
    |
377 |                         self.add_code(&format!("private void _transition_(FrameState newState, StateContext stateContext) {{"));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"private void _transition_(FrameState newState, StateContext stateContext) {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:381:40
    |
381 |                         self.add_code(&format!("private void _transition_(FrameState newState,Dictionary<String,object> exitArgs) {{"));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"private void _transition_(FrameState newState,Dictionary<String,object> exitArgs) {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:383:40
    |
383 |                         self.add_code(&format!("private void _transition_(FrameState newState) {{"));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"private void _transition_(FrameState newState) {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:389:36
    |
389 |                     self.add_code(&format!("FrameEvent exitEvent = new FrameEvent(\"<\",exitArgs);"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"FrameEvent exitEvent = new FrameEvent(\"<\",exitArgs);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:391:36
    |
391 |                     self.add_code(&format!("FrameEvent exitEvent = new FrameEvent(\"<\",null);"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"FrameEvent exitEvent = new FrameEvent(\"<\",null);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:394:32
    |
394 |                 self.add_code(&format!("_state_(exitEvent);"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_state_(exitEvent);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:396:32
    |
396 |                 self.add_code(&format!("_state_ = newState;"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_state_ = newState;".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:399:36
    |
399 |                     self.add_code(&format!("_stateContext_ = stateContext;"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_stateContext_ = stateContext;".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:401:36
    |
401 |                     self.add_code(&format!("FrameEvent enterEvent = new FrameEvent(\">\",_stateContext_.getEnterArgs());"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"FrameEvent enterEvent = new FrameEvent(\">\",_stateContext_.getEnterArgs());".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:404:36
    |
404 |                     self.add_code(&format!("FrameEvent enterEvent = new FrameEvent(\">\",null);"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"FrameEvent enterEvent = new FrameEvent(\">\",null);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:407:32
    |
407 |                 self.add_code(&format!("_state_(enterEvent);"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_state_(enterEvent);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:410:32
    |
410 |                 self.add_code(&format!("}}"));
    |                                ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:416:36
    |
416 |                     self.add_code(&format!("private Stack<StateContext> _stateStack_ = new Stack<StateContext>();"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"private Stack<StateContext> _stateStack_ = new Stack<StateContext>();".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:419:36
    |
419 |                     self.add_code(&format!("private void _stateStack_push_(StateContext stateContext) {{"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"private void _stateStack_push_(StateContext stateContext) {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:422:36
    |
422 |                     self.add_code(&format!("_stateStack_.Push(stateContext);"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_stateStack_.Push(stateContext);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:425:36
    |
425 |                     self.add_code(&format!("}}"));
    |                                    ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:428:36
    |
428 |                     self.add_code(&format!("private StateContext _stateStack_pop_() {{"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"private StateContext _stateStack_pop_() {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:431:36
    |
431 |                     self.add_code(&format!("return _stateStack_.Pop();"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"return _stateStack_.Pop();".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:433:36
    |
433 |                     self.add_code(&format!("private Stack<FrameState> _stateStack_ = new Stack<FrameState>();"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"private Stack<FrameState> _stateStack_ = new Stack<FrameState>();".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:436:36
    |
436 |                     self.add_code(&format!("private void _stateStack_push_(FrameState state) {{"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"private void _stateStack_push_(FrameState state) {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:439:36
    |
439 |                     self.add_code(&format!("_stateStack_.Push(state);"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_stateStack_.Push(state);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:442:36
    |
442 |                     self.add_code(&format!("}}"));
    |                                    ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:445:36
    |
445 |                     self.add_code(&format!("private FrameState _stateStack_pop_() {{"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"private FrameState _stateStack_pop_() {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:448:36
    |
448 |                     self.add_code(&format!("return _stateStack_.Pop();"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"return _stateStack_.Pop();".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:453:32
    |
453 |                 self.add_code(&format!("}}"));
    |                                ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:458:32
    |
458 |                 self.add_code(&format!("private void _changeState_(FrameState newState) {{"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"private void _changeState_(FrameState newState) {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:461:32
    |
461 |                 self.add_code(&format!("_state_ = newState;"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_state_ = newState;".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:464:32
    |
464 |                 self.add_code(&format!("}}"));
    |                                ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:470:42
    |
470 |                     self.code.push_str(&*format!("{}",line));
    |                                          ^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `line.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:475:42
    |
475 |                     self.code.push_str(&*format!("{}",line));
    |                                          ^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `line.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:486:34
    |
486 |             self.code.push_str(&*format!("{}",line));
    |                                  ^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `line.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:507:38
    |
507 |                 self.code.push_str(&*format!("*/"));
    |                                      ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"*/".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:541:9
    |
541 |         format!("{}",self.format_target_state_name(target_state_name))
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `self.format_target_state_name(target_state_name).to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: length comparison to zero
   --> src/frame_c/visitors/cs_visitor.rs:575:16
    |
575 |             if exit_args.exprs_t.len() > 0 {
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!exit_args.exprs_t.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/cs_visitor.rs:585:17
    |
585 |                 msg.push_str(":");
    |                 ^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `msg.push(':')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:612:50
    |
612 |                         None => self.errors.push(format!("Fatal error: misaligned parameters to arguments.")),
    |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Fatal error: misaligned parameters to arguments.".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/cs_visitor.rs:636:13
    |
636 |             msg.push_str(":");
    |             ^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `msg.push(':')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:643:46
    |
643 | ...                   self.errors.push(format!("Fatal error: misaligned parameters to arguments."));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Fatal error: misaligned parameters to arguments.".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:701:34
    |
701 |                 self.errors.push(format!("TODO"));
    |                                  ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
   --> src/frame_c/visitors/cs_visitor.rs:709:9
    |
709 | /         match target_state_rcref_opt {
710 | |             Some(q) => {
711 | | //                target_state_vars = "stateVars".to_string();
712 | |                 if let Some(state_symbol_rcref) = self.arcanium.get_state(&q.borrow().name) {
...   |
732 | |             },
733 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
    |
709 |         if let Some(q) = target_state_rcref_opt {
710 |         //                target_state_vars = "stateVars".to_string();
711 |                         if let Some(state_symbol_rcref) = self.arcanium.get_state(&q.borrow().name) {
712 |                             let state_symbol = state_symbol_rcref.borrow();
713 |                             let state_node = &state_symbol.state_node.as_ref().unwrap().borrow();
714 |                             // generate local state variables
  ...

warning: length comparison to zero
   --> src/frame_c/visitors/cs_visitor.rs:779:16
    |
779 |             if exit_args.exprs_t.len() > 0 {
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!exit_args.exprs_t.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/cs_visitor.rs:788:17
    |
788 |                 msg.push_str(":");
    |                 ^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `msg.push(':')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:795:50
    |
795 | ...                   self.errors.push(format!("Fatal error: misaligned parameters to arguments."));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Fatal error: misaligned parameters to arguments.".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:817:46
    |
817 | ...                   self.errors.push(format!("Fatal error: misaligned parameters to arguments.")),
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Fatal error: misaligned parameters to arguments.".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:820:38
    |
820 |                     self.errors.push(format!("TODO"));
    |                                      ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:826:28
    |
826 |             self.add_code(&format!("StateContext stateContext = _stateStack_pop_();"));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"StateContext stateContext = _stateStack_pop_();".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:828:28
    |
828 |             self.add_code(&format!("FrameState state = _stateStack_pop_();"));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"FrameState state = _stateStack_pop_();".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:833:32
    |
833 |                 self.add_code(&format!("_transition_(stateContext.state,exitArgs,stateContext);"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_transition_(stateContext.state,exitArgs,stateContext);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:835:32
    |
835 |                 self.add_code(&format!("_transition_(state,exitArgs);"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_transition_(state,exitArgs);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:839:32
    |
839 |                 self.add_code(&format!("_transition_(stateContext.state,stateContext);"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_transition_(stateContext.state,stateContext);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:841:32
    |
841 |                 self.add_code(&format!("_transition_(state);"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_transition_(state);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
   --> src/frame_c/visitors/cs_visitor.rs:866:9
    |
866 | /         match (&system_node).get_first_state() {
867 | |             Some(x) => {
868 | |                 self.first_state_name = x.borrow().name.clone();
869 | |                 self.has_states = true;
870 | |             },
871 | |             None => {},
872 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
    |
866 |         if let Some(x) = (&system_node).get_first_state() {
867 |             self.first_state_name = x.borrow().name.clone();
868 |             self.has_states = true;
869 |         }
    |

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:906:28
    |
906 |             self.add_code(&format!("}}"));
    |                            ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:941:33
    |
941 |         self.subclass_code.push(format!("}}"));
    |                                 ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/cs_visitor.rs:990:24
    |
990 |         self.add_code(&format!("{}",interface_method_call_expr_node.identifier.name.lexeme));
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `interface_method_call_expr_node.identifier.name.lexeme.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1001:26
     |
1001 |         output.push_str(&format!("{}",interface_method_call_expr_node.identifier.name.lexeme));
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `interface_method_call_expr_node.identifier.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: using `clone` on a `Copy` type
    --> src/frame_c/visitors/cs_visitor.rs:1048:17
     |
1048 |             =>  self.format_parameter_list(params).clone(),
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.format_parameter_list(params)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

warning: passing a unit value to a function
    --> src/frame_c/visitors/cs_visitor.rs:1048:17
     |
1048 |             =>  self.format_parameter_list(params).clone(),
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unit_arg
help: move the expression in front of the call and replace it with the unit literal `()`
     |
1048 |             =>  {
1049 |                 self.format_parameter_list(params);
1050 |                 ().clone()
1051 |             },
     |

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1076:24
     |
1076 |         self.add_code(&format!("_state_(e);"));
     |                        ^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_state_(e);".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1088:24
     |
1088 |         self.add_code(&format!("}}"));
     |                        ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: length comparison to zero
    --> src/frame_c/visitors/cs_visitor.rs:1203:12
     |
1203 |         if state_node.evt_handlers_rcref.len() > 0 {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!state_node.evt_handlers_rcref.is_empty()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1240:32
     |
1240 |                 self.add_code(&format!("if (true) {{"));
     |                                ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"if (true) {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1243:32
     |
1243 |                 self.add_code(&format!("else {{"));
     |                                ^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"else {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1251:28
     |
1251 |             self.add_code(&format!("StateContext stateContext = null;"));
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"StateContext stateContext = null;".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
    --> src/frame_c/visitors/cs_visitor.rs:1254:9
     |
1254 | /         match &evt_handler_node.msg_t {
1255 | |             MessageType::CustomMessage {..} => {
1256 | |                 // Note: this is a bit convoluted as we cant use self.add_code() inside the
1257 | |                 // if statements as it is a double borrow (sigh).
...    |
1267 | |             _ => {}
1268 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1254 |         if let MessageType::CustomMessage {..} = &evt_handler_node.msg_t {
1255 |             // Note: this is a bit convoluted as we cant use self.add_code() inside the
1256 |             // if statements as it is a double borrow (sigh).
1257 | 
1258 |             let params_code: Vec<String> = Vec::new();
1259 | 
   ...

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1278:24
     |
1278 |         self.add_code(&format!("}}"));
     |                        ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1295:40
     |
1295 |                         self.add_code(&format!("e._return = "));
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1319:24
     |
1319 |         self.add_code(&format!(";"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `";".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1332:32
     |
1332 |                 self.add_code(&format!("."));
     |                                ^^^^^^^^^^^^ help: consider using `.to_string()`: `".".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1336:24
     |
1336 |         self.add_code(&format!("{}", method_call.identifier.name.lexeme));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `method_call.identifier.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1354:34
     |
1354 |                 output.push_str(&format!("."));
     |                                  ^^^^^^^^^^^^ help: consider using `.to_string()`: `".".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1358:26
     |
1358 |         output.push_str(&format!("{}", method_call.identifier.name.lexeme));
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `method_call.identifier.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1372:24
     |
1372 |         self.add_code(&format!("("));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1376:28
     |
1376 |             self.add_code(&format!("{}",separator));
     |                            ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1381:24
     |
1381 |         self.add_code(&format!(")"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1391:26
     |
1391 |         output.push_str(&format!("("));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1395:30
     |
1395 |             output.push_str(&format!("{}",separator));
     |                              ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1400:26
     |
1400 |         output.push_str(&format!(")"));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1410:24
     |
1410 |         self.add_code(&format!("{}", action_name));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `action_name.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1421:26
     |
1421 |         output.push_str(&format!("{}",action_name));
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `action_name.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1432:24
     |
1432 |         self.add_code(&format!(";"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `";".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1455:24
     |
1455 |         self.add_code(&format!("{}", state_ref.name));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `state_ref.name.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1468:37
     |
1468 |                 => self.errors.push(format!("Fatal error - change state stack pop not implemented."),)
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Fatal error - change state stack pop not implemented.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1531:32
     |
1531 |                 self.add_code(&format!(")"));
     |                                ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1533:28
     |
1533 |             self.add_code(&format!(") {{"));
     |                            ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `") {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1539:28
     |
1539 |             self.add_code(&format!("}}"));
     |                            ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1558:24
     |
1558 |         self.add_code(&format!(";"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `";".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1570:28
     |
1570 |             self.add_code(&format!("{}",separator));
     |                            ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1602:30
     |
1602 |             output.push_str(&format!("{}",separator));
     |                              ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1639:48
     |
1639 | ...                   self.add_code(&format!("e._return = "));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1663:24
     |
1663 |         self.add_code(&format!(" else {{"));
     |                        ^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" else {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1676:48
     |
1676 | ...                   self.add_code(&format!("e._return = ",));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1695:24
     |
1695 |         self.add_code(&format!("}}"));
     |                        ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1723:42
     |
1723 |                         self.errors.push(format!("Error - expression list is not testable."));
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Error - expression list is not testable.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1730:39
     |
1730 |                 _ => self.errors.push(format!("TODO")),
     |                                       ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1744:36
     |
1744 |                     self.add_code(&format!(" || ("));
     |                                    ^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" || (".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1754:47
     |
1754 |                         _ => self.errors.push(format!("TODO")),
     |                                               ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1759:28
     |
1759 |             self.add_code(&format!(" {{"));
     |                            ^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1765:28
     |
1765 |             self.add_code(&format!("}}"));
     |                            ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1791:48
     |
1791 | ...                   self.add_code(&format!("e._return = "));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1816:24
     |
1816 |         self.add_code(&format!(" else {{"));
     |                        ^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" else {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1829:48
     |
1829 | ...                   self.add_code(&format!("e._return = "));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1849:24
     |
1849 |         self.add_code(&format!("}}"));
     |                        ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1859:26
     |
1859 |         self.errors.push(format!("Not implemented."));
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Not implemented.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1885:42
     |
1885 |                         self.errors.push(format!("Error - expression list is not testable."));
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Error - expression list is not testable.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1890:39
     |
1890 |                 _ => self.errors.push(format!("TODO.")),
     |                                       ^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1899:36
     |
1899 |                     self.add_code(&format!(" || ("));
     |                                    ^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" || (".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1909:47
     |
1909 |                         _ => self.errors.push(format!("TODO.")),
     |                                               ^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1915:28
     |
1915 |             self.add_code(&format!(") {{"));
     |                            ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `") {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1921:28
     |
1921 |             self.add_code(&format!("}}"));
     |                            ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1949:48
     |
1949 | ...                   self.add_code(&format!("e._return = "));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1974:24
     |
1974 |         self.add_code(&format!(" else {{"));
     |                        ^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" else {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:1987:48
     |
1987 | ...                   self.add_code(&format!("e._return = "));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:2007:24
     |
2007 |         self.add_code(&format!("}}"));
     |                        ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:2015:24
     |
2015 |         self.add_code(&format!("{}", match_pattern_node.match_pattern_number));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `match_pattern_node.match_pattern_number.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:2025:24
     |
2025 |         self.add_code(&format!("("));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:2028:28
     |
2028 |             self.add_code(&format!("{}",separator));
     |                            ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:2032:24
     |
2032 |         self.add_code(&format!(")"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:2044:26
     |
2044 |         output.push_str(&format!("("));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:2047:30
     |
2047 |             output.push_str(&format!("{}",separator));
     |                              ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:2051:26
     |
2051 |         output.push_str(&format!(")"));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:2062:35
     |
2062 |                 => self.add_code(&format!("{}", literal_expression_node.value)),
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `literal_expression_node.value.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:2064:35
     |
2064 |                 => self.add_code(&format!("{}", literal_expression_node.value)),
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `literal_expression_node.value.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:2075:35
     |
2075 |             _ => self.errors.push(format!("TODO: visit_literal_expression_node")),
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO: visit_literal_expression_node".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:2088:34
     |
2088 |                 output.push_str(&format!("{}", literal_expression_node.value))
     |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `literal_expression_node.value.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:2105:35
     |
2105 |             _ => self.errors.push(format!("TODO: visit_literal_expression_node_to_string")),
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO: visit_literal_expression_node_to_string".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:2115:24
     |
2115 |         self.add_code(&format!("{}",identifier_node.name.lexeme));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `identifier_node.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:2124:26
     |
2124 |         output.push_str(&format!("{}",identifier_node.name.lexeme));
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `identifier_node.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:2155:36
     |
2155 |                     self.add_code(&format!("_stateStack_push_(_state_context_);"));
     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_stateStack_push_(_state_context_);".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:2157:36
     |
2157 |                     self.add_code(&format!("_stateStack_push_(_state_);"));
     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_stateStack_push_(_state_);".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:2162:35
     |
2162 |                    self.add_code(&format!("StateContext stateContext = _stateStack_pop_()"));
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"StateContext stateContext = _stateStack_pop_()".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:2164:35
     |
2164 |                    self.add_code(&format!("FrameState state = _stateStack_pop_()"));
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"FrameState state = _stateStack_pop_()".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:2186:84
     |
2186 |             FrameEventPart::Event{ is_reference: _is_reference } => self.add_code(&format!("e")),
     |                                                                                    ^^^^^^^^^^^^ help: consider using `.to_string()`: `"e".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:2187:86
     |
2187 |             FrameEventPart::Message{ is_reference: _is_reference } => self.add_code(&format!("e._message")),
     |                                                                                      ^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._message".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:2189:85
     |
2189 |             FrameEventPart::Return{ is_reference: _is_reference } => self.add_code(&format!("e._return")),
     |                                                                                     ^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/cs_visitor.rs:2202:69
     |
2202 |             FrameEventPart::Event{ is_reference: _is_reference } => output.push_str("e"),
     |                                                                     ^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `output.push('e')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: using `clone` on a `Copy` type
    --> src/frame_c/visitors/cs_visitor.rs:2231:21
     |
2231 |                 =>  self.format_actions_parameter_list(params,&mut subclass_code).clone(),
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.format_actions_parameter_list(params,&mut subclass_code)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

warning: passing a unit value to a function
    --> src/frame_c/visitors/cs_visitor.rs:2231:21
     |
2231 |                 =>  self.format_actions_parameter_list(params,&mut subclass_code).clone(),
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unit_arg
help: move the expression in front of the call and replace it with the unit literal `()`
     |
2231 |                 =>  {
2232 |                     self.format_actions_parameter_list(params,&mut subclass_code);
2233 |                     ().clone()
2234 |                 },
     |

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:2234:33
     |
2234 |         subclass_code.push_str(&format!(") {{}}"));
     |                                 ^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `") {}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/cs_visitor.rs:2237:24
     |
2237 |         self.add_code(&format!(") {{ throw new NotImplementedException(); }}"));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `") { throw new NotImplementedException(); }".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/cs_visitor.rs:2332:9
     |
2332 |         output.push_str(";");
     |         ^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `output.push(';')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/cs_visitor.rs:2454:38
     |
2454 |             OperatorType::Negated => output.push_str("-"),
     |                                      ^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `output.push('-')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/cs_visitor.rs:2461:34
     |
2461 |             OperatorType::Not => output.push_str("!"),
     |                                  ^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `output.push('!')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: this function has too many arguments (8/7)
  --> src/frame_c/visitors/python_visitor.rs:41:5
   |
41 | /     pub fn new(   arcanium:Arcanum
42 | |                   , generate_exit_args:bool
43 | |                   , generate_state_context:bool
44 | |                   , generate_state_stack:bool
...  |
47 | |                   , compiler_version:&str
48 | |                   , comments:Vec<Token>) -> PythonVisitor {
   | |_________________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments

warning: length comparison to zero
  --> src/frame_c/visitors/python_visitor.rs:83:12
   |
83 |         if self.errors.len() > 0 {
   |            ^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!self.errors.is_empty()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/python_visitor.rs:106:21
    |
106 |                     code.push_str("(");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push('(')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/python_visitor.rs:111:21
    |
111 |                     code.push_str(")");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push(')')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/python_visitor.rs:116:21
    |
116 |                     code.push_str("(");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push('(')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/python_visitor.rs:121:21
    |
121 |                     code.push_str(")");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push(')')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:136:32
    |
136 |                 code.push_str(&format!("{}",variable_node.id_node.name.lexeme));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `variable_node.id_node.name.lexeme.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:140:32
    |
140 |                 code.push_str(&format!("{}",variable_node.id_node.name.lexeme));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `variable_node.id_node.name.lexeme.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.
   --> src/frame_c/visitors/python_visitor.rs:150:47
    |
150 |     fn format_parameter_list(&mut self,params:&Vec<ParameterNode>) {
    |                                               ^^^^^^^^^^^^^^^^^^^ help: change this to: `&[ParameterNode]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:153:28
    |
153 |             self.add_code(&format!("{}", separator));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:154:28
    |
154 |             self.add_code(&format!("{}", param.param_name));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `param.param_name.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.
   --> src/frame_c/visitors/python_visitor.rs:160:56
    |
160 |     fn format_actions_parameter_list(&mut self, params:&Vec<ParameterNode>,subclass_actions:&mut String) {
    |                                                        ^^^^^^^^^^^^^^^^^^^ help: change this to: `&[ParameterNode]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:163:28
    |
163 |             self.add_code(&format!("{}", separator));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:164:28
    |
164 |             self.add_code(&format!("{}", param.param_name));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `param.param_name.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:165:40
    |
165 |             subclass_actions.push_str(&format!("{}", separator));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:166:40
    |
166 |             subclass_actions.push_str(&format!("{}", param.param_name));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `param.param_name.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: writing `&String` instead of `&str` involves a new object where a slice will do.
   --> src/frame_c/visitors/python_visitor.rs:184:49
    |
184 |     fn format_action_name(&mut self,action_name:&String) -> String {
    |                                                 ^^^^^^^ help: change this to: `&str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:197:30
    |
197 |         self.code.push_str(&*format!("{}",s));
    |                              ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `s.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: unneeded `return` statement
   --> src/frame_c/visitors/python_visitor.rs:215:9
    |
215 |         return (0..self.dent).map(|_| "    ").collect::<String>()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(0..self.dent).map(|_| "    ").collect::<String>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.
   --> src/frame_c/visitors/python_visitor.rs:232:52
    |
232 |     fn visit_decl_stmts(&mut self, decl_stmt_types:&Vec<DeclOrStmtType>) {
    |                                                    ^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[DeclOrStmtType]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: redundant pattern matching, consider using `is_some()`
   --> src/frame_c/visitors/python_visitor.rs:286:16
    |
286 |         if let Some(_) = system_node.get_first_state() {
    |         -------^^^^^^^-------------------------------- help: try this: `if system_node.get_first_state().is_some()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:300:40
    |
300 |                         self.add_code(&format!("def _transition_(self, newState, exitArgs, stateContext):"));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"def _transition_(self, newState, exitArgs, stateContext):".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:302:40
    |
302 |                         self.add_code(&format!("def _transition_(self, newState, stateContext):"));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"def _transition_(self, newState, stateContext):".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:306:40
    |
306 |                         self.add_code(&format!("def _transition_(self, newState, exitArgs):"));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"def _transition_(self, newState, exitArgs):".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:308:40
    |
308 |                         self.add_code(&format!("def _transition_(self, newState):"));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"def _transition_(self, newState):".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:314:36
    |
314 |                     self.add_code(&format!("exitEvent = FrameEvent(\"<\",exitArgs)"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"exitEvent = FrameEvent(\"<\",exitArgs)".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:316:36
    |
316 |                     self.add_code(&format!("exitEvent = FrameEvent(\"<\",None)"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"exitEvent = FrameEvent(\"<\",None)".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:319:32
    |
319 |                 self.add_code(&format!("self._state_(exitEvent)"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"self._state_(exitEvent)".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:321:32
    |
321 |                 self.add_code(&format!("self._state_ = newState"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"self._state_ = newState".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:324:36
    |
324 |                     self.add_code(&format!("self._stateContext_ = stateContext"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"self._stateContext_ = stateContext".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:326:36
    |
326 |                     self.add_code(&format!("enterEvent = FrameEvent(\">\",self._stateContext_.getEnterArgs())"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"enterEvent = FrameEvent(\">\",self._stateContext_.getEnterArgs())".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:329:36
    |
329 |                     self.add_code(&format!("enterEvent = FrameEvent(\">\",None)"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"enterEvent = FrameEvent(\">\",None)".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:332:32
    |
332 |                 self.add_code(&format!("self._state_(enterEvent)"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"self._state_(enterEvent)".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:343:36
    |
343 |                     self.add_code(&format!("def _stateStack_push_(self, stateContext):"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"def _stateStack_push_(self, stateContext):".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:346:36
    |
346 |                     self.add_code(&format!("self._stateStack_.append(stateContext)"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"self._stateStack_.append(stateContext)".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:352:36
    |
352 |                     self.add_code(&format!("def _stateStack_pop_(self):"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"def _stateStack_pop_(self):".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:355:36
    |
355 |                     self.add_code(&format!("return self._stateStack_.pop()"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"return self._stateStack_.pop()".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:359:36
    |
359 |                     self.add_code(&format!("def _stateStack_push_(self, state):"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"def _stateStack_push_(self, state):".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:362:36
    |
362 |                     self.add_code(&format!("self._stateStack_.append(state)"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"self._stateStack_.append(state)".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:368:36
    |
368 |                     self.add_code(&format!("def _stateStack_pop_(self):"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"def _stateStack_pop_(self):".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:371:36
    |
371 |                     self.add_code(&format!("return self._stateStack_.pop()"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"return self._stateStack_.pop()".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:381:32
    |
381 |                 self.add_code(&format!("def _changeState_(newState):"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"def _changeState_(newState):".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:384:32
    |
384 |                 self.add_code(&format!("self._state_ = newState"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"self._state_ = newState".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:393:42
    |
393 |                     self.code.push_str(&*format!("{}",line));
    |                                          ^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `line.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:398:42
    |
398 |                     self.code.push_str(&*format!("{}",line));
    |                                          ^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `line.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:409:34
    |
409 |             self.code.push_str(&*format!("{}",line));
    |                                  ^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `line.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:430:38
    |
430 |                 self.code.push_str(&*format!("*/"));
    |                                      ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"*/".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:463:9
    |
463 |         format!("{}",self.format_target_state_name(target_state_name))
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `self.format_target_state_name(target_state_name).to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: length comparison to zero
   --> src/frame_c/visitors/python_visitor.rs:497:16
    |
497 |             if exit_args.exprs_t.len() > 0 {
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!exit_args.exprs_t.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/python_visitor.rs:507:17
    |
507 |                 msg.push_str(":");
    |                 ^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `msg.push(':')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:534:50
    |
534 |                         None => self.errors.push(format!("Fatal error: misaligned parameters to arguments.")),
    |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Fatal error: misaligned parameters to arguments.".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:537:38
    |
537 |                     self.errors.push(format!("Unknown error."));
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Unknown error.".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/python_visitor.rs:557:13
    |
557 |             msg.push_str(":");
    |             ^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `msg.push(':')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:564:46
    |
564 | ...                   self.errors.push(format!("Fatal error: misaligned parameters to arguments."));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Fatal error: misaligned parameters to arguments.".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:622:34
    |
622 |                 self.errors.push(format!("TODO"));
    |                                  ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
   --> src/frame_c/visitors/python_visitor.rs:630:9
    |
630 | /         match target_state_rcref_opt {
631 | |             Some(q) => {
632 | | //                target_state_vars = "stateVars".to_string();
633 | |                 if let Some(state_symbol_rcref) = self.arcanium.get_state(&q.borrow().name) {
...   |
652 | |             },
653 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
    |
630 |         if let Some(q) = target_state_rcref_opt {
631 |         //                target_state_vars = "stateVars".to_string();
632 |                         if let Some(state_symbol_rcref) = self.arcanium.get_state(&q.borrow().name) {
633 |                             let state_symbol = state_symbol_rcref.borrow();
634 |                             let state_node = &state_symbol.state_node.as_ref().unwrap().borrow();
635 |                             // generate local state variables
  ...

warning: length comparison to zero
   --> src/frame_c/visitors/python_visitor.rs:699:16
    |
699 |             if exit_args.exprs_t.len() > 0 {
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!exit_args.exprs_t.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/python_visitor.rs:708:17
    |
708 |                 msg.push_str(":");
    |                 ^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `msg.push(':')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:715:50
    |
715 | ...                   self.errors.push(format!("Fatal error: misaligned parameters to arguments."));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Fatal error: misaligned parameters to arguments.".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:737:46
    |
737 | ...                   self.errors.push(format!("Fatal error: misaligned parameters to arguments.")),
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Fatal error: misaligned parameters to arguments.".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:740:38
    |
740 |                     self.errors.push(format!("TODO"));
    |                                      ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:746:28
    |
746 |             self.add_code(&format!("stateContext = self._stateStack_pop_()"));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"stateContext = self._stateStack_pop_()".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:748:28
    |
748 |             self.add_code(&format!("state = self._stateStack_pop_()"));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"state = self._stateStack_pop_()".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:753:32
    |
753 |                 self.add_code(&format!("self._transition_(stateContext.state,exitArgs,stateContext)"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"self._transition_(stateContext.state,exitArgs,stateContext)".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:755:32
    |
755 |                 self.add_code(&format!("self._transition_(state,exitArgs)"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"self._transition_(state,exitArgs)".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:759:32
    |
759 |                 self.add_code(&format!("self._transition_(stateContext.state,stateContext)"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"self._transition_(stateContext.state,stateContext)".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:761:32
    |
761 |                 self.add_code(&format!("self._transition_(state)"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"self._transition_(state)".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
   --> src/frame_c/visitors/python_visitor.rs:786:9
    |
786 | /         match (&system_node).get_first_state() {
787 | |             Some(x) => {
788 | |                 self.first_state_name = x.borrow().name.clone();
789 | |                 self.has_states = true;
790 | |             },
791 | |             None => {},
792 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
    |
786 |         if let Some(x) = (&system_node).get_first_state() {
787 |             self.first_state_name = x.borrow().name.clone();
788 |             self.has_states = true;
789 |         }
    |

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:798:28
    |
798 |             self.add_code(&format!("def __init__(self):"));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"def __init__(self):".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:826:32
    |
826 |                 self.add_code(&format!("self._stateStack_ = []"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"self._stateStack_ = []".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: using `clone` on a `Copy` type
   --> src/frame_c/visitors/python_visitor.rs:967:21
    |
967 |                     self.format_parameter_list(params).clone()
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.format_parameter_list(params)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

warning: passing a unit value to a function
   --> src/frame_c/visitors/python_visitor.rs:967:21
    |
967 |                     self.format_parameter_list(params).clone()
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unit_arg
help: move the expression in front of the call and replace it with the unit literal `()`
    |
967 |                     self.format_parameter_list(params);
968 |                     ().clone()
    |

warning: useless use of `format!`
   --> src/frame_c/visitors/python_visitor.rs:996:24
    |
996 |         self.add_code(&format!("self._state_(e)"));
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"self._state_(e)".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1001:32
     |
1001 |                 self.add_code(&format!("return e._return"));
     |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"return e._return".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: length comparison to zero
    --> src/frame_c/visitors/python_visitor.rs:1122:12
     |
1122 |         if state_node.evt_handlers_rcref.len() > 0 {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!state_node.evt_handlers_rcref.is_empty()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1167:32
     |
1167 |                 self.add_code(&format!("if true:"));
     |                                ^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"if true:".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1170:32
     |
1170 |                 self.add_code(&format!("else:"));
     |                                ^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"else:".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
    --> src/frame_c/visitors/python_visitor.rs:1177:9
     |
1177 | /         match &evt_handler_node.msg_t {
1178 | |             MessageType::CustomMessage {..} => {
1179 | |                 // Note: this is a bit convoluted as we cant use self.add_code() inside the
1180 | |                 // if statements as it is a double borrow (sigh).
...    |
1191 | |
1192 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1177 |         if let MessageType::CustomMessage {..} = &evt_handler_node.msg_t {
1178 |             // Note: this is a bit convoluted as we cant use self.add_code() inside the
1179 |             // if statements as it is a double borrow (sigh).
1180 | 
1181 |             let params_code: Vec<String> = Vec::new();
1182 | 
   ...

warning: length comparison to zero
    --> src/frame_c/visitors/python_visitor.rs:1198:39
     |
1198 |         self.event_handler_has_code = evt_handler_node.statements.len() > 0usize;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!evt_handler_node.statements.is_empty()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1219:40
     |
1219 |                         self.add_code(&format!("e._return = "));
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1254:32
     |
1254 |                 self.add_code(&format!("."));
     |                                ^^^^^^^^^^^^ help: consider using `.to_string()`: `".".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1258:24
     |
1258 |         self.add_code(&format!("{}", method_call.identifier.name.lexeme));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `method_call.identifier.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1276:34
     |
1276 |                 output.push_str(&format!("."));
     |                                  ^^^^^^^^^^^^ help: consider using `.to_string()`: `".".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1280:26
     |
1280 |         output.push_str(&format!("{}", method_call.identifier.name.lexeme));
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `method_call.identifier.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1294:24
     |
1294 |         self.add_code(&format!("("));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1298:28
     |
1298 |             self.add_code(&format!("{}",separator));
     |                            ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1303:24
     |
1303 |         self.add_code(&format!(")"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1313:26
     |
1313 |         output.push_str(&format!("("));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1317:30
     |
1317 |             output.push_str(&format!("{}",separator));
     |                              ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1322:26
     |
1322 |         output.push_str(&format!(")"));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1344:26
     |
1344 |         output.push_str(&format!("{}",action_name));
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `action_name.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1378:24
     |
1378 |         self.add_code(&format!("{}", state_ref.name));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `state_ref.name.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1391:37
     |
1391 |                 => self.errors.push(format!("Fatal error - change state stack pop not implemented."),)
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Fatal error - change state stack pop not implemented.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1454:32
     |
1454 |                 self.add_code(&format!(")"));
     |                                ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1456:28
     |
1456 |             self.add_code(&format!(":"));
     |                            ^^^^^^^^^^^^ help: consider using `.to_string()`: `":".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1492:28
     |
1492 |             self.add_code(&format!("{}",separator));
     |                            ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1524:30
     |
1524 |             output.push_str(&format!("{}",separator));
     |                              ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1561:48
     |
1561 | ...                   self.add_code(&format!("e._return = "));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1584:24
     |
1584 |         self.add_code(&format!("else:"));
     |                        ^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"else:".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1597:48
     |
1597 | ...                   self.add_code(&format!("e._return = ",));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1642:42
     |
1642 |                         self.errors.push(format!("Error - expression list is not testable."));
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Error - expression list is not testable.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1649:39
     |
1649 |                 _ => self.errors.push(format!("TODO")),
     |                                       ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1663:36
     |
1663 |                     self.add_code(&format!(" || ("));
     |                                    ^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" || (".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1673:47
     |
1673 |                         _ => self.errors.push(format!("TODO")),
     |                                               ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1678:28
     |
1678 |             self.add_code(&format!(":"));
     |                            ^^^^^^^^^^^^ help: consider using `.to_string()`: `":".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1709:48
     |
1709 | ...                   self.add_code(&format!("e._return = "));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1733:24
     |
1733 |         self.add_code(&format!(" else:"));
     |                        ^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" else:".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1746:48
     |
1746 | ...                   self.add_code(&format!("e._return = "));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1774:26
     |
1774 |         self.errors.push(format!("Not implemented."));
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Not implemented.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1800:42
     |
1800 |                         self.errors.push(format!("Error - expression list is not testable."));
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Error - expression list is not testable.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1805:39
     |
1805 |                 _ => self.errors.push(format!("TODO.")),
     |                                       ^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1814:36
     |
1814 |                     self.add_code(&format!(" || ("));
     |                                    ^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" || (".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1824:47
     |
1824 |                         _ => self.errors.push(format!("TODO.")),
     |                                               ^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1830:28
     |
1830 |             self.add_code(&format!(") {{"));
     |                            ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `") {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1863:48
     |
1863 | ...                   self.add_code(&format!("e._return = "));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1887:24
     |
1887 |         self.add_code(&format!("else {{"));
     |                        ^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"else {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1900:48
     |
1900 | ...                   self.add_code(&format!("e._return = "));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1927:24
     |
1927 |         self.add_code(&format!("{}", match_pattern_node.match_pattern_number));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `match_pattern_node.match_pattern_number.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1937:24
     |
1937 |         self.add_code(&format!("("));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1940:28
     |
1940 |             self.add_code(&format!("{}",separator));
     |                            ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1944:24
     |
1944 |         self.add_code(&format!(")"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1956:26
     |
1956 |         output.push_str(&format!("("));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1959:30
     |
1959 |             output.push_str(&format!("{}",separator));
     |                              ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1963:26
     |
1963 |         output.push_str(&format!(")"));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1974:35
     |
1974 |                 => self.add_code(&format!("{}", literal_expression_node.value)),
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `literal_expression_node.value.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1976:35
     |
1976 |                 => self.add_code(&format!("{}", literal_expression_node.value)),
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `literal_expression_node.value.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:1987:35
     |
1987 |             _ => self.errors.push(format!("TODO: visit_literal_expression_node")),
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO: visit_literal_expression_node".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:2000:34
     |
2000 |                 output.push_str(&format!("{}", literal_expression_node.value))
     |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `literal_expression_node.value.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:2017:35
     |
2017 |             _ => self.errors.push(format!("TODO: visit_literal_expression_node_to_string")),
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO: visit_literal_expression_node_to_string".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:2027:24
     |
2027 |         self.add_code(&format!("{}",identifier_node.name.lexeme));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `identifier_node.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:2036:26
     |
2036 |         output.push_str(&format!("{}",identifier_node.name.lexeme));
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `identifier_node.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:2067:36
     |
2067 |                     self.add_code(&format!("self._stateStack_push_(self._stateContext_)"));
     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"self._stateStack_push_(self._stateContext_)".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:2069:36
     |
2069 |                     self.add_code(&format!("self._stateStack_push_(self._state_)"));
     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"self._stateStack_push_(self._state_)".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:2074:36
     |
2074 |                     self.add_code(&format!("stateContext = self._stateStack_pop_()"));
     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"stateContext = self._stateStack_pop_()".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:2076:36
     |
2076 |                     self.add_code(&format!("state = _stateStack_pop_()"));
     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"state = _stateStack_pop_()".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:2098:85
     |
2098 |             FrameEventPart::Event { is_reference: _is_reference } => self.add_code(&format!("e")),
     |                                                                                     ^^^^^^^^^^^^ help: consider using `.to_string()`: `"e".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:2099:87
     |
2099 |             FrameEventPart::Message { is_reference: _is_reference } => self.add_code(&format!("e._message")),
     |                                                                                       ^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._message".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:2101:86
     |
2101 |             FrameEventPart::Return { is_reference: _is_reference } => self.add_code(&format!("e._return")),
     |                                                                                      ^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/python_visitor.rs:2114:70
     |
2114 |             FrameEventPart::Event { is_reference: _is_reference } => output.push_str("e"),
     |                                                                      ^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `output.push('e')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/python_visitor.rs:2140:17
     |
2140 |                 subclass_code.push_str(",");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `subclass_code.push(',')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:2146:24
     |
2146 |         self.add_code(&format!("):"));
     |                        ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"):".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:2147:33
     |
2147 |         subclass_code.push_str(&format!("):"));
     |                                 ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"):".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:2150:24
     |
2150 |         self.add_code(&format!("raise NotImplementedError"));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"raise NotImplementedError".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/python_visitor.rs:2152:33
     |
2152 |         subclass_code.push_str(&format!("#pass"));
     |                                 ^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"#pass".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/python_visitor.rs:2375:38
     |
2375 |             OperatorType::Negated => output.push_str("-"),
     |                                      ^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `output.push('-')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: this function has too many arguments (8/7)
  --> src/frame_c/visitors/gdscript_3_2_visitor.rs:41:5
   |
41 | /     pub fn new(   arcanium:Arcanum
42 | |                   , generate_exit_args:bool
43 | |                   , generate_state_context:bool
44 | |                   , generate_state_stack:bool
...  |
47 | |                   , compiler_version:&str
48 | |                   , comments:Vec<Token>) -> GdScript32Visitor {
   | |_____________________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments

warning: length comparison to zero
  --> src/frame_c/visitors/gdscript_3_2_visitor.rs:83:12
   |
83 |         if self.errors.len() > 0 {
   |            ^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!self.errors.is_empty()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:106:21
    |
106 |                     code.push_str("(");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push('(')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:111:21
    |
111 |                     code.push_str(")");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push(')')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:116:21
    |
116 |                     code.push_str("(");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push('(')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:121:21
    |
121 |                     code.push_str(")");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push(')')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:136:32
    |
136 |                 code.push_str(&format!("{}",variable_node.id_node.name.lexeme));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `variable_node.id_node.name.lexeme.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:140:32
    |
140 |                 code.push_str(&format!("{}",variable_node.id_node.name.lexeme));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `variable_node.id_node.name.lexeme.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:150:47
    |
150 |     fn format_parameter_list(&mut self,params:&Vec<ParameterNode>) {
    |                                               ^^^^^^^^^^^^^^^^^^^ help: change this to: `&[ParameterNode]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:153:28
    |
153 |             self.add_code(&format!("{}", separator));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:154:28
    |
154 |             self.add_code(&format!("{}", param.param_name));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `param.param_name.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: writing `&String` instead of `&str` involves a new object where a slice will do.
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:172:49
    |
172 |     fn format_action_name(&mut self,action_name:&String) -> String {
    |                                                 ^^^^^^^ help: change this to: `&str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:185:30
    |
185 |         self.code.push_str(&*format!("{}",s));
    |                              ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `s.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: unneeded `return` statement
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:203:9
    |
203 |         return (0..self.dent).map(|_| "    ").collect::<String>()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(0..self.dent).map(|_| "    ").collect::<String>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:220:52
    |
220 |     fn visit_decl_stmts(&mut self, decl_stmt_types:&Vec<DeclOrStmtType>) {
    |                                                    ^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[DeclOrStmtType]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: redundant pattern matching, consider using `is_some()`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:274:16
    |
274 |         if let Some(_) = system_node.get_first_state() {
    |         -------^^^^^^^-------------------------------- help: try this: `if system_node.get_first_state().is_some()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:278:31
    |
278 |                self.add_code(&format!("var _state_ = null"));
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"var _state_ = null".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:281:31
    |
281 |                self.add_code(&format!("var _stateContext_ = null"));
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"var _stateContext_ = null".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:288:40
    |
288 |                         self.add_code(&format!("func _transition_(newState, exitArgs, stateContext):"));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"func _transition_(newState, exitArgs, stateContext):".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:290:40
    |
290 |                         self.add_code(&format!("func _transition_(newState, stateContext):"));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"func _transition_(newState, stateContext):".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:294:40
    |
294 |                         self.add_code(&format!("func _transition_(newState, exitArgs):"));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"func _transition_(newState, exitArgs):".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:296:40
    |
296 |                         self.add_code(&format!("func _transition_(newState):"));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"func _transition_(newState):".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:302:36
    |
302 |                     self.add_code(&format!("var exitEvent = FrameEvent.new(\"<\",exitArgs)"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"var exitEvent = FrameEvent.new(\"<\",exitArgs)".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:304:36
    |
304 |                     self.add_code(&format!("var exitEvent = FrameEvent.new(\"<\",null)"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"var exitEvent = FrameEvent.new(\"<\",null)".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:307:32
    |
307 |                 self.add_code(&format!("self._state_.call_func(exitEvent)"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"self._state_.call_func(exitEvent)".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:309:32
    |
309 |                 self.add_code(&format!("self._state_ = newState"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"self._state_ = newState".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:312:36
    |
312 |                     self.add_code(&format!("self._stateContext_ = stateContext"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"self._stateContext_ = stateContext".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:314:36
    |
314 |                     self.add_code(&format!("var enterEvent = FrameEvent.new(\">\",self._stateContext_.getEnterArgs())"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"var enterEvent = FrameEvent.new(\">\",self._stateContext_.getEnterArgs())".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:317:36
    |
317 |                     self.add_code(&format!("var enterEvent = FrameEvent.new(\">\",null)"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"var enterEvent = FrameEvent.new(\">\",null)".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:320:32
    |
320 |                 self.add_code(&format!("self._state_.call_func(enterEvent)"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"self._state_.call_func(enterEvent)".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:329:36
    |
329 |                     self.add_code(&format!("var _stateStack_ = null"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"var _stateStack_ = null".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:332:36
    |
332 |                     self.add_code(&format!("func _stateStack_push_(stateContext):"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"func _stateStack_push_(stateContext):".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:335:36
    |
335 |                     self.add_code(&format!("self._stateStack_.append(stateContext)"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"self._stateStack_.append(stateContext)".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:341:36
    |
341 |                     self.add_code(&format!("func _stateStack_pop_():"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"func _stateStack_pop_():".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:344:36
    |
344 |                     self.add_code(&format!("return self._stateStack_.back()"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"return self._stateStack_.back()".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:348:36
    |
348 |                     self.add_code(&format!("func _stateStack_push_(state):"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"func _stateStack_push_(state):".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:351:36
    |
351 |                     self.add_code(&format!("self._stateStack_.append(state)"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"self._stateStack_.append(state)".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:357:36
    |
357 |                     self.add_code(&format!("func _stateStack_pop_():"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"func _stateStack_pop_():".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:360:36
    |
360 |                     self.add_code(&format!("return self._stateStack_.pop()"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"return self._stateStack_.pop()".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:370:32
    |
370 |                 self.add_code(&format!("func _changeState_(newState):"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"func _changeState_(newState):".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:373:32
    |
373 |                 self.add_code(&format!("self._state_ = newState"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"self._state_ = newState".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:382:42
    |
382 |                     self.code.push_str(&*format!("{}",line));
    |                                          ^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `line.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:387:42
    |
387 |                     self.code.push_str(&*format!("{}",line));
    |                                          ^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `line.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:419:38
    |
419 |                 self.code.push_str(&*format!("*/"));
    |                                      ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"*/".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:452:9
    |
452 |         format!("{}",self.format_target_state_name(target_state_name))
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `self.format_target_state_name(target_state_name).to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: length comparison to zero
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:486:16
    |
486 |             if exit_args.exprs_t.len() > 0 {
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!exit_args.exprs_t.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:496:17
    |
496 |                 msg.push_str(":");
    |                 ^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `msg.push(':')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:523:50
    |
523 |                         None => self.errors.push(format!("Fatal error: misaligned parameters to arguments.")),
    |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Fatal error: misaligned parameters to arguments.".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:526:38
    |
526 |                     self.errors.push(format!("Unknown error."));
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Unknown error.".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:546:13
    |
546 |             msg.push_str(":");
    |             ^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `msg.push(':')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:553:46
    |
553 | ...                   self.errors.push(format!("Fatal error: misaligned parameters to arguments."));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Fatal error: misaligned parameters to arguments.".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:611:34
    |
611 |                 self.errors.push(format!("TODO"));
    |                                  ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:619:9
    |
619 | /         match target_state_rcref_opt {
620 | |             Some(q) => {
621 | | //                target_state_vars = "stateVars".to_string();
622 | |                 if let Some(state_symbol_rcref) = self.arcanium.get_state(&q.borrow().name) {
...   |
641 | |             },
642 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
    |
619 |         if let Some(q) = target_state_rcref_opt {
620 |         //                target_state_vars = "stateVars".to_string();
621 |                         if let Some(state_symbol_rcref) = self.arcanium.get_state(&q.borrow().name) {
622 |                             let state_symbol = state_symbol_rcref.borrow();
623 |                             let state_node = &state_symbol.state_node.as_ref().unwrap().borrow();
624 |                             // generate local state variables
  ...

warning: length comparison to zero
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:688:16
    |
688 |             if exit_args.exprs_t.len() > 0 {
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!exit_args.exprs_t.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:697:17
    |
697 |                 msg.push_str(":");
    |                 ^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `msg.push(':')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:704:50
    |
704 | ...                   self.errors.push(format!("Fatal error: misaligned parameters to arguments."));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Fatal error: misaligned parameters to arguments.".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:726:46
    |
726 | ...                   self.errors.push(format!("Fatal error: misaligned parameters to arguments.")),
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Fatal error: misaligned parameters to arguments.".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:729:38
    |
729 |                     self.errors.push(format!("TODO"));
    |                                      ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:735:28
    |
735 |             self.add_code(&format!("var stateContext = self._stateStack_pop_()"));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"var stateContext = self._stateStack_pop_()".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:737:28
    |
737 |             self.add_code(&format!("var state = self._stateStack_pop_()"));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"var state = self._stateStack_pop_()".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:742:32
    |
742 |                 self.add_code(&format!("self._transition_(stateContext.state,exitArgs,stateContext)"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"self._transition_(stateContext.state,exitArgs,stateContext)".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:744:32
    |
744 |                 self.add_code(&format!("self._transition_(state,exitArgs)"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"self._transition_(state,exitArgs)".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:748:32
    |
748 |                 self.add_code(&format!("self._transition_(stateContext.state,stateContext)"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"self._transition_(stateContext.state,stateContext)".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:750:32
    |
750 |                 self.add_code(&format!("self._transition_(state)"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"self._transition_(state)".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:775:9
    |
775 | /         match (&system_node).get_first_state() {
776 | |             Some(x) => {
777 | |                 self.first_state_name = x.borrow().name.clone();
778 | |                 self.has_states = true;
779 | |             },
780 | |             None => {},
781 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
    |
775 |         if let Some(x) = (&system_node).get_first_state() {
776 |             self.first_state_name = x.borrow().name.clone();
777 |             self.has_states = true;
778 |         }
    |

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:787:28
    |
787 |             self.add_code(&format!("func _init():"));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"func _init():".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:794:32
    |
794 |                 self.add_code(&format!("self._stateContext_ = StateContext.new(self._state_)"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"self._stateContext_ = StateContext.new(self._state_)".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:816:32
    |
816 |                 self.add_code(&format!("self._stateStack_ = []"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"self._stateStack_ = []".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: using `clone` on a `Copy` type
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:959:17
    |
959 |                 self.format_parameter_list(params).clone()
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.format_parameter_list(params)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

warning: passing a unit value to a function
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:959:17
    |
959 |                 self.format_parameter_list(params).clone()
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unit_arg
help: move the expression in front of the call and replace it with the unit literal `()`
    |
959 |                 self.format_parameter_list(params);
960 |                 ().clone()
    |

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:988:24
    |
988 |         self.add_code(&format!("self._state_.call_func(e)"));
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"self._state_.call_func(e)".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/gdscript_3_2_visitor.rs:993:32
    |
993 |                 self.add_code(&format!("return e._return"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"return e._return".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: length comparison to zero
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1115:12
     |
1115 |         if state_node.evt_handlers_rcref.len() > 0 {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!state_node.evt_handlers_rcref.is_empty()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1159:32
     |
1159 |                 self.add_code(&format!("if true:"));
     |                                ^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"if true:".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1162:32
     |
1162 |                 self.add_code(&format!("else:"));
     |                                ^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"else:".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1169:9
     |
1169 | /         match &evt_handler_node.msg_t {
1170 | |             MessageType::CustomMessage {..} => {
1171 | |                 // Note: this is a bit convoluted as we cant use self.add_code() inside the
1172 | |                 // if statements as it is a double borrow (sigh).
...    |
1183 | |
1184 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1169 |         if let MessageType::CustomMessage {..} = &evt_handler_node.msg_t {
1170 |             // Note: this is a bit convoluted as we cant use self.add_code() inside the
1171 |             // if statements as it is a double borrow (sigh).
1172 | 
1173 |             let params_code: Vec<String> = Vec::new();
1174 | 
   ...

warning: length comparison to zero
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1190:39
     |
1190 |         self.event_handler_has_code = evt_handler_node.statements.len() > 0usize;
     |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!evt_handler_node.statements.is_empty()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1211:40
     |
1211 |                         self.add_code(&format!("e._return = "));
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1249:32
     |
1249 |                 self.add_code(&format!("."));
     |                                ^^^^^^^^^^^^ help: consider using `.to_string()`: `".".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1253:24
     |
1253 |         self.add_code(&format!("{}", method_call.identifier.name.lexeme));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `method_call.identifier.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1271:34
     |
1271 |                 output.push_str(&format!("."));
     |                                  ^^^^^^^^^^^^ help: consider using `.to_string()`: `".".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1275:26
     |
1275 |         output.push_str(&format!("{}", method_call.identifier.name.lexeme));
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `method_call.identifier.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1289:24
     |
1289 |         self.add_code(&format!("("));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1293:28
     |
1293 |             self.add_code(&format!("{}",separator));
     |                            ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1298:24
     |
1298 |         self.add_code(&format!(")"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1308:26
     |
1308 |         output.push_str(&format!("("));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1312:30
     |
1312 |             output.push_str(&format!("{}",separator));
     |                              ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1317:26
     |
1317 |         output.push_str(&format!(")"));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1338:26
     |
1338 |         output.push_str(&format!("{}",action_name));
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `action_name.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1372:24
     |
1372 |         self.add_code(&format!("{}", state_ref.name));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `state_ref.name.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1385:33
     |
1385 |             => self.errors.push(format!("Fatal error - change state stack pop not implemented."),)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Fatal error - change state stack pop not implemented.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1448:32
     |
1448 |                 self.add_code(&format!(")"));
     |                                ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1450:28
     |
1450 |             self.add_code(&format!(":"));
     |                            ^^^^^^^^^^^^ help: consider using `.to_string()`: `":".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1486:28
     |
1486 |             self.add_code(&format!("{}",separator));
     |                            ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1518:30
     |
1518 |             output.push_str(&format!("{}",separator));
     |                              ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1555:48
     |
1555 | ...                   self.add_code(&format!("e._return = "));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1578:24
     |
1578 |         self.add_code(&format!("else:"));
     |                        ^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"else:".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1591:48
     |
1591 | ...                   self.add_code(&format!("e._return = ",));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1636:42
     |
1636 |                         self.errors.push(format!("Error - expression list is not testable."));
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Error - expression list is not testable.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1643:39
     |
1643 |                 _ => self.errors.push(format!("TODO")),
     |                                       ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1657:36
     |
1657 |                     self.add_code(&format!(" || ("));
     |                                    ^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" || (".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1667:47
     |
1667 |                         _ => self.errors.push(format!("TODO")),
     |                                               ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1672:28
     |
1672 |             self.add_code(&format!(":"));
     |                            ^^^^^^^^^^^^ help: consider using `.to_string()`: `":".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1703:48
     |
1703 | ...                   self.add_code(&format!("e._return = "));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1727:24
     |
1727 |         self.add_code(&format!("else:"));
     |                        ^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"else:".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1740:48
     |
1740 | ...                   self.add_code(&format!("e._return = "));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1768:26
     |
1768 |         self.errors.push(format!("Not implemented."));
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Not implemented.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1794:42
     |
1794 |                         self.errors.push(format!("Error - expression list is not testable."));
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Error - expression list is not testable.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1799:39
     |
1799 |                 _ => self.errors.push(format!("TODO.")),
     |                                       ^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1808:36
     |
1808 |                     self.add_code(&format!(" || ("));
     |                                    ^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" || (".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1818:47
     |
1818 |                         _ => self.errors.push(format!("TODO.")),
     |                                               ^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1824:28
     |
1824 |             self.add_code(&format!(") {{"));
     |                            ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `") {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1857:48
     |
1857 | ...                   self.add_code(&format!("e._return = "));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1881:24
     |
1881 |         self.add_code(&format!(" else {{"));
     |                        ^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" else {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1894:48
     |
1894 | ...                   self.add_code(&format!("e._return = "));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1921:24
     |
1921 |         self.add_code(&format!("{}", match_pattern_node.match_pattern_number));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `match_pattern_node.match_pattern_number.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1931:24
     |
1931 |         self.add_code(&format!("("));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1934:28
     |
1934 |             self.add_code(&format!("{}",separator));
     |                            ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1938:24
     |
1938 |         self.add_code(&format!(")"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1950:26
     |
1950 |         output.push_str(&format!("("));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1953:30
     |
1953 |             output.push_str(&format!("{}",separator));
     |                              ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1957:26
     |
1957 |         output.push_str(&format!(")"));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1968:31
     |
1968 |             => self.add_code(&format!("{}", literal_expression_node.value)),
     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `literal_expression_node.value.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1970:31
     |
1970 |             => self.add_code(&format!("{}", literal_expression_node.value)),
     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `literal_expression_node.value.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1981:35
     |
1981 |             _ => self.errors.push(format!("TODO: visit_literal_expression_node")),
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO: visit_literal_expression_node".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:1994:34
     |
1994 |                 output.push_str(&format!("{}", literal_expression_node.value))
     |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `literal_expression_node.value.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:2011:35
     |
2011 |             _ => self.errors.push(format!("TODO: visit_literal_expression_node_to_string")),
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO: visit_literal_expression_node_to_string".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:2021:24
     |
2021 |         self.add_code(&format!("{}",identifier_node.name.lexeme));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `identifier_node.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:2030:26
     |
2030 |         output.push_str(&format!("{}",identifier_node.name.lexeme));
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `identifier_node.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:2061:36
     |
2061 |                     self.add_code(&format!("self._stateStack_push_(self._stateContext_)"));
     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"self._stateStack_push_(self._stateContext_)".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:2063:36
     |
2063 |                     self.add_code(&format!("self._stateStack_push_(self._state_)"));
     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"self._stateStack_push_(self._state_)".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:2068:36
     |
2068 |                     self.add_code(&format!("var stateContext = self._stateStack_pop_()"));
     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"var stateContext = self._stateStack_pop_()".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:2070:36
     |
2070 |                     self.add_code(&format!("var state = _stateStack_pop_()"));
     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"var state = _stateStack_pop_()".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:2092:85
     |
2092 |             FrameEventPart::Event { is_reference: _is_reference } => self.add_code(&format!("e")),
     |                                                                                     ^^^^^^^^^^^^ help: consider using `.to_string()`: `"e".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:2093:87
     |
2093 |             FrameEventPart::Message { is_reference: _is_reference } => self.add_code(&format!("e._message")),
     |                                                                                       ^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._message".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:2095:86
     |
2095 |             FrameEventPart::Return { is_reference: _is_reference } => self.add_code(&format!("e._return")),
     |                                                                                      ^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:2108:70
     |
2108 |             FrameEventPart::Event { is_reference: _is_reference } => output.push_str("e"),
     |                                                                      ^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `output.push('e')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: using `clone` on a `Copy` type
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:2129:17
     |
2129 |                 self.format_parameter_list(params).clone()
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.format_parameter_list(params)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

warning: passing a unit value to a function
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:2129:17
     |
2129 |                 self.format_parameter_list(params).clone()
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unit_arg
help: move the expression in front of the call and replace it with the unit literal `()`
     |
2129 |                 self.format_parameter_list(params);
2130 |                 ().clone()
     |

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:2134:24
     |
2134 |         self.add_code(&format!("):"));
     |                        ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"):".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:2137:24
     |
2137 |         self.add_code(&format!("assert(true,\"Error - unimplemented action\")"));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"assert(true,\"Error - unimplemented action\")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/gdscript_3_2_visitor.rs:2363:38
     |
2363 |             OperatorType::Negated => output.push_str("-"),
     |                                      ^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `output.push('-')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: this function has too many arguments (8/7)
  --> src/frame_c/visitors/java_8_visitor.rs:41:5
   |
41 | /     pub fn new(   arcanium:Arcanum
42 | |                   , generate_exit_args:bool
43 | |                   , generate_state_context:bool
44 | |                   , generate_state_stack:bool
...  |
47 | |                   , compiler_version:&str
48 | |                   , comments:Vec<Token>) -> Java8Visitor {
   | |________________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments

warning: length comparison to zero
  --> src/frame_c/visitors/java_8_visitor.rs:82:12
   |
82 |         if self.errors.len() > 0 {
   |            ^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!self.errors.is_empty()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: unneeded `return` statement
   --> src/frame_c/visitors/java_8_visitor.rs:133:9
    |
133 |         return var_type;
    |         ^^^^^^^^^^^^^^^^ help: remove `return`: `var_type`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/java_8_visitor.rs:153:21
    |
153 |                     code.push_str("(");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push('(')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/java_8_visitor.rs:159:21
    |
159 |                     code.push_str(")");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push(')')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/java_8_visitor.rs:170:21
    |
170 |                     code.push_str("(");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push('(')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/java_8_visitor.rs:176:21
    |
176 |                     code.push_str(")");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push(')')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/java_8_visitor.rs:187:21
    |
187 |                     code.push_str("(");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push('(')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/java_8_visitor.rs:193:21
    |
193 |                     code.push_str(")");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push(')')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:198:32
    |
198 |                 code.push_str(&format!("{}",variable_node.id_node.name.lexeme));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `variable_node.id_node.name.lexeme.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:202:32
    |
202 |                 code.push_str(&format!("{}",variable_node.id_node.name.lexeme));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `variable_node.id_node.name.lexeme.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.
   --> src/frame_c/visitors/java_8_visitor.rs:212:47
    |
212 |     fn format_parameter_list(&mut self,params:&Vec<ParameterNode>) {
    |                                               ^^^^^^^^^^^^^^^^^^^ help: change this to: `&[ParameterNode]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:215:28
    |
215 |             self.add_code(&format!("{}", separator));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.
   --> src/frame_c/visitors/java_8_visitor.rs:227:56
    |
227 |     fn format_actions_parameter_list(&mut self, params:&Vec<ParameterNode>,subclass_actions:&mut String) {
    |                                                        ^^^^^^^^^^^^^^^^^^^ help: change this to: `&[ParameterNode]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:230:28
    |
230 |             self.add_code(&format!("{}", separator));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:231:40
    |
231 |             subclass_actions.push_str(&format!("{}", separator));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: writing `&String` instead of `&str` involves a new object where a slice will do.
   --> src/frame_c/visitors/java_8_visitor.rs:259:49
    |
259 |     fn format_action_name(&mut self,action_name:&String) -> String {
    |                                                 ^^^^^^^ help: change this to: `&str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:272:30
    |
272 |         self.code.push_str(&*format!("{}",s));
    |                              ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `s.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: unneeded `return` statement
   --> src/frame_c/visitors/java_8_visitor.rs:290:9
    |
290 |         return (0..self.dent).map(|_| "    ").collect::<String>()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(0..self.dent).map(|_| "    ").collect::<String>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.
   --> src/frame_c/visitors/java_8_visitor.rs:307:52
    |
307 |     fn visit_decl_stmts(&mut self, decl_stmt_types:&Vec<DeclOrStmtType>) {
    |                                                    ^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[DeclOrStmtType]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: redundant pattern matching, consider using `is_some()`
   --> src/frame_c/visitors/java_8_visitor.rs:361:16
    |
361 |         if let Some(_) = system_node.get_first_state() {
    |         -------^^^^^^^-------------------------------- help: try this: `if system_node.get_first_state().is_some()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:363:28
    |
363 |             self.add_code(&format!("private FrameState _state_;"));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"private FrameState _state_;".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:366:32
    |
366 |                 self.add_code(&format!("private StateContext _stateContext_;"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"private StateContext _stateContext_;".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:373:40
    |
373 | ...ode(&format!("private void _transition_(FrameState newState,HashMap<String,Object> exitArgs, StateContext stateContext) {{"));
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"private void _transition_(FrameState newState,HashMap<String,Object> exitArgs, StateContext stateContext) {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:375:40
    |
375 |                         self.add_code(&format!("private void _transition_(FrameState newState, StateContext stateContext) {{"));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"private void _transition_(FrameState newState, StateContext stateContext) {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:379:40
    |
379 |                         self.add_code(&format!("private void _transition_(FrameState newState,HashMap<String,Object> exitArgs) {{"));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"private void _transition_(FrameState newState,HashMap<String,Object> exitArgs) {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:381:40
    |
381 |                         self.add_code(&format!("private void _transition_(FrameState newState) {{"));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"private void _transition_(FrameState newState) {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:387:36
    |
387 |                     self.add_code(&format!("FrameEvent exitEvent = new FrameEvent(\"<\",exitArgs);"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"FrameEvent exitEvent = new FrameEvent(\"<\",exitArgs);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:389:36
    |
389 |                     self.add_code(&format!("FrameEvent exitEvent = new FrameEvent(\"<\",null);"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"FrameEvent exitEvent = new FrameEvent(\"<\",null);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:392:32
    |
392 |                 self.add_code(&format!("_state_.call(exitEvent);"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_state_.call(exitEvent);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:394:32
    |
394 |                 self.add_code(&format!("_state_ = newState;"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_state_ = newState;".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:397:36
    |
397 |                     self.add_code(&format!("_stateContext_ = stateContext;"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_stateContext_ = stateContext;".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:399:36
    |
399 |                     self.add_code(&format!("FrameEvent enterEvent = new FrameEvent(\">\",_stateContext_.getEnterArgs());"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"FrameEvent enterEvent = new FrameEvent(\">\",_stateContext_.getEnterArgs());".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:402:36
    |
402 |                     self.add_code(&format!("FrameEvent enterEvent = new FrameEvent(\">\",null);"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"FrameEvent enterEvent = new FrameEvent(\">\",null);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:405:32
    |
405 |                 self.add_code(&format!("_state_.call(enterEvent);"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_state_.call(enterEvent);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:408:32
    |
408 |                 self.add_code(&format!("}}"));
    |                                ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:414:36
    |
414 |                     self.add_code(&format!("private Stack<StateContext> _stateStack_ = new Stack<StateContext>();"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"private Stack<StateContext> _stateStack_ = new Stack<StateContext>();".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:417:36
    |
417 |                     self.add_code(&format!("private void _stateStack_push_(StateContext stateContext) {{"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"private void _stateStack_push_(StateContext stateContext) {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:420:36
    |
420 |                     self.add_code(&format!("_stateStack_.push(stateContext);"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_stateStack_.push(stateContext);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:423:36
    |
423 |                     self.add_code(&format!("}}"));
    |                                    ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:426:36
    |
426 |                     self.add_code(&format!("private StateContext _stateStack_pop_() {{"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"private StateContext _stateStack_pop_() {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:429:36
    |
429 |                     self.add_code(&format!("return _stateStack_.pop();"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"return _stateStack_.pop();".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:431:36
    |
431 |                     self.add_code(&format!("private Stack<FrameState> _stateStack_ = new Stack<FrameState>();"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"private Stack<FrameState> _stateStack_ = new Stack<FrameState>();".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:434:36
    |
434 |                     self.add_code(&format!("private void _stateStack_push_(FrameState state) {{"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"private void _stateStack_push_(FrameState state) {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:437:36
    |
437 |                     self.add_code(&format!("_stateStack_.push(state);"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_stateStack_.push(state);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:440:36
    |
440 |                     self.add_code(&format!("}}"));
    |                                    ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:443:36
    |
443 |                     self.add_code(&format!("private FrameState _stateStack_pop_() {{"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"private FrameState _stateStack_pop_() {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:446:36
    |
446 |                     self.add_code(&format!("return _stateStack_.pop();"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"return _stateStack_.pop();".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:451:32
    |
451 |                 self.add_code(&format!("}}"));
    |                                ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:456:32
    |
456 |                 self.add_code(&format!("private void _changeState_(newState) {{"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"private void _changeState_(newState) {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:459:32
    |
459 |                 self.add_code(&format!("_state_ = newState;"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_state_ = newState;".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:462:32
    |
462 |                 self.add_code(&format!("}}"));
    |                                ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:468:42
    |
468 |                     self.code.push_str(&*format!("{}",line));
    |                                          ^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `line.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:473:42
    |
473 |                     self.code.push_str(&*format!("{}",line));
    |                                          ^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `line.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:484:34
    |
484 |             self.code.push_str(&*format!("{}",line));
    |                                  ^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `line.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:505:38
    |
505 |                 self.code.push_str(&*format!("*/"));
    |                                      ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"*/".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: length comparison to zero
   --> src/frame_c/visitors/java_8_visitor.rs:573:16
    |
573 |             if exit_args.exprs_t.len() > 0 {
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!exit_args.exprs_t.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/java_8_visitor.rs:583:17
    |
583 |                 msg.push_str(":");
    |                 ^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `msg.push(':')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:610:50
    |
610 |                         None => self.errors.push(format!("Fatal error: misaligned parameters to arguments.")),
    |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Fatal error: misaligned parameters to arguments.".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:613:38
    |
613 |                     self.errors.push(format!("Unknown error."));
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Unknown error.".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/java_8_visitor.rs:633:13
    |
633 |             msg.push_str(":");
    |             ^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `msg.push(':')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:640:46
    |
640 | ...                   self.errors.push(format!("Fatal error: misaligned parameters to arguments."));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Fatal error: misaligned parameters to arguments.".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:698:34
    |
698 |                 self.errors.push(format!("TODO"));
    |                                  ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
   --> src/frame_c/visitors/java_8_visitor.rs:706:9
    |
706 | /         match target_state_rcref_opt {
707 | |             Some(q) => {
708 | | //                target_state_vars = "stateVars".to_string();
709 | |                 if let Some(state_symbol_rcref) = self.arcanium.get_state(&q.borrow().name) {
...   |
728 | |             },
729 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
    |
706 |         if let Some(q) = target_state_rcref_opt {
707 |         //                target_state_vars = "stateVars".to_string();
708 |                         if let Some(state_symbol_rcref) = self.arcanium.get_state(&q.borrow().name) {
709 |                             let state_symbol = state_symbol_rcref.borrow();
710 |                             let state_node = &state_symbol.state_node.as_ref().unwrap().borrow();
711 |                             // generate local state variables
  ...

warning: length comparison to zero
   --> src/frame_c/visitors/java_8_visitor.rs:782:16
    |
782 |             if exit_args.exprs_t.len() > 0 {
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!exit_args.exprs_t.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/java_8_visitor.rs:791:17
    |
791 |                 msg.push_str(":");
    |                 ^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `msg.push(':')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:798:50
    |
798 | ...                   self.errors.push(format!("Fatal error: misaligned parameters to arguments."));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Fatal error: misaligned parameters to arguments.".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:820:46
    |
820 | ...                   self.errors.push(format!("Fatal error: misaligned parameters to arguments.")),
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Fatal error: misaligned parameters to arguments.".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:823:38
    |
823 |                     self.errors.push(format!("TODO"));
    |                                      ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:829:28
    |
829 |             self.add_code(&format!("stateContext = _stateStack_pop_();"));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"stateContext = _stateStack_pop_();".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:831:28
    |
831 |             self.add_code(&format!("FrameState state = _stateStack_pop_();"));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"FrameState state = _stateStack_pop_();".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:836:32
    |
836 |                 self.add_code(&format!("_transition_(stateContext.state,exitArgs,stateContext);"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_transition_(stateContext.state,exitArgs,stateContext);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:838:32
    |
838 |                 self.add_code(&format!("_transition_(state,exitArgs);"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_transition_(state,exitArgs);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:842:32
    |
842 |                 self.add_code(&format!("_transition_(stateContext.state,stateContext);"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_transition_(stateContext.state,stateContext);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:844:32
    |
844 |                 self.add_code(&format!("_transition_(state);"));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_transition_(state);".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
   --> src/frame_c/visitors/java_8_visitor.rs:869:9
    |
869 | /         match (&system_node).get_first_state() {
870 | |             Some(x) => {
871 | |                 self.first_state_name = x.borrow().name.clone();
872 | |                 self.has_states = true;
873 | |             },
874 | |             None => {},
875 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
    |
869 |         if let Some(x) = (&system_node).get_first_state() {
870 |             self.first_state_name = x.borrow().name.clone();
871 |             self.has_states = true;
872 |         }
    |

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:909:28
    |
909 |             self.add_code(&format!("}}"));
    |                            ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:944:33
    |
944 |         self.subclass_code.push(format!("}}"));
    |                                 ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/java_8_visitor.rs:993:24
    |
993 |         self.add_code(&format!("{}",interface_method_call_expr_node.identifier.name.lexeme));
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `interface_method_call_expr_node.identifier.name.lexeme.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1004:26
     |
1004 |         output.push_str(&format!("{}",interface_method_call_expr_node.identifier.name.lexeme));
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `interface_method_call_expr_node.identifier.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: using `clone` on a `Copy` type
    --> src/frame_c/visitors/java_8_visitor.rs:1053:17
     |
1053 |             =>  self.format_parameter_list(params).clone(),
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.format_parameter_list(params)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

warning: passing a unit value to a function
    --> src/frame_c/visitors/java_8_visitor.rs:1053:17
     |
1053 |             =>  self.format_parameter_list(params).clone(),
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unit_arg
help: move the expression in front of the call and replace it with the unit literal `()`
     |
1053 |             =>  {
1054 |                 self.format_parameter_list(params);
1055 |                 ().clone()
1056 |             },
     |

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1081:24
     |
1081 |         self.add_code(&format!("_state_.call(e);"));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_state_.call(e);".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1093:24
     |
1093 |         self.add_code(&format!("}}"));
     |                        ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: length comparison to zero
    --> src/frame_c/visitors/java_8_visitor.rs:1208:12
     |
1208 |         if state_node.evt_handlers_rcref.len() > 0 {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!state_node.evt_handlers_rcref.is_empty()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1247:32
     |
1247 |                 self.add_code(&format!("if (true) {{"));
     |                                ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"if (true) {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1250:32
     |
1250 |                 self.add_code(&format!("else {{"));
     |                                ^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"else {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1256:28
     |
1256 |             self.add_code(&format!("StateContext stateContext = null;"));
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"StateContext stateContext = null;".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
    --> src/frame_c/visitors/java_8_visitor.rs:1262:9
     |
1262 | /         match &evt_handler_node.msg_t {
1263 | |             MessageType::CustomMessage {..} => {
1264 | |                 // Note: this is a bit convoluted as we cant use self.add_code() inside the
1265 | |                 // if statements as it is a double borrow (sigh).
...    |
1276 | |
1277 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1262 |         if let MessageType::CustomMessage {..} = &evt_handler_node.msg_t {
1263 |             // Note: this is a bit convoluted as we cant use self.add_code() inside the
1264 |             // if statements as it is a double borrow (sigh).
1265 | 
1266 |             let params_code: Vec<String> = Vec::new();
1267 | 
   ...

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1287:24
     |
1287 |         self.add_code(&format!("}}"));
     |                        ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1304:40
     |
1304 |                         self.add_code(&format!("e._return = "));
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1328:24
     |
1328 |         self.add_code(&format!(";"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `";".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1341:32
     |
1341 |                 self.add_code(&format!("."));
     |                                ^^^^^^^^^^^^ help: consider using `.to_string()`: `".".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1345:24
     |
1345 |         self.add_code(&format!("{}", method_call.identifier.name.lexeme));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `method_call.identifier.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1363:34
     |
1363 |                 output.push_str(&format!("."));
     |                                  ^^^^^^^^^^^^ help: consider using `.to_string()`: `".".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1367:26
     |
1367 |         output.push_str(&format!("{}", method_call.identifier.name.lexeme));
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `method_call.identifier.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1381:24
     |
1381 |         self.add_code(&format!("("));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1385:28
     |
1385 |             self.add_code(&format!("{}",separator));
     |                            ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1390:24
     |
1390 |         self.add_code(&format!(")"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1400:26
     |
1400 |         output.push_str(&format!("("));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1404:30
     |
1404 |             output.push_str(&format!("{}",separator));
     |                              ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1409:26
     |
1409 |         output.push_str(&format!(")"));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1419:24
     |
1419 |         self.add_code(&format!("{}", action_name));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `action_name.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1431:26
     |
1431 |         output.push_str(&format!("{}",action_name));
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `action_name.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1443:24
     |
1443 |         self.add_code(&format!(";"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `";".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1466:24
     |
1466 |         self.add_code(&format!("{}", state_ref.name));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `state_ref.name.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1479:37
     |
1479 |                 => self.errors.push(format!("Fatal error - change state stack pop not implemented."),)
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Fatal error - change state stack pop not implemented.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1542:32
     |
1542 |                 self.add_code(&format!(")"));
     |                                ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1544:28
     |
1544 |             self.add_code(&format!(") {{"));
     |                            ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `") {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1550:28
     |
1550 |             self.add_code(&format!("}}"));
     |                            ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1569:24
     |
1569 |         self.add_code(&format!(";"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `";".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1581:28
     |
1581 |             self.add_code(&format!("{}",separator));
     |                            ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1613:30
     |
1613 |             output.push_str(&format!("{}",separator));
     |                              ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1650:48
     |
1650 | ...                   self.add_code(&format!("e._return = "));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1674:24
     |
1674 |         self.add_code(&format!(" else {{"));
     |                        ^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" else {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1687:48
     |
1687 | ...                   self.add_code(&format!("e._return = ",));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1706:24
     |
1706 |         self.add_code(&format!("}}"));
     |                        ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1734:42
     |
1734 |                         self.errors.push(format!("Error - expression list is not testable."));
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Error - expression list is not testable.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1741:39
     |
1741 |                 _ => self.errors.push(format!("TODO")),
     |                                       ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1755:36
     |
1755 |                     self.add_code(&format!(" || ("));
     |                                    ^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" || (".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1765:47
     |
1765 |                         _ => self.errors.push(format!("TODO")),
     |                                               ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1770:28
     |
1770 |             self.add_code(&format!(" {{"));
     |                            ^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1776:28
     |
1776 |             self.add_code(&format!("}}"));
     |                            ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1802:48
     |
1802 | ...                   self.add_code(&format!("e._return = "));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1827:24
     |
1827 |         self.add_code(&format!(" else {{"));
     |                        ^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" else {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1840:48
     |
1840 | ...                   self.add_code(&format!("e._return = "));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1860:24
     |
1860 |         self.add_code(&format!("}}"));
     |                        ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1870:26
     |
1870 |         self.errors.push(format!("Not implemented."));
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Not implemented.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1896:42
     |
1896 |                         self.errors.push(format!("Error - expression list is not testable."));
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Error - expression list is not testable.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1901:39
     |
1901 |                 _ => self.errors.push(format!("TODO.")),
     |                                       ^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1910:36
     |
1910 |                     self.add_code(&format!(" || ("));
     |                                    ^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" || (".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1920:47
     |
1920 |                         _ => self.errors.push(format!("TODO.")),
     |                                               ^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1926:28
     |
1926 |             self.add_code(&format!(") {{"));
     |                            ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `") {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1932:28
     |
1932 |             self.add_code(&format!("}}"));
     |                            ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1960:48
     |
1960 | ...                   self.add_code(&format!("e._return = "));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1985:24
     |
1985 |         self.add_code(&format!(" else {{"));
     |                        ^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" else {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:1998:48
     |
1998 | ...                   self.add_code(&format!("e._return = "));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:2018:24
     |
2018 |         self.add_code(&format!("}}"));
     |                        ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:2026:24
     |
2026 |         self.add_code(&format!("{}", match_pattern_node.match_pattern_number));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `match_pattern_node.match_pattern_number.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:2036:24
     |
2036 |         self.add_code(&format!("("));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:2039:28
     |
2039 |             self.add_code(&format!("{}",separator));
     |                            ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:2043:24
     |
2043 |         self.add_code(&format!(")"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:2055:26
     |
2055 |         output.push_str(&format!("("));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:2058:30
     |
2058 |             output.push_str(&format!("{}",separator));
     |                              ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:2062:26
     |
2062 |         output.push_str(&format!(")"));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:2073:35
     |
2073 |                 => self.add_code(&format!("{}", literal_expression_node.value)),
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `literal_expression_node.value.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:2075:35
     |
2075 |                 => self.add_code(&format!("{}", literal_expression_node.value)),
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `literal_expression_node.value.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:2086:35
     |
2086 |             _ => self.errors.push(format!("TODO: visit_literal_expression_node")),
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO: visit_literal_expression_node".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:2099:34
     |
2099 |                 output.push_str(&format!("{}", literal_expression_node.value))
     |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `literal_expression_node.value.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:2116:35
     |
2116 |             _ => self.errors.push(format!("TODO: visit_literal_expression_node_to_string")),
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO: visit_literal_expression_node_to_string".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:2126:24
     |
2126 |         self.add_code(&format!("{}",identifier_node.name.lexeme));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `identifier_node.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:2135:26
     |
2135 |         output.push_str(&format!("{}",identifier_node.name.lexeme));
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `identifier_node.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:2166:36
     |
2166 |                     self.add_code(&format!("_stateStack_push_(_stateContext_);"));
     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_stateStack_push_(_stateContext_);".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:2168:36
     |
2168 |                     self.add_code(&format!("_stateStack_push_(_state_);"));
     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_stateStack_push_(_state_);".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:2173:36
     |
2173 |                     self.add_code(&format!("stateContext = _stateStack_pop_()"));
     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"stateContext = _stateStack_pop_()".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:2175:36
     |
2175 |                     self.add_code(&format!("FrameState state = _stateStack_pop_()"));
     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"FrameState state = _stateStack_pop_()".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:2197:85
     |
2197 |             FrameEventPart::Event { is_reference: _is_reference } => self.add_code(&format!("e")),
     |                                                                                     ^^^^^^^^^^^^ help: consider using `.to_string()`: `"e".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:2198:87
     |
2198 |             FrameEventPart::Message { is_reference: _is_reference } => self.add_code(&format!("e._message")),
     |                                                                                       ^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._message".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:2200:86
     |
2200 |             FrameEventPart::Return { is_reference: _is_reference } => self.add_code(&format!("e._return")),
     |                                                                                      ^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/java_8_visitor.rs:2213:71
     |
2213 |             FrameEventPart::Event  { is_reference: _is_reference } => output.push_str("e"),
     |                                                                       ^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `output.push('e')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: using `clone` on a `Copy` type
    --> src/frame_c/visitors/java_8_visitor.rs:2242:21
     |
2242 |                 =>  self.format_actions_parameter_list(params,&mut subclass_code).clone(),
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.format_actions_parameter_list(params,&mut subclass_code)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

warning: passing a unit value to a function
    --> src/frame_c/visitors/java_8_visitor.rs:2242:21
     |
2242 |                 =>  self.format_actions_parameter_list(params,&mut subclass_code).clone(),
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unit_arg
help: move the expression in front of the call and replace it with the unit literal `()`
     |
2242 |                 =>  {
2243 |                     self.format_actions_parameter_list(params,&mut subclass_code);
2244 |                     ().clone()
2245 |                 },
     |

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:2245:33
     |
2245 |         subclass_code.push_str(&format!(") {{}}"));
     |                                 ^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `") {}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/java_8_visitor.rs:2248:24
     |
2248 |         self.add_code(&format!(") {{ throw new UnsupportedOperationException(); }}"));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `") { throw new UnsupportedOperationException(); }".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/java_8_visitor.rs:2343:9
     |
2343 |         output.push_str(";");
     |         ^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `output.push(';')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/java_8_visitor.rs:2465:38
     |
2465 |             OperatorType::Negated => output.push_str("-"),
     |                                      ^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `output.push('-')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/java_8_visitor.rs:2472:34
     |
2472 |             OperatorType::Not => output.push_str("!"),
     |                                  ^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `output.push('!')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: this function has too many arguments (9/7)
   --> src/frame_c/visitors/rust_visitor.rs:131:5
    |
131 | /     pub fn new(   arcanium:Arcanum
132 | |                   , config_yaml:&Yaml
133 | |                   , generate_exit_args:bool
134 | |                   , generate_state_context:bool
...   |
138 | |                   , compiler_version:&str
139 | |                   , comments:Vec<Token>) -> RustVisitor {
    | |_______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments

warning: returning the result of a `let` binding from a block
   --> src/frame_c/visitors/rust_visitor.rs:182:9
    |
180 |         let config = Config::new(&rust_yaml);
    |         ------------------------------------- unnecessary `let` binding
181 | 
182 |         config
    |         ^^^^^^
    |
    = note: `#[warn(clippy::let_and_return)]` on by default
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
180 |         
181 | 
182 |         Config::new(&rust_yaml)
    |

warning: single-character string constant used as pattern
   --> src/frame_c/visitors/rust_visitor.rs:190:31
    |
190 |         let split = msg.split(":");
    |                               ^^^ help: try using a `char` instead: `':'`
    |
    = note: `#[warn(clippy::single_char_pattern)]` on by default
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

warning: redundant clone
   --> src/frame_c/visitors/rust_visitor.rs:214:41
    |
214 |             (None,event_name.to_string().clone())
    |                                         ^^^^^^^^ help: remove this
    |
note: this value is dropped without further use
   --> src/frame_c/visitors/rust_visitor.rs:214:19
    |
214 |             (None,event_name.to_string().clone())
    |                   ^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone

warning: single-character string constant used as pattern
   --> src/frame_c/visitors/rust_visitor.rs:210:38
    |
210 |         let split = event_name.split(":");
    |                                      ^^^ help: try using a `char` instead: `':'`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

warning: unneeded `return` statement
   --> src/frame_c/visitors/rust_visitor.rs:273:9
    |
273 |         return msg_name.to_string();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `msg_name.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: length comparison to zero
   --> src/frame_c/visitors/rust_visitor.rs:279:12
    |
279 |         if self.errors.len() > 0 {
    |            ^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!self.errors.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/rust_visitor.rs:298:21
    |
298 |                     code.push_str("&");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push('&')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/rust_visitor.rs:310:21
    |
310 |                     code.push_str("(");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push('(')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/rust_visitor.rs:314:21
    |
314 |                     code.push_str("&");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push('&')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/rust_visitor.rs:322:21
    |
322 |                     code.push_str(")");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push(')')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/rust_visitor.rs:333:21
    |
333 |                     code.push_str("(");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push('(')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/rust_visitor.rs:337:21
    |
337 |                     code.push_str("&");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push('&')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/rust_visitor.rs:345:21
    |
345 |                     code.push_str(")");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push(')')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/rust_visitor.rs:350:21
    |
350 |                     code.push_str("(");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push('(')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/rust_visitor.rs:354:21
    |
354 |                     code.push_str("&");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push('&')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
   --> src/frame_c/visitors/rust_visitor.rs:373:29
    |
373 | ...                   format!("{}", canonical_message_name)
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `canonical_message_name.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/rust_visitor.rs:388:21
    |
388 |                     code.push_str(")");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push(')')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/rust_visitor.rs:394:21
    |
394 |                     code.push_str("&");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push('&')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
   --> src/frame_c/visitors/rust_visitor.rs:396:32
    |
396 |                 code.push_str(&format!("{}",variable_node.id_node.name.lexeme));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `variable_node.id_node.name.lexeme.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/rust_visitor.rs:401:21
    |
401 |                     code.push_str("&");
    |                     ^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `code.push('&')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
   --> src/frame_c/visitors/rust_visitor.rs:403:32
    |
403 |                 code.push_str(&format!("{}",variable_node.id_node.name.lexeme));
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `variable_node.id_node.name.lexeme.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.
   --> src/frame_c/visitors/rust_visitor.rs:413:47
    |
413 |     fn format_parameter_list(&mut self,params:&Vec<ParameterNode>) {
    |                                               ^^^^^^^^^^^^^^^^^^^ help: change this to: `&[ParameterNode]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: useless use of `format!`
   --> src/frame_c/visitors/rust_visitor.rs:416:28
    |
416 |             self.add_code(&format!("{}", separator));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.
   --> src/frame_c/visitors/rust_visitor.rs:428:56
    |
428 |     fn format_actions_parameter_list(&mut self, params:&Vec<ParameterNode>) {
    |                                                        ^^^^^^^^^^^^^^^^^^^ help: change this to: `&[ParameterNode]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: useless use of `format!`
   --> src/frame_c/visitors/rust_visitor.rs:431:28
    |
431 |             self.add_code(&format!("{}", separator));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: writing `&String` instead of `&str` involves a new object where a slice will do.
   --> src/frame_c/visitors/rust_visitor.rs:443:49
    |
443 |     fn format_action_name(&mut self,action_name:&String) -> String {
    |                                                 ^^^^^^^ help: change this to: `&str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: useless use of `format!`
   --> src/frame_c/visitors/rust_visitor.rs:444:16
    |
444 |         return format!("{}",action_name)
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `action_name.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/rust_visitor.rs:483:30
    |
483 |         self.code.push_str(&*format!("{}",s));
    |                              ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `s.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: unneeded `return` statement
   --> src/frame_c/visitors/rust_visitor.rs:501:9
    |
501 |         return (0..self.dent).map(|_| "    ").collect::<String>()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(0..self.dent).map(|_| "    ").collect::<String>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.
   --> src/frame_c/visitors/rust_visitor.rs:518:52
    |
518 |     fn visit_decl_stmts(&mut self, decl_stmt_types:&Vec<DeclOrStmtType>) {
    |                                                    ^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[DeclOrStmtType]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: redundant pattern matching, consider using `is_some()`
   --> src/frame_c/visitors/rust_visitor.rs:619:16
    |
619 |         if let Some(_) = system_node.get_first_state() {
    |         -------^^^^^^^-------------------------------- help: try this: `if system_node.get_first_state().is_some()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching

warning: useless use of `format!`
   --> src/frame_c/visitors/rust_visitor.rs:679:32
    |
679 |                 self.add_code(&format!("}}"));
    |                                ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/rust_visitor.rs:697:36
    |
697 |                     self.add_code(&format!("}}"));
    |                                    ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/rust_visitor.rs:708:36
    |
708 |                     self.add_code(&format!(" match state_context_opt {{"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" match state_context_opt {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/rust_visitor.rs:713:36
    |
713 |                     self.add_code(&format!("None => panic!(\"Error - attempt to pop history when history stack is empty.\")"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"None => panic!(\"Error - attempt to pop history when history stack is empty.\")".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/rust_visitor.rs:728:36
    |
728 |                     self.add_code(&format!("}}"));
    |                                    ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/rust_visitor.rs:739:36
    |
739 |                     self.add_code(&format!(" match state_opt {{"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" match state_opt {".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/rust_visitor.rs:742:36
    |
742 |                     self.add_code(&format!("Some(state) => *state.borrow(),"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Some(state) => *state.borrow(),".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/rust_visitor.rs:744:36
    |
744 |                     self.add_code(&format!("None => panic!(\"Error - attempt to pop history when history stack is empty.\")"));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"None => panic!(\"Error - attempt to pop history when history stack is empty.\")".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/rust_visitor.rs:767:32
    |
767 |                 self.add_code(&format!("}}"));
    |                                ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/rust_visitor.rs:773:42
    |
773 |                     self.code.push_str(&*format!("{}",line));
    |                                          ^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `line.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/rust_visitor.rs:778:42
    |
778 |                     self.code.push_str(&*format!("{}",line));
    |                                          ^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `line.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/rust_visitor.rs:801:38
    |
801 |                 self.code.push_str(&*format!("*/"));
    |                                      ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"*/".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: length comparison to zero
   --> src/frame_c/visitors/rust_visitor.rs:867:16
    |
867 |             if exit_args.exprs_t.len() > 0 {
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!exit_args.exprs_t.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/rust_visitor.rs:877:17
    |
877 |                 msg.push_str(":");
    |                 ^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `msg.push(':')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
   --> src/frame_c/visitors/rust_visitor.rs:913:50
    |
913 |                         None => self.errors.push(format!("Fatal error: misaligned parameters to arguments.")),
    |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Fatal error: misaligned parameters to arguments.".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/rust_visitor.rs:940:13
    |
940 |             msg.push_str(":");
    |             ^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `msg.push(':')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
   --> src/frame_c/visitors/rust_visitor.rs:949:46
    |
949 | ...                   self.errors.push(format!("Fatal error: misaligned parameters to arguments."));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Fatal error: misaligned parameters to arguments.".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/rust_visitor.rs:972:9
    |
972 |         formatted_enter_args.push_str("}");
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `formatted_enter_args.push('}')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:1016:34
     |
1016 |                 self.errors.push(format!("TODO"));
     |                                  ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/rust_visitor.rs:1019:13
     |
1019 |             formatted_state_args.push_str("}");
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `formatted_state_args.push('}')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
    --> src/frame_c/visitors/rust_visitor.rs:1028:9
     |
1028 | /         match target_state_rcref_opt {
1029 | |             Some(q) => {
1030 | | //                target_state_vars = "stateVars".to_string();
1031 | |                 if let Some(state_symbol_rcref) = self.arcanium.get_state(&q.borrow().name) {
...    |
1057 | |             },
1058 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1028 |         if let Some(q) = target_state_rcref_opt {
1029 |         //                target_state_vars = "stateVars".to_string();
1030 |                         if let Some(state_symbol_rcref) = self.arcanium.get_state(&q.borrow().name) {
1031 |                             let state_symbol = state_symbol_rcref.borrow();
1032 |                             let state_node = &state_symbol.state_node.as_ref().unwrap().borrow();
1033 |                             // generate local state variables
   ...

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/rust_visitor.rs:1051:25
     |
1051 |                         formatted_state_vars.push_str("}");
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `formatted_state_vars.push('}')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: length comparison to zero
    --> src/frame_c/visitors/rust_visitor.rs:1163:16
     |
1163 |             if exit_args.exprs_t.len() > 0 {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!exit_args.exprs_t.is_empty()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/rust_visitor.rs:1172:17
     |
1172 |                 msg.push_str(":");
     |                 ^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `msg.push(':')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:1179:50
     |
1179 | ...                   self.errors.push(format!("Fatal error: misaligned parameters to arguments."));
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Fatal error: misaligned parameters to arguments.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:1209:46
     |
1209 | ...                   self.errors.push(format!("Fatal error: misaligned parameters to arguments.")),
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Fatal error: misaligned parameters to arguments.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:1212:38
     |
1212 |                     self.errors.push(format!("TODO"));
     |                                      ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
    --> src/frame_c/visitors/rust_visitor.rs:1316:13
     |
1316 | /             match self.arcanium.get_event(&unparsed_event_name, &self.current_state_name_opt) {
1317 | |                 Some(event_sym) => {
1318 | |                     let (_state_name_opt,event_name) = self.parse_event_name(&event_sym.borrow().msg);
1319 | |
...    |
1340 | |                 None => {},
1341 | |             }
     | |_____________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1316 |             if let Some(event_sym) = self.arcanium.get_event(&unparsed_event_name, &self.current_state_name_opt) {
1317 |                 let (_state_name_opt,event_name) = self.parse_event_name(&event_sym.borrow().msg);
1318 | 
1319 |                 // enter messages handled in state context struct
1320 |                 if !(event_name.eq(&self.config.enter_token)) {
1321 |                     match &event_sym.borrow().params_opt {
   ...

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:1382:36
     |
1382 |                     self.add_code(&format!("match self {{"));
     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"match self {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:1389:36
     |
1389 |                     self.add_code(&format!("_=> panic!(\"Invalid return type\"),"));
     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"_=> panic!(\"Invalid return type\"),".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
    --> src/frame_c/visitors/rust_visitor.rs:1701:9
     |
1701 | /         match (&system_node).get_first_state() {
1702 | |             Some(x) => {
1703 | |                 self.first_state_name = x.borrow().name.clone();
1704 | |                 self.has_states = true;
1705 | |             },
1706 | |             None => {},
1707 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1701 |         if let Some(x) = (&system_node).get_first_state() {
1702 |             self.first_state_name = x.borrow().name.clone();
1703 |             self.has_states = true;
1704 |         }
     |

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:1785:28
     |
1785 |             self.add_code(&format!("}}"));
     |                            ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:1788:28
     |
1788 |             self.add_code(&format!("}}"));
     |                            ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
    --> src/frame_c/visitors/rust_visitor.rs:1967:13
     |
1967 | /             match self.arcanium.get_event(&unparsed_event_name, &self.current_state_name_opt) {
1968 | |                 Some(event_sym) => {
1969 | |                     let (_state_name_opt,event_name) = self.parse_event_name(&event_sym.borrow().msg);
1970 | |                     if !(event_name.eq(&self.config.enter_token)) {
...    |
2052 | |                 None => {},
2053 | |             }
     | |_____________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1967 |             if let Some(event_sym) = self.arcanium.get_event(&unparsed_event_name, &self.current_state_name_opt) {
1968 |                 let (_state_name_opt,event_name) = self.parse_event_name(&event_sym.borrow().msg);
1969 |                 if !(event_name.eq(&self.config.enter_token)) {
1970 |                     match &event_sym.borrow().params_opt {
1971 |                         Some(params) => {
1972 |                             for param in params {
   ...

warning: using `clone` on a `Copy` type
    --> src/frame_c/visitors/rust_visitor.rs:2139:21
     |
2139 |                 =>  self.format_parameter_list(params).clone(),
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.format_parameter_list(params)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

warning: passing a unit value to a function
    --> src/frame_c/visitors/rust_visitor.rs:2139:21
     |
2139 |                 =>  self.format_parameter_list(params).clone(),
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unit_arg
help: move the expression in front of the call and replace it with the unit literal `()`
     |
2139 |                 =>  {
2140 |                     self.format_parameter_list(params);
2141 |                     ().clone()
2142 |                 },
     |

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:2216:24
     |
2216 |         self.add_code(&format!("}}"));
     |                        ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: length comparison to zero
    --> src/frame_c/visitors/rust_visitor.rs:2376:12
     |
2376 |         if state_node.evt_handlers_rcref.len() > 0 {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!state_node.evt_handlers_rcref.is_empty()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
    --> src/frame_c/visitors/rust_visitor.rs:2430:9
     |
2430 | /         match &evt_handler_node.msg_t {
2431 | |             MessageType::CustomMessage {..} => {
2432 | |                 // Note: this is a bit convoluted as we cant use self.add_code() inside the
2433 | |                 // if statements as it is a double borrow (sigh).
...    |
2443 | |             _ => {}
2444 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
2430 |         if let MessageType::CustomMessage {..} = &evt_handler_node.msg_t {
2431 |             // Note: this is a bit convoluted as we cant use self.add_code() inside the
2432 |             // if statements as it is a double borrow (sigh).
2433 | 
2434 |             let params_code: Vec<String> = Vec::new();
2435 | 
   ...

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:2454:24
     |
2454 |         self.add_code(&format!("}},"));
     |                        ^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"},".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:2503:24
     |
2503 |         self.add_code(&format!(";"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `";".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:2517:32
     |
2517 |                 self.add_code(&format!("."));
     |                                ^^^^^^^^^^^^ help: consider using `.to_string()`: `".".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:2521:24
     |
2521 |         self.add_code(&format!("{}", method_call.identifier.name.lexeme));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `method_call.identifier.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:2539:34
     |
2539 |                 output.push_str(&format!("."));
     |                                  ^^^^^^^^^^^^ help: consider using `.to_string()`: `".".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:2543:26
     |
2543 |         output.push_str(&format!("{}", method_call.identifier.name.lexeme));
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `method_call.identifier.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:2557:23
     |
2557 |        self.add_code(&format!("("));
     |                       ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:2561:28
     |
2561 |             self.add_code(&format!("{}",separator));
     |                            ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:2566:23
     |
2566 |        self.add_code(&format!(")"));
     |                       ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:2576:26
     |
2576 |         output.push_str(&format!("("));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:2580:30
     |
2580 |             output.push_str(&format!("{}",separator));
     |                              ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:2585:26
     |
2585 |         output.push_str(&format!(")"));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:2617:24
     |
2617 |         self.add_code(&format!(";"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `";".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:2640:24
     |
2640 |         self.add_code(&format!("{}", state_ref.name));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `state_ref.name.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:2653:33
     |
2653 |             => self.errors.push(format!("Fatal error - change state stack pop not implemented."),)
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Fatal error - change state stack pop not implemented.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:2713:32
     |
2713 |                 self.add_code(&format!("{}",if_or_else_if));
     |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `if_or_else_if.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:2721:28
     |
2721 |             self.add_code(&format!(" {{"));
     |                            ^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:2727:28
     |
2727 |             self.add_code(&format!("}}"));
     |                            ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:2746:24
     |
2746 |         self.add_code(&format!(";"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `";".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:2758:28
     |
2758 |             self.add_code(&format!("{}",separator));
     |                            ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:2790:30
     |
2790 |             output.push_str(&format!("{}",separator));
     |                              ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:2827:48
     |
2827 | ...                   self.add_code(&format!("e._return = "));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:2851:24
     |
2851 |         self.add_code(&format!(" else {{"));
     |                        ^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" else {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:2864:48
     |
2864 | ...                   self.add_code(&format!("e._return = ",));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:2883:24
     |
2883 |         self.add_code(&format!("}}"));
     |                        ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:2911:42
     |
2911 |                         self.errors.push(format!("Error - expression list is not testable."));
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Error - expression list is not testable.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:2918:39
     |
2918 |                 _ => self.errors.push(format!("TODO")),
     |                                       ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:2932:36
     |
2932 |                     self.add_code(&format!(" || "));
     |                                    ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" || ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:2942:47
     |
2942 |                         _ => self.errors.push(format!("TODO")),
     |                                               ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:2947:28
     |
2947 |             self.add_code(&format!(" {{"));
     |                            ^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:2953:28
     |
2953 |             self.add_code(&format!("}}"));
     |                            ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:2979:48
     |
2979 | ...                   self.add_code(&format!("e._return = "));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:3004:24
     |
3004 |         self.add_code(&format!(" else {{"));
     |                        ^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" else {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:3017:48
     |
3017 | ...                   self.add_code(&format!("e._return = "));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:3037:24
     |
3037 |         self.add_code(&format!("}}"));
     |                        ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:3047:26
     |
3047 |         self.errors.push(format!("Not implemented."));
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Not implemented.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:3073:42
     |
3073 |                         self.errors.push(format!("Error - expression list is not testable."));
     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Error - expression list is not testable.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:3078:39
     |
3078 |                 _ => self.errors.push(format!("TODO.")),
     |                                       ^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:3087:36
     |
3087 |                     self.add_code(&format!(" || "));
     |                                    ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" || ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:3097:47
     |
3097 |                         _ => self.errors.push(format!("TODO.")),
     |                                               ^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:3103:28
     |
3103 |             self.add_code(&format!(" {{"));
     |                            ^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:3109:28
     |
3109 |             self.add_code(&format!("}}"));
     |                            ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:3137:48
     |
3137 | ...                   self.add_code(&format!("e._return = "));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:3162:24
     |
3162 |         self.add_code(&format!(" else {{"));
     |                        ^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" else {".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:3175:48
     |
3175 | ...                   self.add_code(&format!("e._return = "));
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"e._return = ".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:3195:24
     |
3195 |         self.add_code(&format!("}}"));
     |                        ^^^^^^^^^^^^^ help: consider using `.to_string()`: `"}".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:3203:24
     |
3203 |         self.add_code(&format!("{}", match_pattern_node.match_pattern_number));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `match_pattern_node.match_pattern_number.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:3213:24
     |
3213 |         self.add_code(&format!("("));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:3216:28
     |
3216 |             self.add_code(&format!("{}",separator));
     |                            ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:3220:24
     |
3220 |         self.add_code(&format!(")"));
     |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:3232:26
     |
3232 |         output.push_str(&format!("("));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:3235:30
     |
3235 |             output.push_str(&format!("{}",separator));
     |                              ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:3239:26
     |
3239 |         output.push_str(&format!(")"));
     |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:3250:35
     |
3250 |                 => self.add_code(&format!("{}", literal_expression_node.value)),
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `literal_expression_node.value.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:3252:35
     |
3252 |                 => self.add_code(&format!("{}", literal_expression_node.value)),
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `literal_expression_node.value.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:3273:35
     |
3273 |             _ => self.errors.push(format!("TODO: visit_literal_expression_node")),
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO: visit_literal_expression_node".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:3286:34
     |
3286 |                 output.push_str(&format!("{}", literal_expression_node.value))
     |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `literal_expression_node.value.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:3304:34
     |
3304 |                 output.push_str(&format!("{}", literal_expression_node.value));
     |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `literal_expression_node.value.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:3306:35
     |
3306 |             _ => self.errors.push(format!("TODO: visit_literal_expression_node_to_string")),
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"TODO: visit_literal_expression_node_to_string".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:3316:24
     |
3316 |         self.add_code(&format!("{}",identifier_node.name.lexeme));
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `identifier_node.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/visitors/rust_visitor.rs:3325:26
     |
3325 |         output.push_str(&format!("{}",identifier_node.name.lexeme));
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `identifier_node.name.lexeme.to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/rust_visitor.rs:3674:9
     |
3674 |         output.push_str(";");
     |         ^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `output.push(';')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/rust_visitor.rs:3796:38
     |
3796 |             OperatorType::Negated => output.push_str("-"),
     |                                      ^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `output.push('-')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/rust_visitor.rs:3803:34
     |
3803 |             OperatorType::Not => output.push_str("!"),
     |                                  ^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `output.push('!')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: this function has too many arguments (9/7)
  --> src/frame_c/visitors/smcat_visitor.rs:32:5
   |
32 | /     pub fn new(   arcanium:Arcanum
33 | |                   , system_hierarchy:SystemHierarchy
34 | |                   , generate_exit_args:bool
35 | |                   , _generate_state_context:bool
...  |
39 | |                   , compiler_version:&str
40 | |                   , _comments:Vec<Token>) -> SmcatVisitor {
   | |_________________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments

warning: writing `&String` instead of `&str` involves a new object where a slice will do.
  --> src/frame_c/visitors/smcat_visitor.rs:70:41
   |
70 |     fn generate_states(&self, node_name:&String, is_system_node:bool, indent:usize, output:&mut String) {
   |                                         ^^^^^^^ help: change this to: `&str`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
  --> src/frame_c/visitors/smcat_visitor.rs:90:13
   |
90 | /             match output.rfind(",") {
91 | |             Some(location) => output.replace_range(location..location+1, ";"),
92 | |             None => ()
93 | |             };
   | |_____________^ help: try this: `if let Some(location) = output.rfind(",") { output.replace_range(location..location+1, ";") }`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match

warning: single-character string constant used as pattern
  --> src/frame_c/visitors/smcat_visitor.rs:90:32
   |
90 |             match output.rfind(",") {
   |                                ^^^ help: try using a `char` instead: `','`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

warning: writing `&String` instead of `&str` involves a new object where a slice will do.
   --> src/frame_c/visitors/smcat_visitor.rs:127:49
    |
127 |     fn format_action_name(&mut self,action_name:&String) -> String {
    |                                                 ^^^^^^^ help: change this to: `&str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: useless use of `format!`
   --> src/frame_c/visitors/smcat_visitor.rs:140:30
    |
140 |         self.code.push_str(&*format!("{}",s));
    |                              ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `s.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: unneeded `return` statement
   --> src/frame_c/visitors/smcat_visitor.rs:158:9
    |
158 |         return (0..self.dent).map(|_| "    ").collect::<String>()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(0..self.dent).map(|_| "    ").collect::<String>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
   --> src/frame_c/visitors/smcat_visitor.rs:164:9
    |
164 |         return (0..dent).map(|_| "    ").collect::<String>()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `(0..dent).map(|_| "    ").collect::<String>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.
   --> src/frame_c/visitors/smcat_visitor.rs:169:52
    |
169 |     fn visit_decl_stmts(&mut self, decl_stmt_types:&Vec<DeclOrStmtType>) {
    |                                                    ^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[DeclOrStmtType]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: this match could be replaced by its body itself
   --> src/frame_c/visitors/smcat_visitor.rs:178:29
    |
178 | / ...                   match expr_stmt_t {
179 | | ...                       _ => {}
180 | | ...                   }
    | |_______________________^ help: consider using the match body instead: `{}`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_single_binding

warning: useless use of `format!`
   --> src/frame_c/visitors/smcat_visitor.rs:253:31
    |
253 |         let _state_ref_code = format!("{}",self.format_target_state_name(target_state_name));
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `self.format_target_state_name(target_state_name).to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/smcat_visitor.rs:269:17
    |
269 |                 format!("{}", label.clone())
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `label.clone().to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/smcat_visitor.rs:272:17
    |
272 |                 format!("{}",self.event_handler_msg.clone())
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `self.event_handler_msg.clone().to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/smcat_visitor.rs:286:9
    |
286 |         format!("{}",state_name)
    |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `state_name.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
   --> src/frame_c/visitors/smcat_visitor.rs:306:9
    |
306 | /         match (&system_node).get_first_state() {
307 | |             Some(x) => {
308 | |                 self.first_state_name = x.borrow().name.clone();
309 | |                 self.add_code(&format!("initial,\n"));
...   |
312 | |             None => {},
313 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
    |
306 |         if let Some(x) = (&system_node).get_first_state() {
307 |             self.first_state_name = x.borrow().name.clone();
308 |             self.add_code(&format!("initial,\n"));
309 |             self.transitions.push_str(&format!("initial => \"{}\";\n", self.first_state_name));
310 |         }
    |

warning: useless use of `format!`
   --> src/frame_c/visitors/smcat_visitor.rs:309:32
    |
309 |                 self.add_code(&format!("initial,\n"));
    |                                ^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"initial,\n".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: length comparison to zero
   --> src/frame_c/visitors/smcat_visitor.rs:425:12
    |
425 |         if state_node.evt_handlers_rcref.len() > 0 {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!state_node.evt_handlers_rcref.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: redundant clone
   --> src/frame_c/visitors/smcat_visitor.rs:446:71
    |
446 |             self.event_handler_msg = format!("|{}|",message_node.name).to_string();
    |                                                                       ^^^^^^^^^^^^ help: remove this
    |
note: this value is dropped without further use
   --> src/frame_c/visitors/smcat_visitor.rs:446:38
    |
446 |             self.event_handler_msg = format!("|{}|",message_node.name).to_string();
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone

warning: useless use of `format!`
   --> src/frame_c/visitors/smcat_visitor.rs:491:24
    |
491 |         self.add_code(&format!(";"));
    |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `";".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/smcat_visitor.rs:510:34
    |
510 |                 output.push_str(&format!("."));
    |                                  ^^^^^^^^^^^^ help: consider using `.to_string()`: `".".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/smcat_visitor.rs:518:26
    |
518 |         output.push_str(&format!(")"));
    |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/smcat_visitor.rs:538:26
    |
538 |         output.push_str(&format!(")"));
    |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/smcat_visitor.rs:548:24
    |
548 |         self.add_code(&format!("("));
    |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/smcat_visitor.rs:552:28
    |
552 |             self.add_code(&format!("{}",separator));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/smcat_visitor.rs:557:24
    |
557 |         self.add_code(&format!(")"));
    |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/smcat_visitor.rs:567:26
    |
567 |         output.push_str(&format!("("));
    |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `"(".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/smcat_visitor.rs:571:30
    |
571 |             output.push_str(&format!("{}",separator));
    |                              ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/smcat_visitor.rs:576:26
    |
576 |         output.push_str(&format!(")"));
    |                          ^^^^^^^^^^^^ help: consider using `.to_string()`: `")".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/smcat_visitor.rs:586:24
    |
586 |         self.add_code(&format!(";"));
    |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `";".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/smcat_visitor.rs:609:24
    |
609 |         self.add_code(&format!("{}", state_ref.name));
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `state_ref.name.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/smcat_visitor.rs:684:24
    |
684 |         self.add_code(&format!(";"));
    |                        ^^^^^^^^^^^^ help: consider using `.to_string()`: `";".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/smcat_visitor.rs:854:30
    |
854 |             output.push_str(&format!("{}",separator));
    |                              ^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `separator.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/smcat_visitor.rs:868:31
    |
868 |             => self.add_code(&format!("{}", literal_expression_node.value)),
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `literal_expression_node.value.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/smcat_visitor.rs:870:31
    |
870 |             => self.add_code(&format!("{}", literal_expression_node.value)),
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `literal_expression_node.value.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
   --> src/frame_c/visitors/smcat_visitor.rs:894:34
    |
894 |                 output.push_str(&format!("{}", literal_expression_node.value))
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `literal_expression_node.value.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/visitors/smcat_visitor.rs:976:70
    |
976 |             FrameEventPart::Event { is_reference: _is_reference } => output.push_str("e"),
    |                                                                      ^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `output.push('e')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: calling `push_str()` using a single-character string literal
    --> src/frame_c/visitors/smcat_visitor.rs:1057:9
     |
1057 |         output.push_str(";");
     |         ^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `output.push(';')`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.
   --> src/frame_c/parser.rs:114:30
    |
114 |     pub(crate) fn new(tokens:&'a Vec<Token>, comments:&'a mut Vec<Token>, is_building_symbol_table:bool,
    |                              ^^^^^^^^^^^^^^ help: change this to: `&[Token]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)
   --> src/frame_c/parser.rs:144:5
    |
144 |     pub fn parse<'b>(&'b mut self) -> SystemNode {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(clippy::needless_lifetimes)]` on by default
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes

warning: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.
   --> src/frame_c/parser.rs:177:43
    |
177 |     fn match_token(&mut self, token_types:&Vec<TokenType>) -> bool {
    |                                           ^^^^^^^^^^^^^^^ help: change this to: `&[TokenType]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: calling `push_str()` using a single-character string literal
   --> src/frame_c/parser.rs:212:13
    |
212 |             self.processed_tokens.push_str(" ");
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `self.processed_tokens.push(' ')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str

warning: unneeded `return` statement
   --> src/frame_c/parser.rs:229:9
    |
229 |         return false;
    |         ^^^^^^^^^^^^^ help: remove `return`: `false`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: match expression looks like `matches!` macro
   --> src/frame_c/parser.rs:235:9
    |
235 | /         match self.peek().token_type {
236 | |             TokenType::EofTok => true,
237 | |             _ => false,
238 | |         }
    | |_________^ help: try this: `matches!(self.peek().token_type, TokenType::EofTok)`
    |
    = note: `#[warn(clippy::match_like_matches_macro)]` on by default
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro

warning: useless use of `format!`
   --> src/frame_c/parser.rs:291:55
    |
291 |              TokenType::EofTok => error_msg.push_str(&format!(" at end")),
    |                                                       ^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `" at end".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.
   --> src/frame_c/parser.rs:305:42
    |
305 |     fn synchronize(&mut self,sync_tokens:&Vec<TokenType>) -> bool {
    |                                          ^^^^^^^^^^^^^^^ help: change this to: `&[TokenType]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.
   --> src/frame_c/parser.rs:334:47
    |
334 |     fn follows(&self,token:&Token,follows_vec:&Vec<TokenType>) -> bool {
    |                                               ^^^^^^^^^^^^^^^ help: change this to: `&[TokenType]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: redundant pattern matching, consider using `is_err()`
   --> src/frame_c/parser.rs:378:20
    |
378 |             if let Err(_) =  self.consume(TokenType::ThreeTicksTok, "Expected '```'.") {
    |             -------^^^^^^------------------------------------------------------------- help: try this: `if self.consume(TokenType::ThreeTicksTok, "Expected '```'.").is_err()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching

warning: length comparison to zero
   --> src/frame_c/parser.rs:489:12
    |
489 |         if attributes.len() == 0 {
    |            ^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `attributes.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: unneeded `return` statement
   --> src/frame_c/parser.rs:523:9
    |
523 |         return Ok(AttributeNode::new(name,value));
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `Ok(AttributeNode::new(name,value))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: redundant pattern matching, consider using `is_err()`
   --> src/frame_c/parser.rs:510:16
    |
510 |         if let Err(_) = self.consume(TokenType::EqualsTok, "Expected '('") {
    |         -------^^^^^^----------------------------------------------------- help: try this: `if self.consume(TokenType::EqualsTok, "Expected '('").is_err()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching

warning: redundant clone
   --> src/frame_c/parser.rs:667:78
    |
667 |             let mut interface_method_symbol = InterfaceMethodSymbol::new(name.clone());
    |                                                                              ^^^^^^^^ help: remove this
    |
note: this value is dropped without further use
   --> src/frame_c/parser.rs:667:74
    |
667 |             let mut interface_method_symbol = InterfaceMethodSymbol::new(name.clone());
    |                                                                          ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone

warning: redundant clone
   --> src/frame_c/parser.rs:673:129
    |
673 |             let interface_method_symbol_t = InterfaceMethodSymbolT { interface_method_symbol_rcref:interface_method_symbol_rcref.clone() };
    |                                                                                                                                 ^^^^^^^^ help: remove this
    |
note: this value is dropped without further use
   --> src/frame_c/parser.rs:673:100
    |
673 |             let interface_method_symbol_t = InterfaceMethodSymbolT { interface_method_symbol_rcref:interface_method_symbol_rcref.clone() };
    |                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone

warning: redundant pattern matching, consider using `is_err()`
   --> src/frame_c/parser.rs:596:20
    |
596 |             if let Err(_) = self.consume(TokenType::LParenTok, "Expected '('") {
    |             -------^^^^^^----------------------------------------------------- help: try this: `if self.consume(TokenType::LParenTok, "Expected '('").is_err()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching

warning: redundant pattern matching, consider using `is_err()`
   --> src/frame_c/parser.rs:612:20
    |
612 |             if let Err(_) = self.consume(TokenType::RParenTok, "Expected ')'") {
    |             -------^^^^^^----------------------------------------------------- help: try this: `if self.consume(TokenType::RParenTok, "Expected ')'").is_err()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching

warning: unneeded `return` statement
   --> src/frame_c/parser.rs:802:9
    |
802 |         return Ok(None)
    |         ^^^^^^^^^^^^^^^ help: remove `return`: `Ok(None)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: length comparison to zero
   --> src/frame_c/parser.rs:798:12
    |
798 |         if parameters.len() > 0 {
    |            ^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!parameters.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
   --> src/frame_c/parser.rs:888:13
    |
888 | /             match self.action_decl() {
889 | |                 Ok(action_decl_node) =>  actions.push(action_decl_node),
890 | |                 Err(_) => {
891 | |
892 | |                 }
893 | |             }
    | |_____________^ help: try this: `if let Ok(action_decl_node) = self.action_decl() { actions.push(action_decl_node) }`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match

warning: redundant clone
   --> src/frame_c/parser.rs:947:32
    |
947 |             let s = action_name.clone();
    |                                ^^^^^^^^ help: remove this
    |
note: this value is dropped without further use
   --> src/frame_c/parser.rs:947:21
    |
947 |             let s = action_name.clone();
    |                     ^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone

warning: redundant clone
    --> src/frame_c/parser.rs:1072:59
     |
1072 |             let variable_symbol = VariableSymbol::new(name.clone(),type_node_opt,scope);
     |                                                           ^^^^^^^^ help: remove this
     |
note: this value is dropped without further use
    --> src/frame_c/parser.rs:1072:55
     |
1072 |             let variable_symbol = VariableSymbol::new(name.clone(),type_node_opt,scope);
     |                                                       ^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone

warning: redundant clone
    --> src/frame_c/parser.rs:1236:87
     |
1236 |                         system_hierarchy.add_node(state_name.clone(),target_state_name.clone());
     |                                                                                       ^^^^^^^^ help: remove this
     |
note: this value is dropped without further use
    --> src/frame_c/parser.rs:1236:70
     |
1236 |                         system_hierarchy.add_node(state_name.clone(),target_state_name.clone());
     |                                                                      ^^^^^^^^^^^^^^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone

warning: redundant clone
    --> src/frame_c/parser.rs:1407:51
     |
1407 |         let state_node = StateNode::new(state_name.clone(),
     |                                                   ^^^^^^^^ help: remove this
     |
note: this value is dropped without further use
    --> src/frame_c/parser.rs:1407:41
     |
1407 |         let state_node = StateNode::new(state_name.clone(),
     |                                         ^^^^^^^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone

warning: length comparison to zero
    --> src/frame_c/parser.rs:1284:12
     |
1284 |         if vars.len() > 0 {
     |            ^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!vars.is_empty()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: length comparison to zero
    --> src/frame_c/parser.rs:1312:12
     |
1312 |         if calls.len() > 0 {
     |            ^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!calls.is_empty()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
    --> src/frame_c/parser.rs:1352:29
     |
1352 | / ...                   match eh_opt {
1353 | | ...                       Some(eh) => {
1354 | | ...
1355 | | ...                           let eh_rcref = Rc::new(RefCell::new(eh));
...    |
1379 | | ...                       None => {},
1380 | | ...                   }
     | |_______________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1352 |                             if let Some(eh) = eh_opt {
1353 | 
1354 |                                 let eh_rcref = Rc::new(RefCell::new(eh));
1355 |                                 // find enter/exit event handlers
1356 |                                 {
1357 |                                     // new scope to make BC happy
   ...

warning: redundant clone
    --> src/frame_c/parser.rs:1695:46
     |
1695 |         Ok(Some(EventHandlerNode::new(st_name.clone(),
     |                                              ^^^^^^^^ help: remove this
     |
note: this value is dropped without further use
    --> src/frame_c/parser.rs:1695:39
     |
1695 |         Ok(Some(EventHandlerNode::new(st_name.clone(),
     |                                       ^^^^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
    --> src/frame_c/parser.rs:1611:25
     |
1611 | /                         match event_symbol_params_opt {
1612 | |                             Some(parameter_symbols)
1613 | |                                 => event_symbol_rcref.borrow_mut().params_opt = Some(parameter_symbols),
1614 | |                             None => {}
1615 | |                         }
     | |_________________________^ help: try this: `if let Some(parameter_symbols) = event_symbol_params_opt { event_symbol_rcref.borrow_mut().params_opt = Some(parameter_symbols) }`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match

warning: unneeded `return` statement
    --> src/frame_c/parser.rs:1738:13
     |
1738 |             return Err(ParseError::new("TODO"));
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `Err(ParseError::new("TODO"))`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: useless use of `format!`
    --> src/frame_c/parser.rs:1821:48
     |
1821 |                         self.error_at_current(&format!("Not a testable expression."));
     |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Not a testable expression.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/parser.rs:1843:48
     |
1843 |                         self.error_at_current(&format!("Not a testable expression."));
     |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Not a testable expression.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: useless use of `format!`
    --> src/frame_c/parser.rs:1865:48
     |
1865 |                         self.error_at_current(&format!("Not a testable expression."));
     |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Not a testable expression.".to_string()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: unneeded `return` statement
    --> src/frame_c/parser.rs:2003:17
     |
2003 |                 return self.is_testable_expression(first_expr_t);
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `self.is_testable_expression(first_expr_t)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/frame_c/parser.rs:2090:9
     |
2090 |         return Ok(BoolTestNode::new( conditional_branches, bool_test_else_node_opt));
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `Ok(BoolTestNode::new( conditional_branches, bool_test_else_node_opt))`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/frame_c/parser.rs:2143:9
     |
2143 | /         return match result {
2144 | |             Ok(branch_terminator_t_opt) => {
2145 | |                 Ok(BoolTestConditionalBranchNode::new(is_negated, expr_t, statements, branch_terminator_t_opt))
2146 | |             },
2147 | |             Err(parse_error) => Err(parse_error),
2148 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
2143 |         match result {
2144 |             Ok(branch_terminator_t_opt) => {
2145 |                 Ok(BoolTestConditionalBranchNode::new(is_negated, expr_t, statements, branch_terminator_t_opt))
2146 |             },
2147 |             Err(parse_error) => Err(parse_error),
2148 |         }
     |

warning: unneeded `return` statement
    --> src/frame_c/parser.rs:2162:9
     |
2162 | /         return match result {
2163 | |             Ok(branch_terminator_opt) => {
2164 | |                 Ok(BoolTestElseBranchNode::new(statements, branch_terminator_opt))
2165 | |             },
2166 | |             Err(parse_error) => Err(parse_error),
2167 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
2162 |         match result {
2163 |             Ok(branch_terminator_opt) => {
2164 |                 Ok(BoolTestElseBranchNode::new(statements, branch_terminator_opt))
2165 |             },
2166 |             Err(parse_error) => Err(parse_error),
2167 |         }
     |

warning: unneeded `return` statement
    --> src/frame_c/parser.rs:2199:13
     |
2199 |             return Ok(None);
     |             ^^^^^^^^^^^^^^^^ help: remove `return`: `Ok(None)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/frame_c/parser.rs:2254:9
     |
2254 |         return Ok(StringMatchTestNode::new( expr_t,conditional_branches, else_branch_opt));
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `Ok(StringMatchTestNode::new( expr_t,conditional_branches, else_branch_opt))`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/frame_c/parser.rs:2300:9
     |
2300 | /         return match result {
2301 | |             Ok(branch_terminator_t_opt) => {
2302 | |                 Ok(StringMatchTestMatchBranchNode::new(string_match_pattern_node, statements, branch_terminator_t_opt))
2303 | |             },
2304 | |             Err(parse_error) => Err(parse_error),
2305 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
2300 |         match result {
2301 |             Ok(branch_terminator_t_opt) => {
2302 |                 Ok(StringMatchTestMatchBranchNode::new(string_match_pattern_node, statements, branch_terminator_t_opt))
2303 |             },
2304 |             Err(parse_error) => Err(parse_error),
2305 |         }
     |

warning: unneeded `return` statement
    --> src/frame_c/parser.rs:2319:9
     |
2319 | /         return match result {
2320 | |             Ok(branch_terminator_opt) => {
2321 | |                 Ok(StringMatchTestElseBranchNode::new(statements, branch_terminator_opt))
2322 | |             },
2323 | |             Err(parse_error) => Err(parse_error),
2324 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
2319 |         match result {
2320 |             Ok(branch_terminator_opt) => {
2321 |                 Ok(StringMatchTestElseBranchNode::new(statements, branch_terminator_opt))
2322 |             },
2323 |             Err(parse_error) => Err(parse_error),
2324 |         }
     |

warning: redundant clone
    --> src/frame_c/parser.rs:2612:101
     |
2612 |                     let symbol_type_rcref_opt = self.arcanum.lookup(&id_node.name.lexeme,&var_scope).clone();
     |                                                                                                     ^^^^^^^^ help: remove this
     |
note: this value is dropped without further use
    --> src/frame_c/parser.rs:2612:49
     |
2612 |                     let symbol_type_rcref_opt = self.arcanum.lookup(&id_node.name.lexeme,&var_scope).clone();
     |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone

warning: redundant clone
    --> src/frame_c/parser.rs:2627:101
     |
2627 |                     let symbol_type_rcref_opt = self.arcanum.lookup(&id_node.name.lexeme,&var_scope).clone();
     |                                                                                                     ^^^^^^^^ help: remove this
     |
note: this value is dropped without further use
    --> src/frame_c/parser.rs:2627:49
     |
2627 |                     let symbol_type_rcref_opt = self.arcanum.lookup(&id_node.name.lexeme,&var_scope).clone();
     |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone

warning: redundant clone
    --> src/frame_c/parser.rs:2645:97
     |
2645 |                 let symbol_type_rcref_opt = self.arcanum.lookup(&id_node.name.lexeme,&var_scope).clone();
     |                                                                                                 ^^^^^^^^ help: remove this
     |
note: this value is dropped without further use
    --> src/frame_c/parser.rs:2645:45
     |
2645 |                 let symbol_type_rcref_opt = self.arcanum.lookup(&id_node.name.lexeme,&var_scope).clone();
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone

warning: redundant clone
    --> src/frame_c/parser.rs:2666:97
     |
2666 |                 let symbol_type_rcref_opt = self.arcanum.lookup(&id_node.name.lexeme,&var_scope).clone();
     |                                                                                                 ^^^^^^^^ help: remove this
     |
note: this value is dropped without further use
    --> src/frame_c/parser.rs:2666:45
     |
2666 |                 let symbol_type_rcref_opt = self.arcanum.lookup(&id_node.name.lexeme,&var_scope).clone();
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone

warning: unneeded `return` statement
    --> src/frame_c/parser.rs:2754:9
     |
2754 |         return Ok(None);
     |         ^^^^^^^^^^^^^^^^ help: remove `return`: `Ok(None)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/frame_c/parser.rs:2919:9
     |
2919 |         return Ok(Some(CallChainLiteralExprT {call_chain_expr_node:call_chain_literal_expr_node}));
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `Ok(Some(CallChainLiteralExprT {call_chain_expr_node:call_chain_literal_expr_node}))`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: redundant clone
    --> src/frame_c/parser.rs:2930:98
     |
2930 |         symbol_type_rcref_opt = self.arcanum.lookup(&identifier_node.name.lexeme,&explicit_scope).clone();
     |                                                                                                  ^^^^^^^^ help: remove this
     |
note: this value is dropped without further use
    --> src/frame_c/parser.rs:2930:33
     |
2930 |         symbol_type_rcref_opt = self.arcanum.lookup(&identifier_node.name.lexeme,&explicit_scope).clone();
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone

warning: unneeded `return` statement
    --> src/frame_c/parser.rs:2990:9
     |
2990 |         return Ok(method_call_expr_node);
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `Ok(method_call_expr_node)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/frame_c/parser.rs:3131:9
     |
3131 | /         return Ok(Some(StatementType::TransitionStmt {
3132 | |             transition_statement: TransitionStatementNode {
3133 | |                 target_state_context_t: state_context_t,
3134 | |                 exit_args_opt,
3135 | |                 label_opt:transition_label,
3136 | |             }}
3137 | |         ));
     | |___________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
3131 |         Ok(Some(StatementType::TransitionStmt {
3132 |             transition_statement: TransitionStatementNode {
3133 |                 target_state_context_t: state_context_t,
3134 |                 exit_args_opt,
3135 |                 label_opt:transition_label,
3136 |             }}
   ...

warning: unneeded `return` statement
    --> src/frame_c/parser.rs:3162:9
     |
3162 | /         return Ok(Some(StatementType::ChangeStateStmt {
3163 | |             change_state_stmt: ChangeStateStatementNode {
3164 | |                 state_context_t,
3165 | |                 label_opt,
3166 | |             }}
3167 | |         ));
     | |___________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
3162 |         Ok(Some(StatementType::ChangeStateStmt {
3163 |             change_state_stmt: ChangeStateStatementNode {
3164 |                 state_context_t,
3165 |                 label_opt,
3166 |             }}
3167 |         ))
     |

warning: unneeded `return` statement
    --> src/frame_c/parser.rs:3214:9
     |
3214 |         return Ok(NumberMatchTestNode::new( expr_t,conditional_branches, else_branch_opt));
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `Ok(NumberMatchTestNode::new( expr_t,conditional_branches, else_branch_opt))`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
    --> src/frame_c/parser.rs:3260:9
     |
3260 | /         return match result {
3261 | |             Ok(branch_terminator_t_opt) => {
3262 | |                 Ok(NumberMatchTestMatchBranchNode::new(match_numbers, statements, branch_terminator_t_opt))
3263 | |             },
3264 | |             Err(parse_error) => Err(parse_error),
3265 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
3260 |         match result {
3261 |             Ok(branch_terminator_t_opt) => {
3262 |                 Ok(NumberMatchTestMatchBranchNode::new(match_numbers, statements, branch_terminator_t_opt))
3263 |             },
3264 |             Err(parse_error) => Err(parse_error),
3265 |         }
     |

warning: unneeded `return` statement
    --> src/frame_c/parser.rs:3278:9
     |
3278 | /         return match result {
3279 | |             Ok(branch_terminator_opt) => {
3280 | |                 Ok(NumberMatchTestElseBranchNode::new(statements, branch_terminator_opt))
3281 | |             },
3282 | |             Err(parse_error) => Err(parse_error),
3283 | |         }
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
3278 |         match result {
3279 |             Ok(branch_terminator_opt) => {
3280 |                 Ok(NumberMatchTestElseBranchNode::new(statements, branch_terminator_opt))
3281 |             },
3282 |             Err(parse_error) => Err(parse_error),
3283 |         }
     |

warning: writing `&String` instead of `&str` involves a new object where a slice will do.
  --> src/frame_c/utils.rs:19:43
   |
19 |     pub fn add_child(&mut self,child_name:&String)  {
   |                                           ^^^^^^^ help: change this to: `&str`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: writing `&String` instead of `&str` involves a new object where a slice will do.
  --> src/frame_c/utils.rs:24:46
   |
24 |     pub fn remove_child(&mut self,child_name:&String) {
   |                                              ^^^^^^^ help: change this to: `&str`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: redundant clone
  --> src/frame_c/utils.rs:52:57
   |
52 |         let parent_node_name = parent_node_name_original.clone();
   |                                                         ^^^^^^^^ help: remove this
   |
note: this value is dropped without further use
  --> src/frame_c/utils.rs:52:32
   |
52 |         let parent_node_name = parent_node_name_original.clone();
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone

warning: writing `&String` instead of `&str` involves a new object where a slice will do.
  --> src/frame_c/utils.rs:83:41
   |
83 |     fn set_parent(&mut self, node_name: &String, new_parent_name:&String) {
   |                                         ^^^^^^^ help: change this to: `&str`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: writing `&String` instead of `&str` involves a new object where a slice will do.
  --> src/frame_c/utils.rs:83:66
   |
83 |     fn set_parent(&mut self, node_name: &String, new_parent_name:&String) {
   |                                                                  ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg
help: change this to
   |
83 |     fn set_parent(&mut self, node_name: &String, new_parent_name:&str) {
   |                                                                  ^^^^
help: change `new_parent_name.clone()` to
   |
95 |                 node.parent_name = new_parent_name.to_string();
   |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`
   --> src/frame_c/utils.rs:102:9
    |
102 | /         match self.index.get_mut(&current_parent_name) {
103 | |             Some(current_parent_node) => {
104 | |                 current_parent_node.remove_child(node_name);
105 | |             },
...   |
108 | |             }
109 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
    |
102 |         if let Some(current_parent_node) = self.index.get_mut(&current_parent_name) {
103 |             current_parent_node.remove_child(node_name);
104 |         }
    |

warning: writing `&String` instead of `&str` involves a new object where a slice will do.
   --> src/frame_c/utils.rs:133:45
    |
133 |     pub(crate) fn get_node(&self, node_name:&String) -> Option<&Node> {
    |                                             ^^^^^^^ help: change this to: `&str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: 1430 warnings emitted

warning: writing `&String` instead of `&str` involves a new object where a slice will do.
  --> src/main.rs:37:60
   |
37 | pub fn run_file(filename:&std::path::PathBuf,output_format:&String) -> Result<(), RunError> {
   |                                                            ^^^^^^^ help: change this to: `&str`
   |
   = note: `#[warn(clippy::ptr_arg)]` on by default
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: useless use of `format!`
  --> src/main.rs:47:23
   |
47 |     Exe::debug_print(&format!("{}", &contents));
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `&contents.to_string()`
   |
   = note: `#[warn(clippy::useless_format)]` on by default
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

warning: 2 warnings emitted

    Finished dev [unoptimized + debuginfo] target(s) in 0.07s
